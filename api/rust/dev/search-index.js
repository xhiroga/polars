var searchIndex = new Map(JSON.parse('[["polars",{"t":"","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","StructChunked","__clone_box","_apply_fields","_can_fast_explode","_sum_as_f64","add","","","","","","","","","","","","add_to","agg_list","","","","","","","","all","all_kleene","amortized_iter","","amortized_iter_with_name","","any","any_kleene","append","apply","","","","","","apply_amortized","apply_amortized_generic","","apply_amortized_same_type","apply_as_ints","","apply_in_place","apply_into_string_amortized","apply_kernel","","","","apply_kernel_cast","","","","apply_mut","","","apply_nonnull_values_generic","apply_to_inner","","apply_to_slice","","","","","","apply_values","","","","","","apply_views","arg_sort","","","","","","arg_sort_multiple","","","","","arg_unique","","","","","arithmetic","as_array","as_binary","","as_list","as_ref","as_ref_dtype","as_string","","binary_zip_and_apply_amortized","bitand","","","bitor","","","bitxor","","","borrow","","borrow_mut","","boxed_metadata_dyn","builder","cast","","cast_and_apply_in_place","cast_unchecked","","","","","","","cast_with_options","","","","","","","","checked_div","checked_div_num","chunk_lengths","","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","concat_compact","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","","deref_mut","","div","","","","divide","drop","","","drop_nulls","dtype","equal","","","","","","","","","","equal_missing","","","","","","","","","","explode_and_offsets","","extend","field_by_name","fields_as_series","fill_null_with_values","","","filter","","","","first","first_non_null","float","fmt","","","","","","","for_each","for_each_amortized","","from","","","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_columns","from_iter","","","","","","","","","","","","from_iter_options","","","","","from_iter_trusted_length","","","","","","","","","","","","from_iter_values","","","","","from_iterator_par","from_par_iter","","","","","","","","from_par_iter_with_dtype","from_series","from_slice","","","","","from_slice_options","","","","","from_trusted_len_iter_rev","","from_vec","from_vec_validity","full","","","","","","","","full_null","","","","","","","","","full_null_like","full_null_with_dtype","","get","get_any_value","","","","","","","","","get_any_value_unchecked","","","","","","","","","get_as_series","","get_distinct_count","get_fast_explode_list","get_flags","get_inner","","get_max_value","get_min_value","get_object","get_object_unchecked","get_row_encoded","get_row_encoded_array","get_unchecked","get_values_size","","","","group_tuples","","","","","","","","group_tuples_perfect","gt","","","","","","","gt_eq","","","","","","","has_nulls","head","init","","init_rand","inner_dtype","","interior_mut_metadata","into","","into_column","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","","","","","","","","into_no_null_iter","into_series","","into_time","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","join_compact","last","last_non_null","layout","legacy_div","","legacy_div_scalar","","legacy_div_scalar_lhs","","len","","lhs_div","lhs_rem","lhs_sub","limit","lt","","","","","","","lt_eq","","","","","","","max","","max_reduce","","","","mean","","median","","","median_reduce","","","merge_metadata","metadata","","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","","min_max","min_reduce","","","","mmap_slice","","mul","","","","multiply","n_chunks","n_unique","","","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","","","","","","","","","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not","","not_equal","","","","","","","","","","not_equal_missing","","","","","","","","","","null_count","object","offsets","","ops","par_iter","","par_iter_indexed","","prod_reduce","prune_empty_chunks","quantile","","","quantile_reduce","","","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","reinterpret_signed","","","","","","","","","","","reinterpret_unsigned","","","","","","","","","","","rem","","","","remainder","rename","reverse","","","","","","","","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","","","scatter_single","","","","scatter_with","","","","set","","","","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","","","","","","","","","shift_and_fill","","","","","","","","shrink_to_fit","slice","","sort","","","","","","sort_with","","","","","","split_at","","std","std_reduce","","","struct_fields","sub","","","","subtract","sum","","sum_reduce","","","tail","take","","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","","","","","","","","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","","to_ndarray","","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","","true_div_scalar","","true_div_scalar_lhs","","try_apply_amortized","try_apply_amortized_generic","","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_fields","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","","try_from_chunk_iter","try_into","","try_zip_and_apply_amortized","type_id","","unique","","","","","unnest","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","","","vec_hash","","","","","","","","","","","","","","","","vec_hash_combine","","","","","","","","","","","","","","","","vzip","","width","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_outer_validity","with_outer_validity_chunked","with_sorted_flag","wrapping_abs","","wrapping_add","","wrapping_add_scalar","","wrapping_floor_div","","wrapping_floor_div_scalar","","wrapping_floor_div_scalar_lhs","","wrapping_mod","","wrapping_mod_scalar","","wrapping_mod_scalar_lhs","","wrapping_mul","","wrapping_mul_scalar","","wrapping_neg","","wrapping_sub","","wrapping_sub_scalar","","wrapping_sub_scalar_lhs","","wrapping_trunc_div","","wrapping_trunc_div_scalar","","wrapping_trunc_div_scalar_lhs","","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_outer_validity","zip_with","","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","","","","append_array","append_empty","","append_iter","","append_iter_values","append_null","","","","","","","","","","","","","append_opt_array","append_opt_series","","append_opt_slice","append_option","","append_series","","","","","","","","append_slice","append_trusted_len_iter","","append_value","","","","append_values_iter","","borrow","","","","","","","","","","","borrow_mut","","","","","","","","","","","builder","clone","","","","clone_into","","","","clone_to_uninit","","","","default","","deref","","","","","","","","","","","deref_mut","","","","","","","","","","","drop","","","","","","","","","","","fast_explode","","","","","field","","","","","finish","","","","","","","","","","fixed_size_list","from","","","","","","","","","","","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","","","","","","","","","","","inner_array","","","","","into","","","","","","","","","","","list","new","","","","","","","","","","","new_with_values_type","shrink_to_fit","","","","to_owned","","","","try_from","","","","","","","","","","","try_into","","","","","","","","","","","type_id","","","","","","","","","","","vzip","","","","","","","","","","","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","borrow","","","borrow_mut","","","deref","","","deref_mut","","","drop","","","from","","","init","","","into","","","into_iter","","","new","","next","","","next_back","","","par","size_hint","","","try_from","","","try_into","","","type_id","","","vzip","","","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","","","","","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","","","","","borrow_mut","","","","","","","boxed_upcast","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","collect_cheap_metadata","complement","","contains","","default","","","","deref","","","","","","","","deref_mut","","","","","","","difference","","disabled","distinct_count","","","distinct_count_opt","drop","","","","","","","empty","","enabled","eq","","experimental_enabled","extend","","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","","","","","","","","","","","","from","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","get_distinct_count","get_fast_explode_list","","get_flags","","","get_max_value","get_min_value","get_mut","get_sorted_flag","init","","","","","","","insert","","intersection","","intersects","","into","","","","","","","into_iter","","is_all","","is_empty","","","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","","iter_names","","log","logfile","max_value","","","max_value_opt","merge","min_value","","","min_value_opt","new","not","","read","remove","","set","","set_distinct_count","set_fast_explode_list","","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","","sorted","sorted_opt","sub","","sub_assign","","symmetric_difference","","take","to_owned","","","","","toggle","","try_from","","","","","","","try_into","","","","","","","try_read","try_write","type_id","","","","","","","union","","upcast","vzip","","","","","","","with_cheap_metadata","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","equal","fmt","from","","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","","iter","","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","","to_owned","try_arr_from_iter","","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","","validity","value","value_unchecked","","values_iter","","vzip","with_validity","","with_validity_typed","ObjectChunkedBuilder","append_null","","append_option","append_value","","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompareEq","ChunkCompareIneq","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","","Max","MaxBound","Mean","Min","MinBound","None","One","Reinterpret","SlicedArray","Some","SortMultipleOptions","SortOptions","Zero","__clone_box","","","_sum_as_f64","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","","","borrow_mut","","","cast","cast_unchecked","cast_with_options","clone","","","clone_into","","","clone_to_uninit","","","default","","deref","","","deref_mut","","","descending","","drop","","","eq","","","equal","equal_missing","equivalent","","","","","","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","","","from","","","","","full","","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","","","init","","","into","","","is_elementwise","is_first_distinct","is_last_distinct","lt","lt_eq","maintain_order","","max","mean","median","min","min_max","multithreaded","","n_unique","new","","new_from_index","not_equal","not_equal_missing","nulls_last","","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","","","try_from","","","try_into","","","type_id","","","unique","var","vzip","","","with_maintain_order","","with_multithreaded","","with_nulls_last","","with_nulls_last_multi","with_order_descending","","with_order_descending_multi","with_order_reversed","","zip","zip_with","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","","maintain_order","","multithreaded","","nulls_last","","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","validate_time_zone","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","Any","AnyValue","Array","","","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","","Date32","Date64","DateChunked","DateType","Datetime","","DatetimeChunked","DatetimeOwned","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Dimension","Duration","","","DurationChunked","DurationType","EMPTY","EMPTY_REF","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","Infer","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","ReshapeDimension","RevMapping","Second","Specified","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","","","StructOwned","StructType","Time","","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_can_fast_unique","_iter_struct_av","_materialize_struct_av","_with_fast_unique","add","","add_to","","","","","","","","","","","","","","","","append","","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","array_leaf_dtype","as_borrowed","as_date_iter","as_datetime_iter","as_ref","","","","","","as_ref_dtype","as_slice","as_str","as_time_iter","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","boxed","build_local","call_categorical_merge_operation","cast","","cast_leaf","cast_time_unit","","cast_with_options","","","","","","","categorical","checked_div","","","","","","","","","","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cmp","","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","","contains_categoricals","contains_objects","contains_views","create_enum_dtype","days","default","","","","","","","","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","div","divide","","","","","","","","","","","","","drain_iter_and_finish","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dtype","","","","","","","","","","encode_hex","encode_hex_upper","enum_","eq","","","","","","","","","","","","","eq_missing","equal","","","equal_missing","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","field","find","finish","","","fmt","","","","","","","","","","","","","","","","","","","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_arrow","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_iter","","","","","","","","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_static","from_str","from_string","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","","get","","","","get_any_value","","","","","","","get_any_value_unchecked","","","","","","","get_categories","get_dtype","","","","","","","","","","","","","","","","","","","","","","","","","","get_optional","get_or_infer","get_or_infer_with","get_rev_map","get_shape","get_str","get_unchecked","","gt","","","gt_eq","","","hash","","","","","","","","","hash_impl","hour","hours","idx","implode","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner_dtype","","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","","into_iter","into_scalar","into_series","","","","","","into_static","into_string","is_array","is_binary","is_bool","is_boolean","is_categorical","is_date","is_decimal","is_empty","is_enum","","is_float","","is_global","is_integer","","is_known","is_list","is_local","is_logical","is_nan","is_nested","","is_nested_null","","is_null","","is_numeric","","is_object","is_ord","is_primitive","is_signed_integer","","is_string","is_struct","is_temporal","is_unsigned_integer","","is_view","iter","iter_str","last","leaf_dtype","len","","lit","lt","","","lt_eq","","","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max_reduce","merge_dtypes","merge_map","microseconds","milliseconds","min_reduce","minute","minutes","mul","multiply","","","","","","","","","","","","","n_unique","name","","","nanosecond","nanoseconds","new","","","","","","","","","","","","","","","new_dimension","new_logical","newest","next","not_equal","","","not_equal_missing","","","null_count","oldest","parse_from_str_slice","","partial_cmp","","","","physical","","precision","register_value","remainder","","","","","","","","","","","","","round","","same_src","scale","second","seconds","set_name","set_time_unit","","set_time_unit_and_time_zone","set_time_zone","size_hint","sort","sort_with","str_value","strftime","","","strict_cast","sub","subtract","","","","","","","","","","","","","time_unit","","time_zone","to_arrow","","","","to_arrow_field","to_ascii","to_enum","to_fixed_size_list","to_global","to_local","to_logical_type","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_scale","to_string","","","","","","","","tot_eq","truncate","","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_strict_cast","try_to_arrow","try_to_compact_string","","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","underlying_physical_type","unique","uses_lexical_ordering","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","with_capacity","","with_validity_typed","write_char","write_fmt","write_str","zero_sum","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","EnumChunkedBuilder","append_enum","append_null","append_str","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","eager","lazy","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","","","borrow_mut","","","constants","context","context_trace","deref","","","","deref_mut","","","drop","","","feature_gated","fmt","","","","","from","","","","","","","","","","get_warning_function","init","","","into","","","map_err","new_static","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","","try_from","","","try_into","","","try_to_compact_string","","type_id","","","vzip","","","wrap_msg","error","","msg","","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","","","_add_columns","_add_series","_apply_columns","_apply_columns_par","_filter_seq","_new_no_checks_impl","_select_impl","_select_impl_unchecked","_select_with_schema_impl","_slice_and_realloc","_to_metadata","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","","","","","borrow_mut","","","","","chunk_lengths","clear","clone","","","clone_into","","","clone_to_uninit","","","column","","columns","default","","deref","","","","","deref_mut","","","","","drop","","","","","","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","","equals","equals_missing","equivalent","","","estimated_size","explode","","explode_impl","extend","fields","fill_null","filter","fmt","","","","from","","","","","from_iter","","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_column_names_str","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","","","","","","","","init","","","","","insert_column","into","","","","","into_iter","","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","","iter_chunks_physical","lazy","len","materialized_column_iter","max_horizontal","mean_horizontal","min_horizontal","n_chunks","","new","new_no_checks","new_no_length_checks","new_with_broadcast","new_with_broadcast_no_checks","next","","null_count","par_materialized_column_iter","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_columns","select_physical","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size","size_hint","","slice","","slice_par","sort","sort_in_place","split_at","","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_columns","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","","","to_string","transpose","transpose_impl","try_apply","try_apply_at_idx","try_from","","","","","","","try_from_rows_iter_and_schema","try_get_column_index","try_into","","","","","try_to_compact_string","type_id","","","","","unique","unique_impl","unique_stable","unnest","upsample","upsample_stable","vstack","vstack_mut","vstack_mut_unchecked","vzip","","","","","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","Column","IntoColumn","Scalar","ScalarColumn","Series","__clone_box","","add","","","","agg_first","agg_last","agg_list","agg_max","agg_mean","agg_median","agg_min","agg_n_unique","agg_quantile","agg_sum","agg_var","append","arg_sort","array","as_materialized_series","","as_scalar_column","as_series","as_single_value_series","binary","binary_offset","bit_repr","bitand","","","bitor","","bitxor","","bool","borrow","","borrow_mut","","cast","","cast_unchecked","","cast_with_options","","categorical","clear","clone","","clone_into","","clone_to_uninit","","date","datetime","decimal","default","deref","","deref_mut","","div","","","","divide","drop","","drop_nulls","dtype","","duration","eq","equal","equal_missing","equals","equals_missing","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","","from","","","","from_single_value_series","full_null","gather_every","get","get_data_ptr","get_flags","get_metadata","get_object","get_unchecked","gt","gt_eq","has_nulls","","head","i16","i32","i64","i8","idx","init","","into","","into_column","","","into_frame","into_materialized_series","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_sorted_flag","lazy_as_materialized_series","len","","list","lt","lt_eq","max_reduce","min_reduce","mul","","","","name","","new","","new_empty","","new_from_index","new_scalar","not_equal","not_equal_missing","null_count","phys_iter","product","rechunk","rem","","","","rename","","reshape_array","reshape_list","resize","reverse","sample_frac","sample_n","scalar","set_sorted_flag","shift","shrink_to_fit","shuffle","slice","sort","split_at","str","strict_cast","","struct_","sub","","","","tail","take","take_materialized_series","","take_slice","take_slice_unchecked","take_unchecked","to_owned","","to_physical_repr","to_series","try_array","try_binary","try_binary_offset","try_bool","try_categorical","try_date","try_datetime","try_decimal","try_duration","try_f32","try_f64","try_from","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","try_list","try_str","try_struct","try_u16","try_u32","try_u64","try_u8","type_id","","u16","u32","u64","u8","unique","unique_stable","unit_scalar_from_series","vec_hash","vec_hash_combine","vzip","","with_name","wrapping_trunc_div_scalar","zip_with","zip_with_same_type","UnpivotArgsIR","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","index","init","into","on","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","","SlicedGroups","Std","Sum","Var","__clone_box","","","","agg_list","aggregations","all","apply","as_list_chunked","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","count","default","","deref","","","","","","","","","deref_mut","","","","","","","","df","drive_unindexed","drop","","","","","","","","","eq","","equivalent","","","","","","expr","first","","","first_mut","fmt","","","","","fmt_group_by_column","from","","","","","","","","","","","","","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","","","","","","","","into","","","","","","","","into_idx","into_iter","","","into_par_iter","","","is_empty","","is_sorted_flag","iter","","keys","keys_sliced","last","len","","max","mean","median","min","n_unique","new","","next","nth","par_apply","par_iter","","quantile","select","slice","sort","","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","","","","to_string","try_from","","","","","","","","try_into","","","","","","","","try_to_compact_string","type_id","","","","","","","","unroll","unwrap_idx","unwrap_slice","var","vzip","","","","","","","","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","","AnyValueBuffer","AnyValueBufferTrusted","Boolean","","Date","Datetime","Duration","Float32","","Float64","","Int16","","Int32","","Int64","","Int8","","Null","","Row","String","","Struct","Time","UInt16","","UInt32","","UInt64","","UInt8","","__clone_box","","","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","coerce_dtype","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","","fmt","from","","","","","infer_schema","init","","","into","","","into_series","","new","","","reset","","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","concat_df_diagonal","concat_df_horizontal","Abs","Add","Agg","AggExpr","AggGroups","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Any","","","","AnyHorizontal","AnyValue","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","","","","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","","BackwardFill","Base64Encode","BaseUtcOffset","BatchedCsvReader","BatchedParquetReader","Binary","","","","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","","","","","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","","Bounds","BoundsIter","Brotli","BrotliLevel","C","CLUSTER_WITH_COLUMNS","COLLAPSE_JOINS","COMM_SUBEXPR_ELIM","COMM_SUBPLAN_ELIM","Cache","Cast","CastTimeUnit","CatIter","Categorical","","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalFunction","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalOwned","CategoricalType","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompareEq","ChunkCompareIneq","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","","ColumnBinaryUdf","ColumnNotFound","Columns","","ColumnsUdf","Combine","CommentPrefix","CompatLevel","ComputeError","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Context","ConvertTimeZone","Count","","CountMatches","Cross","CrossJoin","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","","DataType","","Date","","","","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","","","DatetimeArgs","DatetimeChunked","DatetimeFunction","DatetimeMethods","DatetimeOwned","DatetimeType","Day","Decimal","","","","Decimal256","DecimalChunked","DecimalType","Dense","DfTake","Dictionary","Diff","Dimension","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","","","","","","DurationArgs","DurationChunked","DurationMethods","DurationType","DynamicGroupOptions","EAGER","Earliest","EndsWith","Enum","","EnumOwned","Eq","EqValidity","Err","Exclude","Excluded","ExclusiveOr","Explode","","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","Extract","ExtractAll","ExtractGroups","FAST_PROJECTION","FILE_CACHING","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","","FieldByIndex","FieldByName","FieldRef","FieldsMapper","FieldsNameMapper","FileMetadata","FileMetadataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","","Find","First","","","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","","Float16","Float32","","","","Float32Chunked","Float32Type","Float64","","","","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","Full","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","Generic","GetAnyValue","GetCategories","GetOutput","Global","GlobalRevMapMerger","GroupBy","","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","GtEq","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","","Head","HexEncode","Higher","Hour","IDX_DTYPE","INTEGER_RE","IO","IR","IS_ARROW","Idx","","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","","InProcessQuery","IndexColumn","IndexOrder","IndexToUsize","Infer","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","","Int128Chunked","Int128Type","Int16","","","","Int16Chunked","Int16Type","Int32","","","","Int32Chunked","Int32Type","Int64","","","","Int64Chunked","Int64Type","Int8","","","","Int8Chunked","Int8Type","InterSect","Interpolate","InterpolateBy","InterpolationMethod","Interval","IntoColumn","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoScalar","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReader","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","","IsIn","IsInfinite","IsLastDistinct","","IsLeapYear","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","IsObject","IsStruct","IsoYear","Item","","Join","","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonEncode","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","","","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","Left","","","","","","LeftJoinIds","Len","LenBytes","LenChars","Lexical","LhsNumOps","Linear","","List","","","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","LowerBound","Lowercase","Lt","LtEq","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","","","","MaxBound","MaxHorizontal","Mean","","","MeanHorizontal","Median","","Microsecond","","Microseconds","Midpoint","Millennium","Millisecond","","Milliseconds","Min","","","","MinBound","MinHorizontal","Minus","Minute","Mode","Modulus","Monday","Month","Multi","MultipleFields","Multiply","NEW_STREAMING","NULL","NUnique","","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","","Nanoseconds","Native","Nearest","","","Necessary","Negate","NestedType","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","","","","","Not","NotEq","NotEqValidity","Nth","Null","","","","","","","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","Ok","One","OneToMany","OneToOne","Operator","OptFlags","Or","Ordinal","OrdinalDay","OtherScalar","Out","OutOfBounds","Output","Over","OwnedBatchedCsvReader","OwnedObject","OwnedPhysical","POLARS_TEMP_DIR_BASE_PATH","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ParallelStrategy","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","Plus","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PowFunction","Prefiltered","PrefixFields","PrimitiveChunkedBuilder","Quantile","","","QuantileAggSeries","QuantileInterpolOptions","Quarter","QuoteStyle","ROW_ESTIMATE","Raise","","Random","","Range","","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","ReshapeDimension","RevMapping","Reverse","","Right","","","","","","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","RollingFnParams","RollingGroupOptions","RollingOptionsDynamicWindow","RollingOptionsFixedWindow","RollingQuantileParams","RollingSeries","RollingVarParams","Root","Round","","RoundSF","RoundSeries","RowGroupIterColumns","RowGroups","SIMPLIFY_EXPR","SLICE_PUSHDOWN","SQLInterface","SQLSyntax","STREAMING","Saturday","Scalar","","","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaExt","SchemaFieldNotFound","SchemaMismatch","SchemaNamesAndDtypes","SchemaRef","SearchSortedSide","Second","","Select","Selector","","SerReader","SerWriter","SerializeOptions","Series","","","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesSealed","SeriesTrait","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","","","","","SlicedArray","SlicedGroups","Snappy","Some","Sort","","SortBy","SortMultipleOptions","SortOptions","SpecialEq","Specified","Split","SplitExact","SplitN","SplitNChars","Sqrt","StartBy","StartsWith","StaticArray","StatisticsOptions","Std","","Str","StrCat","String","","","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringFunction","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","Struct","","","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructFunction","StructNameSpace","StructOwned","StructType","Sub","SubPlan","SuffixFields","Sum","","SumHorizontal","Sunday","TYPE_COERCION","Tail","TakeChunked","TemporalExpr","TemporalFunction","TemporalMethods","Ternary","Then","Thursday","Time","","","","Time32","Time64","TimeChunked","TimeMethods","TimeStamp","TimeType","TimeUnit","TimeZone","Timestamp","Titlecase","ToDecimal","ToDummies","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Truncate","Tuesday","UInt16","","","","UInt16Chunked","UInt16Type","UInt32","","","","UInt32Chunked","UInt32Type","UInt64","","","","UInt64Chunked","UInt64Type","UInt8","","","","UInt8Chunked","UInt8Type","URL_ENCODE_CHAR_SET","UdfSchema","Uncompressed","Union","","UnionArgs","Unique","UniqueKeepStrategy","Unknown","","UnknownKind","UnpivotArgsDSL","UnpivotArgsIR","UpperBound","Uppercase","UserDefinedFunction","Utf8","","Utf8View","ValueCounts","ValueIterT","ValueT","Var","","","VarAggSeries","VecHash","Wednesday","Week","WeekDay","When","Wildcard","Window","","WindowBound","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","Year","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_coalesce_full_join","_collect_post_opt","_create_left_df_from_slice","_full_join_from_series","_internal","_join_suffix_name","_rename_fields_impl","_split_at_unchecked","_sum_as_f64","","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_eager","_with_predicate","abs","","add","","","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","","","all_horizontal","allocator","allow_missing_columns","allow_parallel","","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","anonymous_scan","any","any_horizontal","append","append_null","","append_opt_series","append_option","append_series","append_value","apply","","","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_to_slice","apply_values","arange","arced","arg_max","","","","arg_min","","","","arg_sort","","","arg_sort_by","arg_sort_multiple","arg_unique","","","arg_where","args","","arity","arr","arr_from_iter","","","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","","","array","arrow_schema","as_any","","","","as_any_mut","","as_any_value","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_fd","as_list","as_ptr","as_raw_fd","as_ref","","as_ref_dtype","as_series","as_single_ptr","as_slice","as_string","as_struct","as_time","assume_init","","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","","","","","batched_borrowed","binary","","binary_expr","bitand","","","bitand_assign","bitor","","bitor_assign","bits","","bitxor","","","bitxor_assign","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bottom_k","boxed","boxed_metadata","buffer","builder","cache","","","","call","","call_categorical_merge_operation","call_udf","","call_unchecked","cancel","cast","","","","","","cast_all","cast_unchecked","cast_with_options","","","cat","","cause","cbrt","ceil","","center","century","check_bound","checked_div","","checked_div_num","chunk_lengths","chunk_size","chunkedarray","chunks","chunks_mut","clip","","clip_max","","clip_min","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_inner","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","closed_window","","","cloud","cloud_options","","","","","cmp","","coalesce","","","","coalesce_columns","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","collect_schema","cols","column_order","column_orders","columns","columns_to_dummies","comment_prefix","compare","","complement","compression","","","compute_schema","concat","","concat_expr","concat_impl","","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","","","","","contains_chunked","","contains_literal","convert_inner_type","convert_to_unsigned_index","count","","","count_matches","count_matches_many","count_rows","count_rows_from_slice","create_enum_dtype","create_left_df_chunked","created_by","cross_join","","cross_join_dfs","cum_count","","cum_fold_exprs","cum_max","","cum_min","","cum_prod","","cum_reduce_exprs","cum_sum","","cumulative_eval","data_page_size","datatypes","date_format","date_ranges","datetime","","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","","","","days","","","days_only","ddof","","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","default_arrays","default_join_ids","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","descending","","","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","df","","diagonal","diff","","","difference","display","distinct_count","","div","","divide","dot","downcast","downcast_unchecked","downgrade","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","drop_nans","drop_no_validate","drop_nulls","","","dst_offset","dt","","dtype","","","","","","","dtype_col","dtype_cols","dtype_overwrite","duration","empty","","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_dtype","ensure_is_constant_duration","ensure_matching_schema","ensure_sorted_arg","eol_char","eq","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eq_missing","equal","equal_missing","equivalenteval","every","exact","exclude","exclude_dtype","execute","expand_paths","expand_paths_hive","expanded_from_single_directory","explain","explode","","","explode_and_offsets","expr","extend","extend_constant","extract","","extract_all","extract_all_many","extract_groups","fast_explode","fetch","","fetch_blocking","field","","field_by_index","field_by_name","field_by_names","fields","fields_to_cast","fill_nan","","fill_null","","","fill_null_with_strategy","fill_null_with_values","filter","","","","find","find_chunked","find_literal","finish","","","","","","","","","","","","","","","","","","","","finish_no_glob","","","finish_with_scan_ops","finishes_this_batch","first","","","","fixed_size_list","flatten","float_precision","float_scientific","float_sorted_arg_max","float_type","floor","","floor_div","floor_div_series","flush","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fmt_group_by_column","fmt_str","fn_params","","fold_exprs","force_parallel","","format","format_str","forward_fill","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_arrow_schema","from_bits","from_bits_retain","","from_bits_truncate","from_data_default","from_data_unchecked_default","","from_iter","","","","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","","from_iter_utf8_trusted_len","from_iter_values","from_name","from_par_iter","","from_partitioned_ds","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","","from_type","from_vec","","from_zeroable_vec","full","","","","full_join","","full_null","","","fun","function_expr","function_with_options","gather","","gather_every","ge","get","","","","","get_any_value","","get_any_value_unchecked","","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","","","get_fields","get_fields_lens","get_glob_start_idx","get_metadata","","get_mut","get_mut_unchecked","get_object","get_object_chunked_unchecked","get_output","get_overlapping_bounds_iter","get_parse_options","get_reader_bytes","get_schema","get_unchecked","","","glob","","","group_by","group_by_dynamic","","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","","","gt_eq","","has_header","has_nulls","hash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hash_join_inner","hash_join_outer","head","","","hex_decode","hex_encode","hive_options","","hor_str_concat","hour","","","","hours","","how","","idx","ignore_errors","impl_duration","impl_replace_time_zone","impl_replace_time_zone_fast","implode","in_nanoseconds_window","include_bom","","include_boundaries","include_file_paths","","include_header","","increment_strong_count","increment_strong_count_in","index","","index_cols","index_column","","indexes_to_usizes","infer_file_schema","infer_schema_len","","infer_schema_length","","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner","inner_array","inner_join","","inner_mut","input_fields","insert","int_range","int_ranges","interpol","interpolate","","","interpolate_by","","","intersection","intersects","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","","","into_data","into_inner","","into_iter","","","","","into_list_name_space","","into_raw","into_raw_with_allocator","into_reader_with_file_handle","into_scalar","into_series","","","into_vec","","is_all","is_arithmetic","is_asof","is_between","","is_cloud_url","is_comparison","is_constant_duration","is_empty","","","is_finished","is_finite","is_first_distinct","","","is_full","is_full_days","is_ie","is_in","","is_infinite","is_last_distinct","","","is_leap_year","","","is_nan","","is_not_nan","is_not_null","","","is_null","","","","","is_null_idx","is_nullable","is_positive_idx_uncertain","is_read_vectored","is_scalar","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_valid_join","is_write_vectored","is_zero","iso_year","","","iter","","","iter_fields","iter_names","iter_names_and_dtypes","join","","","","join_asof_by","join_builder","join_literal","join_many","join_nulls","","join_where","json_encode","keep","key_value_metadata","","label","last","","","","","lazy","","le","left_by","left_join","","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","","","","","limit","","line_terminator","list","lit","","","","","","logical_and","logical_or","logical_plan","","low_memory","","","","","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","","","lt_eq","","maintain_order","","","","","","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","","","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","","map_dtypes","map_expr","map_field","map_fields","","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_parse_options","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","materialize_empty_df","materialize_projection","max","","","","","","max_reduce","","max_row_group_height","max_value","","mean","","","","","","median","","","","","","","median_reduce","","memory_mapped","merge_dtypes","metadata","method","microsecond","microseconds","","millennium","milliseconds","","min","","","","","","min_max","min_periods","","","min_reduce","","min_value","","minute","","","","minutes","","missing_is_null","mode","","month","","","","months","months_only","mul","","","multiply","multithreaded","","n_chunks","n_rows","","","","","","","","n_threads","","n_unique","","","","","name","","","","","","nan_max","nan_min","nan_propagating_aggregate","nanosecond","","","nanoseconds","","","ne","needs_checks","neg","","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_cyclic","new_cyclic_in","new_empty","new_from_index","","new_from_str","new_in","new_int_range","new_multi","new_null","new_paths","","new_single","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_with_sources","","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","","next_batch","next_batches","","","nodes","nodes_owned","not","","","not_equal","not_equal_missing","nth","null","","","","null_count","","","","","null_values","nulls_last","","num_rows","","offset","","","offsets","on","","","optimize","options","or","ordinal","","ordinal_day","ordinal_year","otherwise","","output_schema","over","over_with_options","overwrite_schema","parallel","","","parse","parse_from_str_slice","","","parse_options","parsed_int","partial_cmp","","path","period","","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","prefix","prefix_fields","private_left_join_multiple_keys","prob","prod_reduce","product","profile","projection","propagate_nulls","provide","ptr_eq","quantile","","","","quantile_reduce","","quarter","","","queue","quote_char","","quote_style","raise_if_empty","rank","","read","read_buf","read_parallel","read_to_end","read_to_string","read_varint","read_vectored","rechunk","","","","","","","","reduce_exprs","reinterpret_signed","reinterpret_unsigned","rem","","remainder","remove","remove_bom","rename","","rename_fields","repeat","repeat_by","","replace","","","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_or_default","replace_strict","","replace_time_zone","reshape","resolve_homedir","return_type","reverse","","","","","","right_by","right_on","rolling","","","rolling_map","","","rolling_map_float","rolling_max","","rolling_max_by","","rolling_mean","","rolling_mean_by","","rolling_median","rolling_median_by","rolling_min","","rolling_min_by","","rolling_quantile","","rolling_quantile_by","","rolling_std","","rolling_std_by","","rolling_sum","","rolling_sum_by","","rolling_var","","rolling_var_by","","round","","","round_ms","round_ns","round_sig_figs","","round_us","row_group_size","row_groups","row_index","","","","","","","rows_left","rows_right","same_type","","sample_frac","sample_n","sample_size","scan","scan_ipc","scan_ipc_files","scan_ipc_sources","scan_parquet","scan_parquet_files","scan_parquet_sources","scatter","scatter_single","scatter_with","schema","","","","","","","","","","","schema_descr","schema_inference","schema_only","schema_overwrite","schema_with_arenas","search_sorted","second","","","","seconds","","seek","select","select_seq","separator","","serialize_options","series","set","","set_cached_arena","set_low_memory","set_metadata","set_parallel","set_rechunk","","","","","set_sorted_flag","set_validity","shift","","","","","","shift_and_fill","","","should_coalesce","shrink_dtype","shrink_to_fit","","shuffle","sink_csv","sink_ipc","sink_json","sink_parquet","size_bytes","skip_rows","","","skip_rows_after_header","slice","","","","","","","slice_typed","","slice_typed_unchecked","","slice_unchecked","","sliced","sliced_unchecked","sort","","","","","","sort_by","sort_by_exprs","sort_with","","source","sources","","","split","split_at","split_at_boxed","split_at_boxed_unchecked","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","std","","","","","","std_reduce","","store","str","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","strftime","strict","strict_cast","strings","strip_chars","","strip_chars_end","","strip_chars_start","","strip_prefix","","strip_suffix","","strong_count","struct_","sub","","","","sub_assign","subtract","suffix","","","","suffix_fields","sum","","","","","","sum_reduce","","super_type","swap_operands","symmetric_difference","sync_update","tail","","","","take","","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","","take_validity","ternary_expr","then","","time_format","time_ranges","time_unit","","time_zone","timestamp","to_alp","","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dummies","","to_field","to_integer","to_list","to_lowercase","","to_opt","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_string","","","","","","","","","","","","","","to_supertype","to_supertypes","to_titlecase","to_uppercase","","to_writer","","toggle","tolerance","tolerance_str","top_k","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","","truncate_ns","","truncate_ragged_lines","truncate_us","","try_arr_from_iter","","","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","","","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_from_thrift","try_get_field","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into_reader_with_file_path","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_negative_to_usize","try_new","","","","","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse_dates","try_pin","try_pin_in","try_serialize","","","try_to_compact_string","","","","","","","","","","","","","try_unwrap","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","type_name","udf","union","unique","","","","","","unique_generic","unique_stable","","","","unique_stable_generic","unnest","unwrap","unwrap_or_clone","update","update_with_inference_result","upper_bound","upsample","upsample_stable","use_statistics","","","utf8","validate","validation","validity","","value","","value_counts","","value_name","","value_unchecked","values","values_iter","","var","","","","","","var_reduce","","variable_name","","vec_hash","vec_hash_combine","version","view","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weak_count","week","","","weekday","","","weeks","","weeks_only","weights","when","","","window_size","","","with","with_ambiguous","with_arrow_schema_projection","with_batch_size","","","with_cache","with_capacity","","with_chunk_size","","with_cloud_options","","with_cluster_with_columns","with_coalesce","with_collapse_joins","with_column","with_columns","","","","","","with_columns_seq","with_comment_prefix","","with_compat_level","","with_compression","","","","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","","with_dtype","with_dtype_overwrite","","with_encoding","","with_eol_char","","with_extension","with_fields","with_float_precision","with_float_scientific","with_fractional_seconds","with_glob","with_has_header","","with_hive_partition_columns","","with_hms","","with_hour","with_hours","with_ignore_errors","","","","","with_include_file_path","","with_include_file_paths","","with_infer_schema_length","","","with_json_format","","with_line_terminator","with_low_memory","","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","","with_month","with_n_rows","","","","","","","","","with_n_threads","","with_nanoseconds","with_null_value","with_null_values","","with_optimizations","with_parse_options","with_path","","with_paths","with_predicate","","with_predicate_pushdown","with_projection","","","","","","with_projection_pushdown","with_quote_char","","","with_quote_style","with_raise_if_empty","","with_rechunk","","","","","with_row_estimate","with_row_group_size","with_row_index","","","","","","","","","","","with_same_dtype","with_sample_size","with_schema","","","","","with_schema_modify","with_schema_overwrite","","","","with_second","with_seconds","with_separator","","","with_simplify_expr","with_skip_rows","","with_skip_rows_after_header","","with_slice","with_slice_pushdown","with_sources","","","with_statistics","with_suffix","with_time_format","with_time_unit","with_time_zone","with_truncate_ragged_lines","","with_try_parse_dates","","with_type_coercion","with_validity","","with_validity_typed","","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_df_to_file","","write_partitioned_dataset","write_varint","write_vectored","xor","year","","","","zip","zip_with","expr","input","","interpol","propagate_nans","","quantile","closed","ignore_nulls","","aggs","apply","args","by_column","cached_ir","contexts","df","dsl","expr","exprs","file_info","file_options","function","id","input","","","","","","","","","","","input_left","input_right","inputs","","keys","left_on","len","maintain_order","node","offset","options","","","","","","payload","predicate","predicates","right_on","scan_type","schema","slice","sort_options","sources","version","by","","dtype","expr","","","","","falsy","function","","","","idx","input","","","","left","length","offset","op","options","","","","","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","decimals","digits","has_max","has_min","limit","","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","","","","","seed","","sort","include_nulls","groups","rolling","dtype","high","low","error","","msg","","delimiter","","dtype","ignore_nulls","","inclusive","literal","","","n","","pat","strict","","time_unit","time_zone","Auto","Post","Pre","PrefilterMaskSetting","borrow","borrow_mut","calc_prefilter_cost","deref","deref_mut","drop","ensure_matching_dtypes_if_found","from","init","init_from_env","into","read_this_row_group","should_prefilter","to_deserializer","try_from","try_into","type_id","vzip","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","size_bytes","starts_with","try_from","try_into","type_id","vzip","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","","","","borrow_mut","","","","deref","","","","deref_mut","","","","drop","","","","dtype","from","","","","init","","","","init_buffers","into","","","","into_series","try_from","","","","try_into","","","","type_id","","","","vzip","","","","buf","time_unit","time_zone","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptionsDynamicWindow","SeriesOpsTime","StringMethods","TimeMethods","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","closed_window","day","","days","fn_params","hour","","hours","is_leap_year","","iso_year","","microseconds","milliseconds","min_periods","minute","","minutes","month","","nanosecond","","nanoseconds","ordinal","","parse_from_str_slice","","","quarter","","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","second","","seconds","string","week","","weekday","window_size","year","","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","","","pattern","to_owned","try_from","try_from_with_unit","","","try_into","type_id","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Hf","Http","__clone_box","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","","eq","","equivalent","","","fmt","from","","from_str","from_untyped_config","hash","init","","into","","max_retries","options","to_owned","try_from","","try_into","","type_id","","vzip","","with_max_retries","Aws","Azure","CloudOptions","CloudType","File","Gcp","Hf","Http","max_retries","GZIP","SupportedCompression","ZLIB","ZSTD","borrow","borrow_mut","check","deref","deref_mut","drop","from","init","into","maybe_decompress_bytes","try_from","try_into","type_id","vzip","Any","AnyValue","Array","","","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","","Date32","Date64","DateChunked","DateType","Datetime","","DatetimeChunked","DatetimeOwned","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Dimension","Duration","","","DurationChunked","DurationType","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","Infer","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","ReshapeDimension","RevMapping","Second","Specified","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","","","StructOwned","StructType","Time","","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","cast_with_options","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_dtype","dtype","","enum_","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","","into_scalar","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","EnumChunkedBuilder","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","Abs","All","AllHorizontal","Any","AnyHorizontal","ArgUnique","ArgWhere","ArrayExpr","AsStruct","BackwardFill","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","GatherEvery","Generic","GetCategories","Head","HexEncode","Hour","Interpolate","InterpolateBy","IsBetween","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsoYear","JsonEncode","LenBytes","LenChars","ListExpr","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MultipleFields","Nanosecond","Negate","Not","NullCount","OrdinalDay","Pow","PowFunction","PrefixFields","Quarter","Random","Range","Rank","RenameFields","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","RollingExpr","RollingExprBy","Round","","RoundSF","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Truncate","Unique","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Year","cat","pow","rolling","rolling_by","closed","ignore_nulls","","decimals","digits","has_max","has_min","limit","","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","ignore_nulls","","inclusive","literal","","","n","","pat","strict","","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","","from","hash","init","into","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","","from","hash","init","into","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","InterpolationMethod","Linear","Nearest","interpolate","interpolate_by","mode","ca_nan_agg","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","dtype","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Any","Left","Right","SearchSortedSide","binary_search_ca","lower_bound_chunks","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","","maintain_order","","multithreaded","","nulls_last","","slice_typed","slice_typed_unchecked","AsString","SplitNChars","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","","strip_chars_end","","strip_chars_start","","strip_prefix","","strip_suffix","","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","","Ascending","BitRepr","ChunkCompareEq","Descending","IntoSeries","IsSorted","Item","Large","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","","_sum_as_f64","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","","","","amortized_iter","append","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","","as_series","","as_single_ptr","","binary","binary_offset","bitand","bitor","bitxor","bool","borrow","","","","borrow_mut","","","","boxed_metadata","cast","","cast_unchecked","cast_with_options","categorical","checked_div","","checked_div_num","chunk_lengths","","chunks","chunks_mut","","clear","clone","","clone_inner","clone_into","","clone_to_uninit","","compute_len","date","datetime","decimal","default","deref","","","","","deref_mut","","","","div","","","","drop","","","","drop_nulls","dtype","duration","eq","","equal","","","","equal_missing","","","","equals","equals_missing","equivalent","","","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","","","fmt_list","from","","","","","","","","","","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_iter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_vec","","","","","","","","","","","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","get_object","get_object_chunked_unchecked","get_unchecked","gt","","","gt_eq","","","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","","","","into","","","","into_column","into_frame","into_iter","into_series","","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","","is_sorted_flag","iter","iter_chunks","len","","limit","list","lit","lt","","","lt_eq","","","max","max_reduce","mean","mean_reduce","median","median_reduce","min","min_reduce","mul","","","","n_chunks","","n_unique","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_null","next","not_equal","","","","not_equal_missing","","","","null","null_count","ops","phys_iter","product","quantile_reduce","rechunk","rem","","","rename","","reshape_array","reshape_list","reverse","","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","","shuffle","size_hint","slice","","sort","sort_with","split_at","","std","std_reduce","str","str_value","strict_cast","struct_","sub","","","","sum","sum_reduce","","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","time","to_arrow","to_dummies","to_float","to_owned","","to_physical_repr","to_string","try_add_owned","try_array","try_binary","try_binary_offset","try_bool","try_categorical","try_date","try_datetime","try_decimal","try_duration","try_f32","try_f64","try_from","","","","","","","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","","","try_list","try_mul_owned","try_new","try_null","try_set_metadata","try_str","try_struct","try_sub_owned","try_time","try_to_compact_string","try_u16","try_u32","try_u64","try_u8","type_id","","","","u16","u32","u64","u8","unique","unique_stable","unpack","var","var_reduce","vzip","","","","with_name","wrapping_trunc_div_scalar","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","_struct_arithmetic","add","add_to","","checked","div","divide","","mul","multiply","","rem","remainder","","sub","subtract","","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","","checked_div_num","","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"polars"],[17,"polars::chunked_array"],[851,"polars::chunked_array::arithmetic"],[879,"polars::chunked_array::builder"],[1140,"polars::chunked_array::builder::list"],[1157,"polars::chunked_array::cast"],[1186,"polars::chunked_array::collect"],[1200,"polars::chunked_array::float"],[1202,"polars::chunked_array::from_iterator_par"],[1206,"polars::chunked_array::iterator"],[1261,"polars::chunked_array::iterator::par"],[1263,"polars::chunked_array::metadata"],[1547,"polars::chunked_array::object"],[1624,"polars::chunked_array::object::builder"],[1647,"polars::chunked_array::object::registry"],[1675,"polars::chunked_array::ops"],[1884,"polars::chunked_array::ops::arity"],[1920,"polars::chunked_array::ops::float_sorted_arg_max"],[1922,"polars::chunked_array::ops::gather"],[1925,"polars::chunked_array::ops::search_sorted"],[1955,"polars::chunked_array::ops::sort"],[1962,"polars::chunked_array::ops::sort::arg_bottom_k"],[1963,"polars::chunked_array::ops::sort::arg_sort_multiple"],[1971,"polars::chunked_array::ops::sort::options"],[1984,"polars::chunked_array::temporal"],[1992,"polars::chunked_array::temporal::conversion"],[1995,"polars::datatypes"],[3522,"polars::datatypes::categorical"],[3539,"polars::datatypes::categorical::revmap"],[3545,"polars::datatypes::categorical::string_cache"],[3564,"polars::datatypes::enum_"],[3582,"polars::docs"],[3584,"polars::error"],[3676,"polars::error::PolarsError"],[3680,"polars::error::constants"],[3683,"polars::frame"],[3959,"polars::frame::column"],[4202,"polars::frame::explode"],[4231,"polars::frame::group_by"],[4470,"polars::frame::group_by::GroupByMethod"],[4471,"polars::frame::group_by::GroupsProxy"],[4473,"polars::frame::group_by::aggregations"],[4486,"polars::frame::group_by::expr"],[4489,"polars::frame::row"],[4599,"polars::functions"],[4601,"polars::prelude"],[9885,"polars::prelude::AggExpr"],[9892,"polars::prelude::BooleanFunction"],[9895,"polars::prelude::DslPlan"],[9946,"polars::prelude::Expr"],[9981,"polars::prelude::FunctionExpr"],[10003,"polars::prelude::GroupByMethod"],[10004,"polars::prelude::GroupsProxy"],[10006,"polars::prelude::LiteralValue"],[10009,"polars::prelude::PolarsError"],[10013,"polars::prelude::StringFunction"],[10027,"polars::prelude::TemporalFunction"],[10029,"polars::prelude::_internal"],[10051,"polars::prelude::aggregations"],[10064,"polars::prelude::arity"],[10100,"polars::prelude::array"],[10119,"polars::prelude::binary"],[10136,"polars::prelude::buffer"],[10210,"polars::prelude::buffer::Buffer"],[10213,"polars::prelude::cat"],[10214,"polars::prelude::chunkedarray"],[10280,"polars::prelude::chunkedarray::string"],[10319,"polars::prelude::chunkedarray::string::infer"],[10350,"polars::prelude::cloud"],[10400,"polars::prelude::cloud::options"],[10409,"polars::prelude::compression"],[10427,"polars::prelude::datatypes"],[10708,"polars::prelude::datatypes::categorical"],[10725,"polars::prelude::datatypes::categorical::revmap"],[10731,"polars::prelude::datatypes::categorical::string_cache"],[10735,"polars::prelude::datatypes::enum_"],[10736,"polars::prelude::datetime"],[10739,"polars::prelude::default_arrays"],[10745,"polars::prelude::dt"],[10797,"polars::prelude::expr"],[10800,"polars::prelude::fixed_size_list"],[10820,"polars::prelude::float_sorted_arg_max"],[10822,"polars::prelude::function_expr"],[10995,"polars::prelude::function_expr::BooleanFunction"],[10998,"polars::prelude::function_expr::FunctionExpr"],[11020,"polars::prelude::function_expr::StringFunction"],[11034,"polars::prelude::function_expr::TemporalFunction"],[11036,"polars::prelude::function_expr::cat"],[11038,"polars::prelude::function_expr::pow"],[11042,"polars::prelude::function_expr::rolling"],[11073,"polars::prelude::function_expr::rolling_by"],[11104,"polars::prelude::gather"],[11107,"polars::prelude::interpolate"],[11111,"polars::prelude::interpolate_by"],[11112,"polars::prelude::mode"],[11113,"polars::prelude::nan_propagating_aggregate"],[11118,"polars::prelude::null"],[11149,"polars::prelude::schema_inference"],[11176,"polars::prelude::search_sorted"],[11182,"polars::prelude::series"],[11204,"polars::prelude::sort"],[11211,"polars::prelude::sort::arg_bottom_k"],[11212,"polars::prelude::sort::arg_sort_multiple"],[11220,"polars::prelude::sort::options"],[11233,"polars::prelude::strings"],[11287,"polars::prelude::udf"],[11293,"polars::prelude::utf8"],[11297,"polars::series"],[11758,"polars::series::amortized_iter"],[11782,"polars::series::arithmetic"],[11803,"polars::series::arithmetic::checked"],[11809,"polars::series::ops"],[11836,"dyn_clone::sealed"],[11837,"polars_core::datatypes"],[11838,"polars_core::chunked_array"],[11839,"polars_error"],[11840,"core::result"],[11841,"polars_core::series"],[11842,"core::ops::function"],[11843,"num_traits"],[11844,"num_traits::cast"],[11845,"polars_core::series::arithmetic::borrowed"],[11846,"polars_core::frame::group_by::proxy"],[11847,"polars_core::chunked_array::object"],[11848,"core::option"],[11849,"polars_arrow::array"],[11850,"alloc::boxed"],[11851,"core::iter::traits::iterator"],[11852,"polars_core::chunked_array::list::iterator"],[11853,"polars_utils::pl_str"],[11854,"core::marker"],[11855,"alloc::borrow"],[11856,"polars_core::series::amortized_iter"],[11857,"alloc::string"],[11858,"polars_core::datatypes::dtype"],[11859,"polars_arrow::array::binview::view"],[11860,"polars_core::chunked_array::ops::sort::options"],[11861,"polars_core::frame::column"],[11862,"polars_core::chunked_array::metadata::md_trait"],[11863,"polars_core::chunked_array::cast"],[11864,"polars_core::series::arithmetic::borrowed::checked"],[11865,"core::slice::iter"],[11866,"core::iter::adapters::map"],[11867,"alloc::vec"],[11868,"compact_str"],[11869,"polars_core::chunked_array::metadata"],[11870,"core::iter::traits::double_ended"],[11871,"polars_arrow::offset"],[11872,"core::fmt"],[11873,"core::iter::traits::collect"],[11874,"polars_arrow::bitmap::immutable"],[11875,"core::borrow"],[11876,"polars_core::chunked_array::from_iterator"],[11877,"core::convert"],[11878,"rayon::iter"],[11879,"polars_arrow::pushable"],[11880,"core::iter::traits::exact_size"],[11881,"core::clone"],[11882,"polars_arrow::trusted_len"],[11883,"polars_core::datatypes::any_value"],[11884,"polars_arrow::array::binary"],[11885,"std::sync::rwlock"],[11886,"polars_core::chunked_array::logical"],[11887,"polars_core::datatypes::time_unit"],[11888,"polars_core::series::series_trait"],[11889,"polars_core::chunked_array::iterator"],[11890,"polars_core::scalar"],[11891,"polars_core::chunked_array::metadata::guard"],[11892,"polars_core::chunked_array::metadata::interior_mutable"],[11893,"alloc::sync"],[11894,"core::ops::range"],[11895,"polars_core::datatypes::field"],[11896,"polars_arrow::legacy::kernels::rolling::no_nulls"],[11897,"polars_core::chunked_array::ops::rolling_window"],[11898,"polars_ops::chunked_array::scatter"],[11899,"polars_utils::index"],[11900,"ahash::random_state"],[11901,"polars_utils::hashing"],[11902,"ndarray::data_repr"],[11903,"ndarray::dimension::dim"],[11904,"ndarray"],[11905,"either"],[11906,"core::any"],[11907,"polars_core::frame"],[11908,"polars_core::chunked_array::arithmetic::numeric"],[11909,"polars_core::chunked_array::builder::list::anonymous"],[11910,"polars_core::chunked_array::builder::list::boolean"],[11911,"polars_core::chunked_array::builder::list::primitive"],[11912,"polars_core::chunked_array::builder::list"],[11913,"polars_core::chunked_array::builder"],[11914,"polars_core::chunked_array::builder::list::binary"],[11915,"polars_core::chunked_array::builder::list::null"],[11916,"polars_core::chunked_array::builder::string"],[11917,"polars_arrow::array::binview"],[11918,"polars_core::chunked_array::builder::boolean"],[11919,"polars_core::chunked_array::builder::null"],[11920,"polars_core::chunked_array::builder::primitive"],[11921,"polars_core::series::implementations::null"],[11922,"core::hash"],[11923,"polars_core::chunked_array::collect"],[11924,"polars_core::chunked_array::float"],[11925,"polars_core::chunked_array::from_iterator_par"],[11926,"polars_arrow::array::boolean"],[11927,"polars_arrow::array::fixed_size_list"],[11928,"polars_core::chunked_array::metadata::env"],[11929,"polars_core::chunked_array::metadata::collect"],[11930,"bitflags::iter"],[11931,"std::fs"],[11932,"std::sync::mutex"],[11933,"polars_arrow::datatypes"],[11934,"polars_arrow::bitmap::utils::iterator"],[11935,"polars_arrow::bitmap::utils::zip_validity"],[11936,"polars_core::chunked_array::object::builder"],[11937,"polars_core::chunked_array::object::registry"],[11938,"polars_core::chunked_array::ops"],[11939,"polars_arrow::legacy::array::slice"],[11940,"polars_core::chunked_array::ops::arity"],[11941,"polars_arrow::array::static_array"],[11942,"core::error"],[11943,"polars_arrow::array::primitive"],[11944,"polars_core::chunked_array::ops::search_sorted"],[11945,"polars_core::utils"],[11946,"polars_row::row"],[11947,"chrono::naive::datetime"],[11948,"chrono_tz::timezones"],[11949,"chrono::naive::time"],[11950,"polars_core::chunked_array::logical::categorical"],[11951,"polars_core::chunked_array::logical::categorical::builder"],[11952,"polars_arrow::array::static_array_collect"],[11953,"std::ffi::os_str"],[11954,"std::path"],[11955,"bytemuck::zeroable"],[11956,"polars_core::chunked_array::logical::categorical::revmap"],[11957,"polars_core::chunked_array::logical::categorical::merge"],[11958,"polars_core::datatypes::reshape"],[11959,"core::cmp"],[11960,"polars_arrow::datatypes::physical_type"],[11961,"polars_arrow::types"],[11962,"chrono::time_delta"],[11963,"chrono::naive::date"],[11964,"polars_core::datatypes::into_scalar"],[11965,"polars_plan::dsl::expr"],[11966,"polars_core::chunked_array::logical::categorical::string_cache"],[11967,"polars_core::chunked_array::logical::enum_"],[11968,"polars_error::warning"],[11969,"planus::errors"],[11970,"regex::error"],[11971,"simdutf8::basic"],[11972,"alloc::collections"],[11973,"polars_parquet::parquet::error"],[11974,"std::io::error"],[11975,"polars_schema::schema"],[11976,"hashbrown::set"],[11977,"polars_core::frame::row"],[11978,"polars_core::frame::group_by"],[11979,"polars_time::group_by::dynamic"],[11980,"polars_lazy::frame"],[11981,"polars_core::series::from"],[11982,"polars_core::chunked_array::ndarray"],[11983,"polars_arrow::record_batch"],[11984,"polars_arrow::array::struct_"],[11985,"polars_time::windows::duration"],[11986,"polars_core::frame::column::scalar"],[11987,"polars_core::frame::explode"],[11988,"polars_utils::idx_vec"],[11989,"rayon::iter::plumbing"],[11990,"polars_plan::plans::aexpr"],[11991,"polars_core::frame::group_by::into_groups"],[11992,"core::iter::adapters::copied"],[11993,"core::iter::adapters::zip"],[11994,"polars_arrow::legacy::kernels::rolling"],[11995,"polars_utils::float"],[11996,"polars_arrow::types::native"],[11997,"polars_core::frame::group_by::aggregations::agg_list"],[11998,"polars_core::frame::group_by::aggregations"],[11999,"polars_core::frame::group_by::expr"],[12000,"polars_core::frame::row::av_buffer"],[12001,"polars_utils::arena"],[12002,"polars_plan::plans::ir"],[12003,"polars_ops::frame::join::hash_join"],[12004,"polars_ops::frame::join::args"],[12005,"polars_plan::dsl::struct_"],[12006,"polars_ops::chunked_array::gather::chunked"],[12007,"polars_ops::frame"],[12008,"polars_io::csv::read::reader"],[12009,"polars_io::predicates"],[12010,"polars_io::mmap"],[12011,"polars_plan::dsl::selector"],[12012,"polars_plan::frame::opt_state"],[12013,"core::alloc"],[12014,"polars_plan::plans::anonymous_scan"],[12015,"polars_lazy::scan::anonymous_scan"],[12016,"polars_plan::dsl::expr_dyn_fn"],[12017,"polars_plan::plans::visitor"],[12018,"polars_plan::dsl::function_expr"],[12019,"polars_ops::series::ops::arg_min_max"],[12020,"polars_plan::dsl::array"],[12021,"polars_plan::dsl::list"],[12022,"polars_plan::dsl::function_expr::schema"],[12023,"polars_io::ipc::ipc_stream"],[12024,"std::io"],[12025,"polars_ops::chunked_array::binary"],[12026,"polars_time::chunkedarray::string"],[12027,"std::os::fd::owned"],[12028,"polars_ops::chunked_array::list"],[12029,"std::os::fd::raw"],[12030,"polars_ops::series::ops"],[12031,"polars_ops::chunked_array::strings"],[12032,"core::mem::maybe_uninit"],[12033,"polars_ops::chunked_array::strings::namespace"],[12034,"polars_io::csv::read::read_impl::batched"],[12035,"polars_io::csv::write::writer"],[12036,"polars_io::ipc::write"],[12037,"polars_io::parquet::read::reader"],[12038,"polars_io::parquet::read::read_impl"],[12039,"polars_io::parquet::write::writer"],[12040,"polars_io::parquet::write::batched_writer"],[12041,"polars_plan::dsl::binary"],[12042,"polars_plan::dsl::udf"],[12043,"polars_lazy::frame::exitable"],[12044,"hashbrown::map"],[12045,"polars_plan::dsl::cat"],[12046,"polars_ops::series::ops::round"],[12047,"polars_time::series"],[12048,"polars_lazy::scan::csv"],[12049,"polars_lazy::scan::ipc"],[12050,"polars_lazy::scan::ndjson"],[12051,"polars_lazy::scan::parquet"],[12052,"polars_time::chunkedarray::rolling_window"],[12053,"polars_time::windows::bounds"],[12054,"polars_time::windows::group_by"],[12055,"polars_time::windows::window"],[12056,"polars_io::csv::read::options"],[12057,"polars_io::csv::write::options"],[12058,"polars_ops::frame::join::asof"],[12059,"polars_io::ipc::ipc_file"],[12060,"polars_ops::series::ops::interpolation::interpolate"],[12061,"polars_io::json"],[12062,"polars_ops::series::ops::is_between"],[12063,"polars_ops::series::ops::rank"],[12064,"polars_io::parquet::read::options"],[12065,"polars_io::parquet::write::options"],[12066,"polars_plan::plans"],[12067,"polars_plan::dsl::arity"],[12068,"polars_plan::dsl::function_expr::boolean"],[12069,"polars_plan::dsl::function_expr::cat"],[12070,"polars_plan::dsl::function_expr::datetime"],[12071,"polars_plan::dsl::function_expr::pow"],[12072,"polars_plan::dsl::function_expr::strings"],[12073,"polars_plan::dsl::function_expr::struct_"],[12074,"polars_parquet::arrow::write"],[12075,"polars_plan::dsl::functions::temporal"],[12076,"polars_plan::dsl::options"],[12077,"polars_parquet::parquet::metadata::file_metadata"],[12078,"polars_plan::plans::lit"],[12079,"polars_plan::plans::options"],[12080,"polars_arrow::legacy::kernels::time"],[12081,"polars_lazy::scan::file_list_reader"],[12082,"polars_io::cloud::options"],[12083,"polars_parquet::parquet::metadata::column_order"],[12084,"polars_ops::chunked_array::binary::namespace"],[12085,"polars_io::ndjson::core"],[12086,"polars_ops::frame::join::cross_join"],[12087,"polars_lazy::dsl::eval"],[12088,"polars_time::chunkedarray::date"],[12089,"polars_time::chunkedarray::datetime"],[12090,"polars_time::chunkedarray::duration"],[12091,"core::default"],[12092,"core::ffi::c_str"],[12093,"polars_parquet::parquet::metadata::column_chunk_metadata"],[12094,"polars_core::series::ops"],[12095,"polars_plan::dsl::dt"],[12096,"polars_ops::series::ops::various"],[12097,"polars_arrow::scalar"],[12098,"polars_lazy::dsl::list"],[12099,"crossterm::command"],[12100,"polars_io::shared"],[12101,"polars_plan::plans::apply"],[12102,"polars_plan::dsl::function_expr::array"],[12103,"polars_plan::dsl::function_expr::binary"],[12104,"polars_plan::dsl::function_expr::list"],[12105,"polars_plan::dsl::function_expr::range"],[12106,"polars_parquet::arrow::read::statistics"],[12107,"alloc::ffi::c_str"],[12108,"polars_arrow::array::growable::structure"],[12109,"polars_arrow::array::struct_::mutable"],[12110,"polars_core::schema"],[12111,"polars_arrow::legacy::array::default_arrays"],[12112,"polars_arrow::buffer::immutable"],[12113,"polars_arrow::array::list"],[12114,"polars_core::named_from"],[12115,"polars_ops::frame::join"],[12116,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[12117,"polars_time::chunkedarray::time"],[12118,"core::num::nonzero"],[12119,"polars_arrow::array::struct_::iterator"],[12120,"polars_ops::frame::join::asof::groups"],[12121,"polars_ops::chunked_array::list::namespace"],[12122,"polars_plan::dsl::name"],[12123,"parquet_format_safe::parquet_format"],[12124,"polars_core::utils::supertype"],[12125,"polars_io::options"],[12126,"polars_core::chunked_array::ops::aggregate"],[12127,"polars_core::chunked_array::ops::aggregate::quantile"],[12128,"polars_arrow::legacy::index"],[12129,"polars_plan::plans::ir::scan_sources"],[12130,"polars_ops::chunked_array::strings::split"],[12131,"core::pin"],[12132,"core::io::borrowed_buf"],[12133,"parquet_format_safe::thrift::varint::decode"],[12134,"polars_time::chunkedarray::rolling_window::dispatch"],[12135,"polars_time::round"],[12136,"polars_parquet::parquet::metadata::schema_descriptor"],[12137,"polars_core::chunked_array::ops::aggregate::var"],[12138,"polars_plan::dsl::string"],[12139,"polars_ops::series::ops::to_dummies"],[12140,"polars_time::truncate"],[12141,"polars_io::csv::read::schema_inference"],[12142,"polars_time::upsample"],[12143,"polars_core::hashing::vector_hasher"],[12144,"alloc::collections::btree::map"],[12145,"polars_parquet::parquet::metadata::row_metadata"],[12146,"polars_utils::mmap::private"],[12147,"polars_parquet::arrow::read::deserialize::utils::filter"],[12148,"polars_ops::chunked_array::array::namespace"],[12149,"polars_ops::chunked_array::array"],[12150,"polars_io::csv::read::buffer"],[12151,"polars_time::chunkedarray::string::patterns"],[12152,"polars_time::chunkedarray::string::infer"],[12153,"polars_io::utils::compression"],[12154,"polars_arrow::legacy::array::fixed_size_list"],[12155,"polars_plan::dsl::function_expr::rolling"],[12156,"polars_plan::dsl::function_expr::rolling_by"],[12157,"polars_arrow::legacy::array::null"],[12158,"polars_arrow::bitmap::mutable"],[12159,"polars_arrow::array::utf8"],[12160,"polars_core::series::iterator"],[12161,"alloc::rc"],[12162,"polars_core"],[12163,"polars_core::chunked_array::struct_"],[12164,"polars_core::chunked_array::iterator::par"],[12165,"polars_core::chunked_array::object::extension"],[12166,"polars_core::chunked_array::ops::float_sorted_arg_max"],[12167,"polars_core::chunked_array::ops::gather"],[12168,"polars_core::chunked_array::ops::sort"],[12169,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[12170,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[12171,"polars_core::chunked_array::temporal"],[12172,"polars_core::chunked_array::temporal::conversion"],[12173,"polars_core::chunked_array::temporal::time"],[12174,"polars_core::chunked_array::logical::date"],[12175,"polars_core::chunked_array::logical::datetime"],[12176,"polars_core::chunked_array::logical::decimal"],[12177,"polars_core::chunked_array::logical::duration"],[12178,"polars_core::datatypes::aliases"],[12179,"polars_utils::aliases"],[12180,"polars_core::chunked_array::logical::time"],[12181,"polars_error::constants"],[12182,"polars_core::functions"],[12183,"polars_core::frame::horizontal"],[12184,"polars_arrow::datatypes::schema"],[12185,"polars_io::utils::other"],[12186,"polars_io::parquet::metadata"],[12187,"polars_arrow::legacy::prelude"],[12188,"polars_arrow::legacy::array"],[12189,"polars_io::path_utils"],[12190,"polars_ops::series::ops::rolling"],[12191,"polars_parquet::parquet::write"],[12192,"polars_io::utils"],[12193,"polars_ops::frame::join::general"],[12194,"polars_io::parquet::read"],[12195,"polars_ops::series::ops::abs"],[12196,"polars_plan::dsl::functions::selectors"],[12197,"polars_plan::dsl::functions::horizontal"],[12198,"polars_plan::dsl::functions::arity"],[12199,"polars_plan::dsl"],[12200,"polars_plan::dsl::functions::range"],[12201,"polars_plan::dsl::functions::index"],[12202,"polars_ops::chunked_array"],[12203,"polars_plan::dsl::functions::coerce"],[12204,"polars_plan::dsl::functions::syntactic_sugar"],[12205,"polars_time::base_utc_offset"],[12206,"polars_io::csv::read"],[12207,"polars_time"],[12208,"polars_ops::series::ops::clip"],[12209,"polars_io"],[12210,"polars_ops::series::ops::horizontal"],[12211,"polars_lazy::dsl::functions"],[12212,"polars_plan::dsl::functions::concat"],[12213,"polars_ops::series::ops::index"],[12214,"polars_io::csv::read::parser"],[12215,"polars_ops::series::ops::cum_agg"],[12216,"polars_ops::series::ops::diff"],[12217,"polars_time::dst_offset"],[12218,"polars_ops::series::ops::floor_divide"],[12219,"polars_ops::chunked_array::strings::concat"],[12220,"polars_ops::series::ops::duration"],[12221,"polars_ops::chunked_array::datetime::replace_time_zone"],[12222,"polars_time::date_range"],[12223,"polars_ops::series::ops::interpolation"],[12224,"polars_ops::series::ops::interpolation::interpolate_by"],[12225,"polars_ops::series::ops::is_first_distinct"],[12226,"polars_ops::series::ops::is_in"],[12227,"polars_ops::series::ops::is_last_distinct"],[12228,"polars_io::parquet::read::utils"],[12229,"polars_ops::series::ops::negate"],[12230,"polars_ops::series::ops::not"],[12231,"polars_ops::series::ops::int_range"],[12232,"polars_plan::dsl::functions::repeat"],[12233,"polars_ops::chunked_array::repeat_by"],[12234,"polars_ops::series::ops::replace"],[12235,"polars_ops::chunked_array::strings::strip"],[12236,"polars_io::partition"],[12237,"polars_io::parquet::read::predicates"],[12238,"polars_io::parquet::read::mmap"],[12239,"polars_time::chunkedarray"],[12240,"polars_io::cloud"],[12241,"polars_ops::chunked_array::mode"],[12242,"polars_ops::chunked_array::nan_propagating_aggregate"],[12243,"polars_arrow::legacy::array::utf8"]],"i":"````````````````````Mf000`l000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`00000000000000000001010``000000000000000000000000000`0`000000010100000001000000000000000000000000000000000000`0000000000001000000000000000000000000000000000000000`0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010000000000000000000000000000000`000000000000000000000000000000000000000000000`00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`00`00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`0000000000000000000000000010010010000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000`ABj00000000000000000000000000````````````````ACnADbADdADfABl0ABnAC`ACb0ACdACf54AChACj5ACl5<;:98845<3487216055213<;9218721605<;:98721605<;:95<;:9<;:9<;:9878721605<;:98721605<;:98721605<;:9216542165438704<<;:9`8721605<;:9ADj000`9832716=<;:327659832716=<;:`9832716=<;:64<;:=<;:9832716=<;:9832716=<;:9832716=<;:9832716=<;:````````5556555`5`Fn000000000000000000000000000``ADnAE`1000101000`AEb``AEdAEf````AEjAEnAF`21021021021021021021021021210210`210210210210210``AFnKhGn0Jn`3Ml22````````42110Mn4AFb43434343434344334343215604321560431150431504315043AFd54542654332671543267154541Fl777437826565265265777777726666655555437826565665565656577507777354378265656565437826565657657777656522077770777365365657757777775776565653372656543782654378265334378265653437826513````AGb00000K`1111`111111110011111111111111111111``111111101111111110Cf2222222222`AGn000000000000000000000````AH`00AHb0000000```00`0`10000AIb````````````````````````````0AHh``AIdAJb33333DLb4``0``4F`Fh6AHd6AHj077AHl0AHn`54:54:AI`0065;65;65;6565;65;6565;65;99666555AIf0`AIhAIj`98>9988>`AIlAIn`AJ`0>><;AIb=<0=<00AJdAJfAJb0F`FhAHd0AJh1132?32AJjAId054?2AJl0AJnAK`AKb0`0AKdAKfAKh0`AHl0AKj<AKlAKnAL`F`FhAIb210210210AHn7321323232232232`ALb`ALlALhALd`````````````````````````````````````AM`00`0`000000000000000000`00000`````>>````````````87878787>>```````````B@``JjElDl```````21AGd`2``3`0320```32````3`````3200``32`3`3200``0`320``Dd04341```11`51431``431```AOf`3DLdDLf````B@f``9``875``875``875``875``5`666555AOl986``4``6B@jLd1010Al<;9`<;`<``:3:```````````BAh``35`>=<`=`=<:=`=<::````:0`=<:``=<:``=<:``=<:``:<:`::ALf0<0:L`6:AMlAOnJjB@`ElB@bOjB@d?<OhOdFbNjNdO`KlLbEhEfKnLnAnBbFdBlLjLfLlB@hAGdB@jAMlJj01L`1AhCbLhOhOdFbNjNdO`KlLbEhEfAnBbBlAMnAMl110AN`0ANb0ElJjL`0Dd0003OjANhALf3433:BBh5DLhDjAhjCbLhCdBA`AOlAOfAMlAOnJjB@`ElB@bOjB@dB@fLdOhOdFbNjNdO`KlLbEhEfKnLnAnBbFdBlLjLfLlB@hAGdB@jDdAMnBBhL`DLhDjAhjCbLhCdBA`AOlAOfAMlAOnJjB@`ElB@bOjB@dB@fLdOhOdFbNjNdO`KlLbEhEfKnLnAnBbFdBlLjLfLlB@hAGdB@jElAOf`AOjJj3L`0200000AMl`LhOhOdFbNjNdO`KlLbEhEfDd=AOlAOf>AOnJjB@`ElB@bOjB@dB@fLdOhOdFbNjNdO`KlLbEhEfKnLnAnBbFdBlLjLfLlB@hAGdB@jDdL`AOlAOfAMlAOnJjB@`ElB@bOjB@dB@fLdOhOdFbNjNdO`KlLbEhEfKnLnAnBbFdBlLjLfLlB@hAGdB@jDdL`AOlAOfAMlAOnJjB@`ElB@bOjB@dB@fLdOhOdFbNjNdO`KlLbEhEfKnLnAnBbFdBlLjLfLlB@hAGdB@jDdB@dOjB@n00032El00`L`5BA`AOlAOfJjB@`6<::AMnBBh77DLhDjAhjCbLhCd=<;AMlAOn<;ElB@bOjB@dB@fLdOhOdFbNjNdO`KlLbEhEfKnLnAnBbFdBlLjLfLlB@hAGdB@jDdAMnBBhL`0DLhDjAhjCbLhCdBA`AOlAOfAMlAOnJjB@`ElB@bOjB@dB@fLdOhOdFbNjNdO`KlLbEhEfKnLnAnBbFdBlLjLfLlB@hAGdB@jL`AhCbLhOhOdFbNjNdO`KlLbEhEfAMnDd1BBhL`DLhDjAhjCbLhCdBA`AOlAOfAMlAOnJjB@`ElB@bOjB@dB@fLdOhOdFbNjNdO`KlLbEhEfKnLnAnBbFdBlLjLfLlB@hAGdB@jAOjL`0000AMlJjOj0Dd0`0AOl3B@`El0B@b5B@dB@fLd>=9::::::777999555444333888222111000>>>===;AOfAOhAMnBA`;;:3AOn>>:998=76655AGdB@j>>>>>4BBhL`00DLhDjAhjCbLhCd<AOlAOfAMl>Jj00000B@`El000B@bOj00B@dB@fLd0OhOdFbNjNdO`KlLbEhEfKnLnAnBbFdBlLjLfLlB@hAGd00B@jElAMlL`01Dd00000001111110002ALf00030AOfB@dB@f55555AOj766666073DlAhjCbLhCdOhOdFbNjNdO`KlLbEhEfKnLnAnBbFdBlLjLfLlB@hAOfB@f0AMlElJjBBdALf444444Dd3B@`5Oj8LdAGdB@j8L`09:6AMnBBh2DLhDjAhjCbLhCdBA`AOlAOfAMlAOnJjB@`ElB@bOjB@dB@fLdOhOdFbNjNdO`KlLbEhEfKnLnAnBbFdBlLjLfLlB@hAGdB@jEl2DdAMnBBhL`DLhDjAhjCbLhCdBA`AOlAOfAMlAOnJjB@`ElB@bOjB@dB@fLdOhOdFbNjNdO`KlLbEhEfKnLnAnBbFdBlLjLfLlB@hAGdB@jL`AMlBBhBBf333332JjDdEl00200055020AOf31110131931313111131111319ALf702173777777``2B@`8`BA`::9:::AhCbLhOhOdFbNjNdO`KlLbEhEfAMl0Oj0L`0DLdDLfAMn33333333BA`5B@dB@f06B@bBBh:::::::188DdJj5Ld;=;8AhCbLhOhOdFbNjNdO`KlLbEhEfL`0AOf111Oj2222BBhAMl0Jj55505AhCbLhOhOdFbNjNdO`KlLbEhEfL`00?ElOjLd20AMlAGd110Dd6AOlAOf4AOnJjB@`:B@b:B@dB@f;OhOdFbNjNdO`KlLbEhEfKnLnAnBbFdBlLjLfLlB@hAGdB@jEl2L`Dd111Jj3B@fLd244AN`0ANb0B@n00056AMnBBh9DLhDjAhjCbLhCdBA`AOlAOfAMlAOnJjB@`ElB@bOjB@d0B@fLdOhOdFbNjNdO`KlLbEhEfKnLnAnBbFdBlLjLfLlB@hAGdB@jDdAMnBBhL`DLhDjAhjCbLhCdBA`AOlAOfAMlAOnJjB@`ElB@bOjB@dB@fLdOhOdFbNjNdO`KlLbEhEfKnLnAnBbFdBlLjLfLlB@hAGdB@jJjElDd21B@fLd2AMnBBhL`DLhDjAhjCbLhCdBA`AOlAOfAMlAOnJjB@`ElB@bOjB@dB@fLdOhOdFbNjNdO`KlLbEhEfKnLnAnBbFdBlLjLfLlB@hAGdB@j1AMl0ALf10El1DdAMnBBhL`DLhDjAhjCbLhCdBA`AOlAOfAMlAOnJjB@`ElB@bOjB@dB@fLdOhOdFbNjNdO`KlLbEhEfKnLnAnBbFdBlLjLfLlB@hAGdB@jDLdDLfALfDd00Jj`````AOf`AOl10``AOh`````2121``BCd0000`00`0000000`0`BCf0000000000000000``BCjn000DLj`112101```11111112BCh302302`223002302302`300223002222222`302302`0``````02302302023023022DLlDLn10```BE``0BDn11``0``01AAn0000000000000000BFdBFf3421034222342342342`224210342103421034222222222242224442`2222223422103422222222222222222`222242222222222222103422103421022222222222222222222210222222222222222`2222222222222222221022222222222222222342222221034222221034221034222222222210342222222``Ff`0BGj111111111111111111101110111111111110101010101110101011111010111111011011111111111111101011101111111111011111110101BDl12221222222221122222222221212122222222222221222122212222222212222222212222122122222222222122222212222222212222222122122222`BGn000000000000000000000000000`BHd0``0``````BHlC``2`22222222210`222BH`1BEf40`1023BIfBHhBHf453762104537453745374537345621004537621045373162104453745444555`643445377`6210444455377445335BI`4673215648732156486355255765564447644444543345644656446644564887321564873215648873215648666473215648DM`DMb0``````````BInBJ`0`BJb0BJdBJf``1011110101010101010`10011010101010BEd211210210210210210`02102102100000022110`2102102121021```210210210210210``BMjBLdBBj`BOf1CHdCDh01`CEd`CAh5```3AM`B@`BE`6```::`CJ`JjElDl``>``````````CDl```?```CFlCFf`CEjAIbBMjCHlCHh``CJf;:AGd``BBj5`<``=``152=<1`````CChCFd``CG``BGbBLj000CGh69`;JjEl``````1`CHj><````````````````````````````````````>``>CDj`:`nCFl<`?``1BMjCHl003CHhBOfBHd3CDl```````555553`````<CCjCCl`DCf6CJf?>AGd0``1`8JjEl``:`1`:31022``CFf`3=`CGhCAh??`CHbBBjn`CHh:879`````BLjDAfCHl;:;77DLj6`BLd7CIn```;BMjAGd55577````:CHn0`````2``2>;6BOfBHdBE`44`CJfB@`61JjEl8``3108``9CAhBGbCEjAIb=CCl```CDlAHhBBj``0BMjCHj`CHf`AOf``CGh`BHd``````CIn>>CG``33DlDLdDLfCHl0A@`CHh``n:DCfBHlC``````BOf=`BBj``B@f``CDl`CJfB@```1JjElAGd``4210``4210``4210``BLdBMj0`2```````>````````CHd0`000`0CHh1Dl222001AIdAJbCGhCIn`````CDj``DHhCHn``1```2BBjCEn`>`>``>BOfBHdBE`DAf`````DMdCChCCjCDlCFdAM``;CHl0AOl`CF`A@`JjElAGd````BMj````````BBj`AOf`CAh0`CDd84;11CG`0CE`07CGhCFfBOfAIbBHd1;210;20CHhB@jLdA@`332176545?<3?<CCl4CDfCHn?BLj`:8CHbCDh``::987AlCEjCF`9CEdBMj`1`n``2CChDLbCFdCFlBE`CHdCAh0BBj`CJfDAfJjElAGdCK`?``````32`3`DLjAIbCE`0``:CFfCHh:ABjnBLbCIl``Dl`BLj0```````AOl2```````CAh```````````BAh`BMj`CFlCHn`BOfBHdBIh``?`9DAfCK`CFf88CJf9```BBj`8:CHl;;CHh<``1<DMdCChCCjCDlCFdAM`CIl`BMj0```````BLd911``CFlBLj0n01CCl`FfABjCGh`````44```CHhB@j2`BBj````CJf6``````<8<<<CDf552CHlBHlC```CG`DLb:77```B@f555`CHj`6``BOfBHdB@`;;JjEl`n``BMj```3`======`32AGd``12``4`BLdBBjCHn:94CClBLjCHl`7``4`2CHhCJf<;88``1```822`2911111111ABjBAhCAh`473?>;``3?>;``3?>;``3?>;````CG`CGh=`>`El>```?8`CDd??BMjALf0BOfBHdBIh``CCl>>`BBj`01``CHnCHh=0CEnAIbDl:?`CB`BFhBLhBMbCBlCBnCC`CCbCCdBEhBFlCCfBGhCChCCjCClCCnAB`A@hCD`CDbCDdCDfCDhBKbCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`BOfBBjCHbCAhBMfCHdCHfCHhCHjCHlCHnBMjCI`CIbCIdCIfCIhCIjCIlCInCJ`CJbBLdCAlBLjCJdCJfN`CJhCJjA@bBGbBGfMjBAjA@`BIhCJlCJnCK``BFhBK`0``BKd:AHdBKfBKh000BKj6BKl`BBjBLb1BLdBGh0BLf1BLh5`5`5BLj`N`CCbBLnCIjBM`00CIb<BFh=`=ACdACf1010AHh;BBj`0AHj011`22`BGfBMlBMnBN`52105AHl6BKf`1AHn81`BNbCIj`:AN`990ANb0::`BNdBM`7BNh=8=MjBNjBNl000N`BOb11BOf2ANhBOhBKfALfBOj`877`BBjBOn0`CDnBKlC@bC@hC@lCA`4`7`BLdBLj<00<00010<0CBdBMnAMbBLnCAdC@`<CB`BFhBLhBMbCBlCBnCC`CCbDEhBNbC@bDBbCNjBNdCNlCLhCCdBEhC@hBFlCCfBGhCChDHhCNnCCjCO`CClCCnBN`DClCKlBKdC@nC@lAB`A@hCA`DEjCD`CDbCDdCDfCDhBKbCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfDDdCGhCGjCGlCGnCH`BOfBBjCHbCAhBMfCHdCHfCHhCHjCHlCHnCM`BMjCI`CIbCIdCIfCIhCIjCIlCInCJ`CJbBLdCAlBLjCJdCJfN`0CJhCJjA@bDAfBGbBGfMjBAjA@`BIhCJlCJnCK`CBdBMnAMbBLnCAdC@`BKlCB`BFhBLhBMbCBlCBnCC`CCbDEhBNbC@bDBbCNjBNdCNlCLhCCdBEhC@hBFlCCfBGhCChDHhCNnCCjCO`CClCCnBN`DClCKlBKdC@nC@lAB`A@hCA`DEjCD`CDbCDdCDfCDhBKbCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfDDdCGhCGjCGlCGnCH`BOfBBjCHbCAhBMfCHdCHfCHhCHjCHlCHnCM`BMjCI`CIbCIdCIfCIhCIjCIlCInCJ`CJbBLdCAlBLjCJdCJfN`CJhCJjA@bDAfBGbBGfMjBAjA@`BIhCJlCJnCK`BFh8BKf`ACb2CBnCCbCIhCAjCAl`BNhCAn2CB``9:AI`BBjAOj=2201`1N`2CBf3A@bCBhBGfCBjBKf10CD``11`9`9`9;BFhBLhBMbCBlCBnCC`CCbCCdBEhBFlCCfBGhCChCCjCClCCnAB`A@hCD`CDbCDdCDfCDhBKbCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`BOfBBjCHbCAhBMfCHdCHfCHhCHjCHlCHnBMjCI`CIbCIdCIfCIhCIjCIlCInCJ`CJbBLdCAlBLjCJdCJfN`CJhCJjA@bBGbBGfMjBAjA@`BIhCJlCJnCK`BKfCB`BFhBLhBMbCBlCBnCC`CCbCCdBEhBFlCCfBGhCChCCjCClCCnAB`A@hCD`CDbCDdCDfCDhBKbCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`BOfBBjCHbCAhBMfCHdCHfCHhCHjCHlCHnBMjCI`CIbCIdCIfCIhCIjCIlCInCJ`CJbBLdCAlBLjCJdCJfN`CJhCJjA@bBGbBGfMjBAjA@`BIhCJlCJnCK`CB`BFhBLhBMbCBlCBnCC`CCbCCdBEhBFlCCfBGhCChCCjCClCCnAB`A@hCD`CDbCDdCDfCDhBKbCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`BOfBBjCHbCAhBMfCHdCHfCHhCHjCHlCHnBMjCI`CIbCIdCIfCIhCIjCIlCInCJ`CJbBLdCAlBLjCJdCJfN`CJhCJjA@bBGbBGfMjBAjA@`BIhCJlCJnCK`CCdBEhBFl`CKbCBlCC`CBnCCbBGhN``BLnCDjBKb``BFh`B@n000ADnAE`100033`CJd0CD`BKjCDb<;BLj`CElCFnCGh`BOn`CKbCBl````BMnCKj4BN`9155``BFhCKlBBj88```BK`CJd4CKn0`3``3`3`3``3CL`>`CEb```0`````CLbCLdCBhCIbCLfBGhCId1CIfCJlCDbN`0BFhBMbCBnCCbCLhBEhBFlCClCD`:CDdBKbCDjCDnCE`CEbCEdCEfCEjCElCEnCFbCFdCFjCFlCFnCG`CGhBBjBMf00CI`CIbCIdCIhCIjCIlCInCJbBLjN`000CJhCJjA@bBGbBAjA@```CBdBMnAMb0BLnCAdC@`BKlCB`BFhBLhBMbCBlCBnCC`CCbDEhBNbC@bDBbCNjBNdCNlCLhCCdBEhC@hBFlCCfBGhCChDHhCNnCCjCO`CClCCnBN`DClCKlBKdC@nC@lAB`A@hCA`DEjCD`CDbCDdCDfCDhBKbCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfDDdCGhCGjCGlCGnCH`BOfBBjCHbCAhBMf0CHdCHfCHhCHjCHlCHnCM`BMjCI`CIbCIdCIfCIhCIjCIlCInCJ`CJbBLdCAlBLjCJdCJfN`0CJhCJjA@bDAfBGbBGfMjBAjA@`BIhCJlCJnCK`CBdBMnAMb0BLnCAdC@`BKlCB`BFhBLhBMbCBlCBnCC`CCbDEhBNbC@bDBbCNjBNdCNlCLhCCdBEhC@hBFlCCfBGhCChDHhCNnCCjCO`CClCCnBN`DClCKlBKdC@nC@lAB`A@hCA`DEjCD`CDbCDdCDfCDhBKbCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfDDdCGhCGjCGlCGnCH`BOfBBjCHbCAhBMfCHdCHfCHhCHjCHlCHnCM`BMjCI`CIbCIdCIfCIhCIjCIlCInCJ`CJbBLdCAlBLjCJdCJfN`CJhCJjA@bDAfBGbBGfMjBAjA@`BIhCJlCJnCK`CFjF`FhCGhBFh0001N``BEf`CJj`BN`BBjBLj7CM`CI`BLb4BLf5999CBdBMnAMbBLnCAdC@`BKlCB`0BFh0BLhBMbCBlCBnCC`CCbDEhBNbC@bDBbCNjBNdCNlCLhCCdBEhC@hBFlCCfBGhCChDHhCNnCCjCO`CClCCnBN`DClCKlBKdC@nC@lAB`A@hCA`DEjCD`CDbCDdCDfCDhBKbCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfDDdCGhCGjCGlCGnCH`BOfBBjCHbCAhBMfCHdCHfCHhCHjCHlCHnCM`BMjCI`CIbCIdCIfCIhCIjCIlCInCJ`CJbBLdCAlBLjCJdCJfN`0CJhCJjA@bDAfBGbBGfMjBAjA@`BIhCJlCJnCK`BBjBFh01BKf``2AOj1;:9Oj:``CD``CI`BLjN`0CDbCKj0```CMj2CCdBEhBFlBGhCChCCjCClAB`>:CDdCDfCDhBKbCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfBOfBBj0CHbCAhBMf0CHdCHfCHhCHjCHlCHnCM`BMjCI`CIfCIhCIjCIlCInCJ`CJbBLdCJfN`00CJhCJjA@bBGbBGf0MjBAjA@`BIhCJlCJnCK`BBjAId0BEh00BFl00BGh00CCh00CCj00CCl00AB`00CD`00CDb00CDd00CDf00CDh00BKb00CDj00CDl00CDn00CE`00CEb00CEd00CEf00CEj00CEl00CEn00CF`00CFb00CFd00CFh00CFl00CFn00CG`00CGb00CGd00CGf00BBj00CHb00CAh00CHd00CHf00CHh00CHj00CHl00CHn00CI`00CIf00CIh00CIj00CIl00CIn00CJ`00CJb00BLd00N`00CJh00CJj00BGb00BAj00A@`00CK`00CN`BEh?BBj09```BFh0AIf20`BLj3BOnA@h111ACdCB`601BKfBKd00BGfCD`:;`:;;AIhAIj5<=999CNfCNhACfAOhBLnBKlCKbCBlCC`C@bCNjBNdCNlC@hCNnCO`CKlC@lCA`ACd=<;9C@n`BFhBN`BBj`0CEb0`BMfCBf33`N`BNhCAnCAjCCdBEhBFlCCfBGh0CChCCjCClAB`A@hBM`CD`CDbCDdCDfCDhBKbCDjCObCDl0CDnCE`0CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfBBj0CHbCAh0BMfCHd0CHf0CHh0CHj0CHl0CHn0CM`BMj0CI`CIbCIdCIfCIhCIjCIlCInCJ`CJbBLdCAlBLj0000CJdCJfN`00CJhCJjA@bBGbBGfMjBAjA@`BIhCJlCJnCK``;CCd:`BLnCIjCIh`BBjCBdBMnAMb6CAdC@`BKlCB`BFh00BLhBMbCBlCBnCC`CCbDEhBNbC@bDBbCNjBNdCNlCLhCCdBEhC@hBFlCCfBGhCChDHhCNnCCjCO`CClCCnBN`DClCKlBKdC@nC@lAB`0A@hCA`DEjCD`CDbCDdCDf0CDhBKb0CDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfDDdCGhCGjCGlCGnCH`BOfBBj0000000000000CHbCAhBMf0000000000CHdCHfCHhCHjCHlCHnCM`0BMj0000CI`CIbCIdCIfCIhCIjCIl0CInCJ`CJbBLd0000CAlBLjCJdCJfN`00000000000000000CJhCJjA@bDAfBGbBGf00Mj0000000000BAjA@`BIhCJlCJnCK`D@jBLj000D@lDA`DAbAMb04N`DMf00ADj13310732CJjCKl4422DAf66BMfDAhALf0`AIl1CI`BFhDAjAIn5BGfCAl`BBj`00N`BKfBMnBN`<4AJ`AOj10CBd<CJfDlCCn00CLjBMdD@j?BNb`C@l=>>==BNh6CD``CObBBdALfBKfCKbCBlCCbBFhDBf11``BI`AJbBBjN`21=9BEhBFlBGhCChCCjCClCD`CDbCDdCDfCDhBKbCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfBOfBBjCHbCAhCHdCHfCHhCHjCHlCHnBMjCI`CIfCIhCIjCIlCInCJ`CJbBLdCJfN`CJhCJjBGbBAjA@`CK`DBj0BLhBN`BBjBOn0CBnCCb`DBlCLdCBhCIbCLfCIdBLnBKbAB`CD````=`C@bCDnBEh>=21N`0CJbBGn`3BFl``CO`CKlBMb:CBdBMnAMbBLnCAdC@`BKlCB`BFhBLh:CBlCBnCC`CCbDEhBNbC@bDBbCNjBNdCNlCLhCCdBEhC@hBFlCCfBGhCChDHhCNnCCjCO`CClCCnBN`DClCKlBKdC@nC@lAB`A@hCA`DEjCD`CDbCDdCDfCDhBKbCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfDDdCGhCGjCGlCGnCH`BOfBBjCHbCAhBMfCHdCHfCHhCHjCHlCHnCM`BMjCI`CIbCIdCIfCIhCIjCIlCInCJ`CJbBLdCAlBLjCJdCJfN`CJhCJjA@bDAfBGbBGfMjBAjA@`BIhCJlCJnCK`AB`ACdBFhDAjA@hCAlBLj``8``BBj``011CBdBMnAMbBLnCAdC@`BKlCB`=BLhBMbCBlCBnCC`CCbDEhBNbC@bDBbCNjBNdCNlCLhCCdBEhC@hBFlCCfBGhCChDHhCNnCCjCO`CClCCnBN`DClCKlBKdC@nC@lAB`A@hCA`DEjCD`CDbCDdCDfCDhBKbCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfDDdCGhCGjCGlCGnCH`BOfBBjCHbCAhBMfCHdCHfCHhCHjCHlCHnCM`BMjCI`CIbCIdCIfCIhCIjCIlCInCJ`CJbBLdCAlBLjCJdCJfN`CJhCJjA@bDAfBGbBGfMjBAjA@`BIhCJlCJnCK`BDl>78AMb?DEhDBbBBjBLj=DC`BN`N`0CD`BBfBFj3MjBG`;8CAhCDl`;`1BGhCI`<BKfC@n?`AJdBBj456`00`AJf1CLbCLdCBh4=4`74`7A@h5>AB`BAj`N`CJfBFjCMj35CE`4BGh;:9ALfBLjBGfD@j2DCfBMnBFhBN`DAjDCh3DCj0BLnBKb1BKdDClCJd0BEh`:9ALfBBjDD`=N`CEf?=:ABj00`BKfBN`6BGfBFh3CEb9`DDbBGhDDdCJfMj>>6BLhCC`CKlCCbCD`CFhBBjDCj00000000000000000000AJb2N`13CDnCElCFbCFnF`Fh``6BFhDCl;`;BNb0BMf0=020=`==`1?1111CJf```BMn5BN`AHdBBjDDlBKfCJdCM`CI``=7653`8=7AJh64DDn5CNj`BAjCFjCIbCLfCIdCBh21`BMnBFhBN`AHdBBj1CCdCIfA@bDDlBKfCM`CI`DBlCLd>CIbCLfCIdCDb`=CLb5CBh5BGh0BLb1BBjBLfF`FhBKfCKbCBlCC`BMbCBnCCbDEjCD`C@b1BMnBN`AHnBBj==09CAlOjBAj33`DBlCLdCBhCLfBGhCIdN`CE`3;``3DE`<<BNbDLdCNfCNhDLfDEbAMbBLnBKlCBlCC`:C@bCNjBNdCNlCLhC@hBGhCNnCO`CCnCKlC@nC@lCA`BKbBMfCIbCIdBLdCAlN`BGfMjBAj332AJjBKfCDf6`05CBlCC`28888108888DEhDBbBM`CAdC@`C@nBBj0`0BLjAId0``AB`A@hCEb?BFh6CM`CI`CDbF`FhC@lCJdBEhBFlCCnAIfBLnCJbBGn>CAlBBjCLbCLdCBh0CGlCH`DEj66`CCbCFhCJjBGh9DBl9CD`22N`1BEhBFl?22````?9DCl0`CJnDDlBBjBFh8BGf88`1AJh3DDnBKfCLbCLdCBh>CDbCEb0CD`DF`<N`0C@l1111CKb:CBlCC`CBnCCb8CJj`AJl0BLbBBjBLfBLj`BKfBFhBKd``5`BOn60BNb11``7`7`CAlAJn6BMn6BN`;CEfBLnDBf:>AK`?<?DFhBBj1010100010101010101010101010DFjCBf2CCn0130CFnCJdCKbCBlCC`BMbCBnCCbCD`CIj0DCjBMf??3BM`BFh00000DFlAKb0CNjBNdC@nC@l7CJd?=DEj=CFh2`BLj?:`DBlCLdCBhCIbCLfCIdN`BFh0CDbCEbCDn`AKb<4C@l0CA`CNjBNdCO`4CNfBBjBGfAKdBKfBMn?BN`5AKfBFh7BKb8ACf692222CKjBMbCD`CJh1:68=<<5AKh=0=====`AHl;8:??80<N`CKbCBlCC`BOnBKfBGf022`2`2BBjBEh>>CFnBMnBFhBN`AKj68DGb9A@h8;`;;;;;CEfCBhCIh;``>`>`>`>`>N`<BLb=BLdBLj0BLfBLnDClBKb01`BMnBFhBN`AHdBBjDDlBKfBMfCAh=N`8BLh86AKl5DGf066AKn7BGf`CGjCGnCEb`CIbCId1CBhBFhCGh1CJfBN`D@j;AL`5DGjBKjBBjBOnBMn1DClAB`CB`=BLhBMbCBlCBnCC`CCbCCdBEhBFlCCfBGhCChCCjCClCCnAB`A@hCD`CDbCDdCDfCDhBKbCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`BOfBBjCHbCAhBMfCHdCHfCHhCHjCHlCHnBMjCI`CIbCIdCIfCIhCIjCIlCInCJ`CJbBLdCAlBLjCJdCJfN`CJhCJjA@bBGbBGfMjBAjA@`BIhCJlCJnCK`BBjBNbCBhBGhCDlCE`5CAhCHdCHfCHhCHjCHlCHnBMjN`D@jCJjBOn0DClCElCFnBLjCEf0BFhBGf000ABj00DGlBGh0CCn10CDb21AN`660ANb077B@n000ADnAE`1000CBdBMnAMbBLnCAdC@`BKlCB`BFhBLhBMbCBlCBnCC`CCbDEhBNbC@bDBbCNjBNdCNlCLhCCdBEhC@hBFlCCfBGhCChDHhCNnCCjCO`CClCCnBN`DClCKlBKdC@nC@lAB`A@hCA`DEjCD`CDbCDdCDfCDhBKbCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfDDdCGhCGjCGlCGnCH`BOfBBjCHbCAhBMfCHdCHfCHhCHjCHlCHnCM`BMjCI`CIbCIdCIfCIhCIjCIlCInCJ`CJbBLdCAlBLjCJdCJf0N`0CJhCJjA@bDAfBGbBGfMjBAjA@`BIhCJlCJnCK`?D@jCBdBMnAMbBLnCAdC@`BKlCB`BFhBLhBMbCBlCBnCC`CCbDEhBNbC@bDBbCNjBNdCNlCLhCCdBEhC@hBFlCCfBGhCChDHhCNnCCjCO`CClCCnBN`DClCKlBKdC@nC@lAB`A@hCA`DEjCD`CDbCDdCDfCDhBKbCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfDDdCGhCGjCGlCGnCH`BOfBBjCHbCAhBMfCHdCHfCHhCHjCHlCHnCM`BMjCI`CIbCIdCIfCIhCIjCIlCInCJ`CJbBLdCAlBLjCJdCJfN`CJhCJjA@bDAfBGbBGfMjBAjA@`BIhCJlCJnCK`CD`BNb0BBj1DE`CGbCGdCGfN`?00000CDb11BNhCAjBMdBGhCDlCE`<CAhCHdCHfCHhCHjCHlCHnBMj??CBdBMnAMbBLnCAdC@`BKlCB`BFhBLhBMbCBlCBnCC`CCbDEhBNbC@bDBbCNjBNdCNlCLhCCdBEhC@hBFlCCfBGhCChDHhCNnCCjCO`CClCCnBN`DClCKlBKdC@nC@lAB`A@hCA`DEjCD`CDbCDdCDfCDhBKbCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfDDdCGhCGjCGlCGnCH`BOfBBjCHbCAhBMfCHdCHfCHhCHjCHlCHnCM`BMjCI`CIbCIdCIfCIhCIjCIlCInCJ`CJbBLdCAlBLjCJdCJfN`CJhCJjA@bDAfBGbBGfMjBAjA@`BIhCJlCJnCK`Cf`BLjAHnBMnBFhBN`BBjBKf3432133N`0?CD`3DHd0C@lCCbCFh`BLnBKbBGf0ALfMjCMj=CJbBGn4545BMnBFhBN`AKjBBjBKfDGb187DHf0CJdN`CBd:AMbBLnCAdC@`BKlCB`?BLhBMbCBlCBnCC`CCbDEhBNbC@bDBbCNjBNdCNlCLhCCdBEhC@hBFlCCfBGhCChDHhCNnCCjCO`CClCCnBN`DClCKlBKdC@nC@lAB`A@hCA`DEjCD`CDbCDdCDfCDhBKbCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfDDdCGhCGjCGlCGnCH`BOfBBjCHbCAhBMfCHdCHfCHhCHjCHlCHnCM`BMjCI`CIbCIdCIfCIhCIjCIlCInCJ`CJbBLdCAlBLjCJdCJfN`CJhCJjA@bDAfBGbBGfMjBAjA@`BIhCJlCJnCK`=CLbCLdCBh10CClBGhCId1A@b`CGlCH`CCdCIf4BLnCIbC@lCC`C@bCO`CBlDLdDLfCKlCD`47BFhBKb111CNjBNd<4DEj49CDbCNlC@h1CLh1CA`90C@b0CIbCIdCBl8BNb1?19196BKd55322CD`>C@l65654CC`CO`CKl4CNj483835CNn3<96BAj<;;<;:CDb=CKb<<774BNd6:6:>C@b>3BFh<8<38;07298;<0?141?<3?:8<0CA`41CBl0<<94:=>BNb?1=<;?1=<;?CIbCId36953CD`40C@l7:5CC`7BKb:557=7=9BGf0ALf167;ABj00000000000000000N`CElCFn`22BBjCLbCLdCBh?`ALbDMhDMjDMl2102DMnDN`DNbDNd0DNfDNhDNjDNlDNnDO`DObDOd55DOfDOhDOj14;3DOl:DOn49E@`E@b0>E@dDNd240;4:029513622><??>;E@fE@hE@j0E@lE@n4EA`EAbEAdEAf3EAh528EAj1EAl11098432323570;5EAnEB`EBb0EBdEBfEBhEBjEBl01EBn1EC`ECbECdECfEChECj697DM`DMb0ECl00DLlDLn10ECnED`EDb21EDdEDfEDhEDj03421EDl0DI`00`00`000`0000`0`0000``````````BInBJ`0`ALlALhALd``````````````````````````````````DIh000000000000000DIj`CAf000000000000000DIl`0`00`0000000000000`00EDnEE`EEb32103210321032103321032103`210332103210321032103EEd00````````BNl0000CCdCLbCLdCLf3DBl213232114021320213230232DFh0000000000000132`433543`DJ`0000``07777DIn8111111111111111`11111111`DJh``DJb000000000`0000DJd11111211111DJj0``0000CKd010100000101010100000110001010`001010101011``11110DJl`00000000000`0000B@``JjElDl```````21AGd`2``3`0320```32````3`````3200``32`3`3200``0`320``3230```00`40320``320```AOf`2DLdDLf````B@f``8``764``764``764``764``4`555444AOl875``4``5B@jLd1010Al;:8`;:`;``939```````````BAh``35`=<;`<`<;9<`<;99````90`<;9``<;9``<;9``<;9``9;9`99ALf0;0AN`0ANb0ANh3`AOj0`B@n000`1Oj`AOh7777733DlBBd9BBf::```4DLdDLf;;::7777<<<10<`````AOf`AOl10``7`````1010````````````D@lDA`DAb`CMh00000000000000000000000000000000000000000000000000`BJb0`DJn000000000000000000``BMjCHd00011111CHlCHh33`03`CHj414414222124444411111444124222CHn055355`51CHf443665555553555531446646633363631365636`1366616466364666366366664444246`4444446`1646`334446333333333664633133````DMnDN`DNbEAnEB`EBb0EBdEBfEBhEBjEBl01EBn1EC`ECbECdECfEChECj697ECnED`EDb21EDdEDfEDhEDj03421EDl0`CHfCHj0`0DK`000`00000000000000000000000000DKb000`00000000000000000000000000````CF`0`````````DKd00000000000000000000000000000`DHb000000000`0000``000000000AM`00`````DKhCBh000000000000000000`````AKh0````````````F`Fh10101022```BOjBOn0000000000000000`0000000`0`00`00000`0`0`0`0`00000`CAl0000``EEfEEhMb``0``AIdBGl2````02AbBKf111111`11100`110010011101110001DKn3520352112222122121122521525222222035220352222203521125242224222225552222221215222035222222222222222222222222222222222222222222222222222222222222221222111122222215222222`203520352220BFj32333322033332323333333332232232333323223333333333333333333333333333333333333333333333333333332315333533332`3322333233326233332233123322322333333333233233222333336333333333333333146333333333314633333333333333314633333232221463333``Ed000000000000000000000```BLb`0BLfBn`210210210210``CBjG`10CMd0`000000000000000000000000","f":"``````{{}b}`````````{{}d}````````{{fh}b}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Ah}}}}}d}{{{f{{l{c}}}}}AjAl}{{{f{{l{An}}}}{f{B`}}}}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}}{{{l{c}}{l{c}}}{}Al}{{{l{Bb}}{l{Bb}}}}{{{f{{l{Bb}}}}{f{{Bf{Bd}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{An}}{l{An}}}}{{{f{{l{An}}}}{f{{l{An}}}}}}{{{l{c}}e}{}Al{BhBj}}{{{f{{l{c}}}}e}{}Al{BhBj}}{{{f{{l{Bl}}}}{f{{l{Bl}}}}}}{{{l{Bl}}{l{Bl}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{Bb}}}}{f{C`}}}Ab}{{{f{{l{j}}}}{f{C`}}}Ab}{{{f{{l{c}}}}{f{C`}}}AbAl}{{{f{{l{Cb}}}}{f{C`}}}Ab}{{{f{{l{Ah}}}}{f{C`}}}Ab}{{{f{{l{An}}}}{f{C`}}}Ab}{{{f{{l{Bl}}}}{f{C`}}}Ab}{{{f{{l{{Cd{c}}}}}}{f{C`}}}AbCf}{{{f{{l{Bl}}}}}d}{{{f{{l{Bl}}}}}{{Ch{d}}}}{{{f{{l{Ah}}}}}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Cb}}}}}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Ah}}}}Dd}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Cb}}}}Dd}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}54{{{f{Df{l{c}}}}{f{{l{c}}}}}{{A`{bn}}}{{Dl{}{{Dh{Dj}}}}}}{{{f{{l{c}}}}e}{{l{c}}}Al{{Dn{Ch}{{Ad{Ch}}}}E`}}{{{f{{l{Bb}}}}c}{{l{Bb}}}{{Dn{{Ch{{f{{Bf{Bd}}}}}}}{{Ad{{Ch{{Eb{{Bf{Bd}}}}}}}}}}E`}}{{{f{{l{Bl}}}}c}{{l{Bl}}}{{Dn{{Ch{d}}}{{Ad{{Ch{d}}}}}}E`}}{{{f{{l{{Cd{c}}}}}}e}{{l{{Cd{c}}}}}Cf{{Dn{{Ch{{f{c}}}}}{{Ad{{Ch{c}}}}}}E`}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Dn{{Ch{Ab}}}{{Ad{{Ch{Ab}}}}}}E`}}{{{f{{l{An}}}}c}{{l{An}}}{{Dn{{Ch{{f{B`}}}}}{{Ad{{Ch{{Eb{B`}}}}}}}}E`}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Af{Ed}{{Ad{Ab}}}}}}{{{f{{l{Cb}}}}e}{{l{g}}}{}{{Af{{Ch{Ed}}}{{Ad{{Ch{c}}}}}}E`}Dl}{{{f{{l{Ah}}}}e}{{l{g}}}{}{{Af{{Ch{Ed}}}{{Ad{{Ch{c}}}}}}E`}Dl}{{{f{{l{Cb}}}}c}{{l{Cb}}}{{Af{Ed}{{Ad{Ab}}}}}}{{{f{{l{Ef}}}}c}Ab{{Dn{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Eh}}}}c}Ab{{Dn{{f{Ab}}}{{Ad{Ab}}}}}}{{{l{c}}e}{{l{c}}}Al{{Dn{}{{Ad{}}}}E`}}{{{f{{l{c}}}}e}{{l{An}}}Dl{{Af{{f{DfEj}}}}}}{{{f{{l{c}}}}{f{Dn}}}{{l{c}}}Al}{{{f{{l{Bb}}}}{f{Dn}}}{{l{Bb}}}}{{{f{{l{An}}}}{f{Dn}}}{{l{An}}}}{{{f{{l{Bl}}}}{f{Dn}}}{{l{Bl}}}}{{{f{{l{Bb}}}}{f{Dn}}}{{l{c}}}Dl}{{{f{{l{An}}}}{f{Dn}}}{{l{c}}}Dl}{{{f{{l{Bl}}}}{f{Dn}}}{{l{c}}}Dl}{{{f{{l{c}}}}{f{Dn}}}{{l{e}}}AlDl}{{{f{Df{l{c}}}}e}bAl{{Dn{}{{Ad{}}}}E`}}{{{f{{l{Bb}}}}c}{{l{Bb}}}{{Af{{f{{Bf{Bd}}}}}{{Ad{{f{{Bf{Bd}}}}}}}}}}{{{f{{l{An}}}}c}{{l{An}}}{{Af{{f{B`}}}{{Ad{{f{B`}}}}}}}}{{{f{{l{c}}}}Elg}{{l{i}}}Dl{}{{Af{}{{Ad{e}}}}}Dl}{{{f{{l{Cb}}}}{f{Dn}}}{{A`{{l{Cb}}n}}}}{{{f{{l{Ah}}}}{f{Dn}}}{{A`{{l{Ah}}n}}}}{{{f{{l{c}}}}g{f{Df{Bf{e}}}}}bAl{}{{Dn{Ch{f{e}}}{{Ad{e}}}}}}{{{f{{l{Bl}}}}e{f{Df{Bf{c}}}}}b{}{{Dn{{Ch{d}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Ah}}}}e{f{Df{Bf{c}}}}}b{}{{Dn{{Ch{Ab}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{An}}}}e{f{Df{Bf{c}}}}}b{}{{Dn{{Ch{{f{B`}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Bb}}}}e{f{Df{Bf{c}}}}}b{}{{Dn{{Ch{{f{{Bf{Bd}}}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{{Cd{c}}}}}}g{f{Df{Bf{e}}}}}bCf{}{{Dn{{Ch{{f{c}}}}{f{e}}}{{Ad{e}}}}}}{{{f{{l{c}}}}e}{{l{c}}}Al{{Dn{}{{Ad{}}}}E`}}{{{f{{l{{Cd{c}}}}}}e}{{l{{Cd{c}}}}}Cf{{Dn{{f{c}}}{{Ad{c}}}}E`}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Dn{Ab}{{Ad{Ab}}}}E`}}{{{f{{l{Bb}}}}c}{{l{Bb}}}{{Dn{{f{{Bf{Bd}}}}}{{Ad{{Eb{{Bf{Bd}}}}}}}}E`}}{{{f{{l{An}}}}c}{{l{An}}}{{Dn{{f{B`}}}{{Ad{{Eb{B`}}}}}}E`}}{{{f{{l{Bl}}}}c}{{l{Bl}}}{{Dn{d}{{Ad{d}}}}E`}}{{{f{{l{An}}}}c}{{l{An}}}{{Af{En{f{B`}}}{{Ad{En}}}}E`}}{{{f{{l{c}}}}F`}{{l{Fb}}}Al}{{{f{{l{Bl}}}}F`}{{l{Fb}}}}{{{f{{l{An}}}}F`}{{l{Fb}}}}{{{f{{l{j}}}}F`}{{l{Fb}}}}{{{f{{l{Bb}}}}F`}{{l{Fb}}}}{{{f{{l{Fd}}}}F`}{{l{Fb}}}}{{{f{{l{Bb}}}}{f{{Bf{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}}{{{f{{l{Fd}}}}{f{{Bf{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}}{{{f{{l{An}}}}{f{{Bf{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}}{{{f{{l{Bl}}}}{f{{Bf{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}}{{{f{{l{c}}}}{f{{Bf{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}Al}{{{f{{l{{Cd{c}}}}}}}{{A`{{l{Fb}}n}}}Cf}{{{f{{l{c}}}}}{{A`{{l{Fb}}n}}}Al}{{{f{{l{An}}}}}{{A`{{l{Fb}}n}}}}{{{f{{l{Bb}}}}}{{A`{{l{Fb}}n}}}}{{{f{{l{Bl}}}}}{{A`{{l{Fb}}n}}}}`{{{f{{l{Cb}}}}}{{f{{l{Cb}}}}}}{{{f{{l{An}}}}}{{l{Bb}}}}{{{f{{l{Bb}}}}}{{f{{l{Bb}}}}}}{{{f{{l{Ah}}}}}{{f{{l{Ah}}}}}}{{{f{{l{c}}}}}{{f{{l{c}}}}}Dl}{{{f{{l{c}}}}}{{f{El}}}Dl}{{{f{{l{An}}}}}{{f{{l{An}}}}}}0{{{f{{l{Ah}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{Ah}}}DlDl{{Af{{Ch{Ed}}ChCh}{{Ad{{Ch{Ab}}}}}}}}{{{f{{l{Bl}}}}{f{{l{Bl}}}}}}{{{l{Bl}}{l{Bl}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Fj}210120{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{{l{c}}}}}{{Cn{Fl}}}Dl}``{{{f{{l{j}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}{{l{g}}}Al{{Dn{}{{Ad{}}}}E`}Al}{{{f{{l{Bl}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{Ah}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{Bb}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{El}}}{{A`{Abn}}}Al}{{{f{{l{Cb}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{Fd}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{An}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{Cb}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{l{Bb}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{l{Ah}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{l{c}}}}{f{El}}Fn}{{A`{Abn}}}Al}{{{f{{l{Fd}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{l{An}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{l{j}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{l{Bl}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}G`}{{{f{{l{c}}}}e}{{A`{Abn}}}G`Bj}{{{f{{l{c}}}}}{{Gh{{Gb{{Cn{Cl}}}}{Gf{{f{{Cn{Cl}}}}}{{Ad{Gd}}}}}}}Dl}{{{f{{l{c}}}}}{{`{{D`{}{{Cj{Gd}}}}}}}Dl}{{{f{{l{c}}}}}{{f{{Gj{{Cn{Cl}}}}}}}Dl}{{{f{Df{l{c}}}}}{{f{Df{Gj{{Cn{Cl}}}}}}}Dl}{{{f{{l{c}}}}}{{l{c}}}Dl}0{{f{f{Dfc}}}b{}}{fb}`{{{f{Df{l{c}}}}}b{DlAl}}`{fGl}{{{f{{l{c}}}}}{{A`{{f{Bf}}n}}}Al}{{{f{Df{l{c}}}}{f{{l{c}}}}Gn}bDl}{{{f{Df{l{c}}}}{f{{l{e}}}}Gn}bDlDl}{{{f{{l{c}}}}}{{`{H`}}}Al}{{}{{l{c}}}Dl}{Gd{{f{c}}}{}}0{Gd{{f{Dfc}}}{}}0{{{l{c}}e}{}Al{BhBj}}{{{f{{l{c}}}}e}{}Al{BhBj}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{Gdb}{{{f{Df{l{c}}}}}bDl}1{{{f{{l{c}}}}}{{l{c}}}Dl}{{{f{{l{c}}}}}{{f{El}}}Dl}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}{{l{Bl}}}}{{{f{{l{Bb}}}}{f{{Bf{Bd}}}}}{{l{Bl}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bl}}}Al}{{{f{{l{Bl}}}}{f{{l{Bl}}}}}{{l{Bl}}}}{{{f{{l{c}}}}e}{{l{Bl}}}AlBj}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{Bl}}}}{{{f{{l{An}}}}{f{B`}}}{{l{Bl}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Bl}}}}{{{f{{l{Cb}}}}{f{{l{Cb}}}}}{{l{Bl}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Bl}}}}4820195673{{{f{{l{Ah}}}}}{{A`{{Hf{Ab{Hd{Hb}}}}n}}}}{{{f{{l{Cb}}}}}{{A`{{Hf{Ab{Hd{Hb}}}}n}}}}{{{f{Df{l{c}}}}{f{{l{c}}}}}{{A`{bn}}}Al}{{{f{{l{j}}}}{f{B`}}}{{A`{Abn}}}}{{{f{{l{j}}}}}{{Gj{Ab}}}}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Al}{{{f{{l{Bl}}}}d}{{A`{{l{Bl}}n}}}}{{{f{{l{Bb}}}}{f{{Bf{Bd}}}}}{{A`{{l{Bb}}n}}}}{{{f{{l{{Cd{c}}}}}}{f{{l{Bl}}}}}{{A`{{l{{Cd{c}}}}n}}}Cf}{{{f{{l{Bb}}}}{f{{l{Bl}}}}}{{A`{{l{Bb}}n}}}}{{{f{{l{c}}}}{f{{l{Bl}}}}}{{A`{{l{c}}n}}}{{Dl{}{{Hh{Dj}}{Hj{Dj}}}}}}{{{f{{l{An}}}}{f{{l{Bl}}}}}{{A`{{l{An}}n}}}}{{{f{{l{c}}}}}ChDl}{{{f{{l{c}}}}}{{Ch{Gd}}}Dl}`{{{f{{l{{Cd{c}}}}}}{f{DfHl}}}{{A`{bHn}}}Cf}{{{f{{l{Cb}}}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{l{c}}}}{f{DfHl}}}{{A`{bHn}}}Al}{{{f{{l{Bb}}}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{l{Bl}}}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{l{Ah}}}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{l{An}}}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{l{c}}}}e}bDl{{Af{Ch}}}}{{{f{{l{Ah}}}}c}b{{Af{{Ch{Ed}}}}}}{{{f{{l{Cb}}}}c}b{{Af{{Ch{Ed}}}}}}{cc{}}{c{{l{e}}}Cl{{Dl{}{{I`{c}}}}}}1{{Ddc}{{l{e}}}Ib{{Dl{}{{I`{}}}}Dl}}{{{f{{l{c}}}}e}{{l{c}}}{{Dl{}{{I`{}}}}Dl}Ib}{{Dd{Gj{{Cn{Cl}}}}}{{l{c}}}Dl}{{Dd{Gj{{Cn{Cl}}}}El}{{l{c}}}Dl}{{Dd{f{{Bf{Ff}}}}}{{A`{{l{j}}n}}}}{c{{l{Ah}}}{{Ib{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}{c{{l{e}}}{{Ib{}{{Cj{{Hf{Gj{Ch{Id}}}}}}}}}Al}{e{{l{{Cd{c}}}}}Cf{{Ib{}{{Cj{{Ch{c}}}}}}}}{c{{l{Ah}}}{{Ib{}{{Cj{{Ch{Ab}}}}}}}}{e{{l{Ah}}}{{If{Ab}}}{{Ib{}{{Cj{c}}}}}}{e{{l{Bb}}}{{Ih{{Bf{Bd}}}}}{{Ib{}{{Cj{c}}}}}}{e{{l{Bb}}}{{Ij{{Bf{Bd}}}}}{{Ib{}{{Cj{{Ch{c}}}}}}}}{e{{l{An}}}{{Ih{B`}}}{{Ib{}{{Cj{c}}}}}}{e{{l{An}}}{{Ij{B`}}}{{Ib{}{{Cj{{Ch{c}}}}}}}}{c{{l{Bl}}}{{Ib{}{{Cj{d}}}}}}{c{{l{Bl}}}{{Ib{}{{Cj{{Ch{d}}}}}}}}{c{{l{e}}}{{Ib{}{{Cj{Ch}}}}}Al}{{Dde}{{l{Bb}}}{{Ij{{Bf{Bd}}}}}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Ddc}{{l{e}}}{{D`{}{{Cj{Ch}}}}}Al}{{Ddc}{{l{Bl}}}{{D`{}{{Cj{{Ch{d}}}}}}}}{{Dde}{{l{An}}}{{Ij{B`}}}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Dde}{{l{{Cd{c}}}}}Cf{{D`{}{{Cj{{Ch{c}}}}}}}}6=798;:{e{{l{Fd}}}{{Ih{{Bf{Bd}}}}}{{Ib{}{{Cj{c}}}}}}{e{{l{Fd}}}{{Ij{{Bf{Bd}}}}}{{Ib{}{{Cj{{Ch{c}}}}}}}}{e{{l{{Cd{c}}}}}Cf{{Ib{}{{Cj{{Ch{c}}}}}}}}?8{{Ddc}{{l{e}}}{{D`{}{{Cj{}}}}}Al}{{Ddc}{{l{Bl}}}{{D`{}{{Cj{d}}}}}}{{Dde}{{l{An}}}{{Ij{B`}}}{{D`{}{{Cj{c}}}}}}{{Dde}{{l{{Cd{c}}}}}Cf{{D`{}{{Cj{c}}}}}}{{Dde}{{l{Bb}}}{{Ij{{Bf{Bd}}}}}{{D`{}{{Cj{c}}}}}}`{c{{l{e}}}{{Il{}{{Cj{Ch}}}}}Al}{c{{l{Bl}}}{{Il{}{{Cj{d}}}}}}{c{{l{Bl}}}{{Il{}{{Cj{{Ch{d}}}}}}}}{e{{l{An}}}{{Ih{B`}}InJ`Jb}{{Il{}{{Cj{c}}}}}}{e{{l{Bb}}}{{Ih{{Bf{Bd}}}}InJ`Jb}{{Il{}{{Cj{c}}}}}}{e{{l{An}}}{{Ij{B`}}InJ`}{{Il{}{{Cj{{Ch{c}}}}}}}}{e{{l{Bb}}}{{Ij{{Bf{Bd}}}}InJ`}{{Il{}{{Cj{{Ch{c}}}}}}}}{c{{l{Ah}}}{{Il{}{{Cj{{Ch{Ab}}}}}}}}{{cDdEl}{{l{Ah}}}{{Il{}{{Cj{{Ch{Ab}}}}}}}}{{Ddc}{{A`{{l{j}}n}}}{{Jd{}{{Cj{{f{Ab}}}}}}Jf}}{{Dd{f{{Bf{d}}}}}{{l{Bl}}}}{{Dd{f{{Bf{c}}}}}{{l{An}}}{{Ij{B`}}}}{{Dd{f{Bf}}}{{l{c}}}Al}{{Dd{f{{Bf{c}}}}}{{l{Bb}}}{{Ij{{Bf{Bd}}}}}}{{Dd{f{{Bf{c}}}}}{{l{{Cd{c}}}}}Cf}{{Dd{f{{Bf{{Ch{c}}}}}}}{{l{An}}}{{Ij{B`}}}}{{Dd{f{{Bf{{Ch{d}}}}}}}{{l{Bl}}}}{{Dd{f{{Bf{{Ch{c}}}}}}}{{l{{Cd{c}}}}}Cf}{{Dd{f{{Bf{{Ch{c}}}}}}}{{l{Bb}}}{{Ij{{Bf{Bd}}}}}}{{Dd{f{{Bf{Ch}}}}}{{l{c}}}Al}{c{{l{Bl}}}{{Jh{}{{Cj{{Ch{d}}}}}}}}{c{{l{e}}}{{Jh{}{{Cj{Ch}}}}}Al}{{DdGj}{{l{c}}}Al}{{DdGj{Ch{Id}}}{{l{c}}}Al}{{DdcGd}{{l{{Cd{c}}}}}Cf}{{Dd{f{Ab}}Gd}{{l{Cb}}}}{{DddGd}{{l{Bl}}}}{{Dd{f{B`}}Gd}{{l{An}}}}{{DdGd}{{l{c}}}Al}{{Dd{f{Ab}}Gd}{{l{Ah}}}}{{Dd{f{{Bf{Bd}}}}Gd}{{l{Bb}}}}{{Dd{f{{Bf{Bd}}}}Gd}{{l{Fd}}}}{{DdGd}{{l{Cb}}}}4{{DdGd}{{l{j}}}}{{DdGd}{{l{{Cd{c}}}}}Cf}{{DdGd}{{l{Ah}}}}{{DdGd}{{l{Fd}}}}{{DdGd}{{l{Bl}}}}{{DdGd}{{l{An}}}}{{DdGd}{{l{Bb}}}}{{{f{{l{c}}}}Gd}{{l{c}}}Dl}{{DdGd{f{El}}}{{l{Ah}}}}{{DdGd{f{El}}Gd}{{l{Cb}}}}{{{f{{l{c}}}}Gd}ChDl}{{{f{{l{j}}}}Gd}{{A`{Jjn}}}}{{{f{{l{Ah}}}}Gd}{{A`{Jjn}}}}{{{f{{l{{Cd{c}}}}}}Gd}{{A`{Jjn}}}Cf}{{{f{{l{Bl}}}}Gd}{{A`{Jjn}}}}{{{f{{l{Cb}}}}Gd}{{A`{Jjn}}}}{{{f{{l{An}}}}Gd}{{A`{Jjn}}}}{{{f{{l{Bb}}}}Gd}{{A`{Jjn}}}}{{{f{{l{Fd}}}}Gd}{{A`{Jjn}}}}{{{f{{l{c}}}}Gd}{{A`{Jjn}}}Al}{{{f{{l{Fd}}}}Gd}Jj}{{{f{{l{Bl}}}}Gd}Jj}{{{f{{l{c}}}}Gd}JjAl}{{{f{{l{{Cd{c}}}}}}Gd}JjCf}{{{f{{l{Ah}}}}Gd}Jj}{{{f{{l{j}}}}Gd}Jj}{{{f{{l{Bb}}}}Gd}Jj}{{{f{{l{Cb}}}}Gd}Jj}{{{f{{l{An}}}}Gd}Jj}{{{f{{l{Cb}}}}Gd}{{Ch{Ab}}}}{{{f{{l{Ah}}}}Gd}{{Ch{Ab}}}}{{{f{{l{c}}}}}{{Ch{Jl}}}Dl}{{{f{{l{c}}}}}dDl}{{{f{{l{c}}}}}JnDl}{{{f{{l{Ah}}}}}Ab}{{{f{{l{Cb}}}}}Ab}{{{f{{l{c}}}}}ChDl}0{{{f{{l{{Cd{c}}}}}}Gd}{{Ch{{f{K`}}}}}Cf}0{{{f{{l{j}}}}F`}{{A`{{l{Fd}}n}}}}{{{f{{l{j}}}}F`}{{A`{{Kb{Hb}}n}}}}{{{f{{l{c}}}}Gd}ChDl}{{{f{{l{Ah}}}}}Gd}{{{f{{l{Cb}}}}}Gd}{{{f{{l{An}}}}}Gd}{{{f{{l{Fd}}}}}Gd}{{{f{{l{{Cd{c}}}}}}dd}{{A`{C`n}}}Cf}{{{f{{l{Bl}}}}dd}{{A`{C`n}}}}{{{f{{l{Cb}}}}dd}{{A`{C`n}}}}{{{f{{l{Ah}}}}dd}{{A`{C`n}}}}{{{f{{l{Fd}}}}dd}{{A`{C`n}}}}{{{f{{l{Bb}}}}dd}{{A`{C`n}}}}{{{f{{l{c}}}}dd}{{A`{C`n}}}Al}{{{f{{l{An}}}}dd}{{A`{C`n}}}}{{{f{{l{c}}}}GddGd}C`Fj}{{{f{{l{Bb}}}}{f{{Bf{Bd}}}}}{{l{Bl}}}}{{{f{{l{Bl}}}}{f{{l{Bl}}}}}{{l{Bl}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bl}}}Al}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}{{l{Bl}}}}{{{f{{l{An}}}}{f{B`}}}{{l{Bl}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{Bl}}}}{{{f{{l{c}}}}e}{{l{Bl}}}AlBj}5601243{{{f{{l{c}}}}}dDl}{{{f{{l{c}}}}{Ch{Gd}}}{{l{c}}}Dl}{{}Gd}0{{GdKd{Ch{Kf}}}{{l{c}}}Al}{{{f{{l{Cb}}}}}{{f{El}}}}{{{f{{l{Ah}}}}}{{f{El}}}}{{{f{{l{c}}}}}{{Kj{{Kh{c}}}}}Dl}{{}c{}}0{{}Ff}{{{l{Kl}}}{{L`{KnKl}}}}{{{l{Lb}}Ld{Ch{Dd}}}{{L`{LfLb}}}}{{{l{Lh}}{Ch{Gd}}Gd}{{A`{{L`{LjLh}}n}}}}{{{l{Lh}}{Ch{Gd}}Gd}{{L`{LjLh}}}}{{{l{Lb}}Ld}{{L`{LlLb}}}}{{{f{{l{{Cd{c}}}}}}}{}Cf}{{{f{{l{Fd}}}}}}{{{f{{l{Ah}}}}}}{{{f{{l{Cb}}}}}}{{{f{{l{Bb}}}}}}{{{f{{l{c}}}}}{}Al}{{{f{{l{Bl}}}}}}{{{f{{l{An}}}}}}{{{f{{l{c}}}}}{{`{InJ`JdH`Jh}}}Al}{{{l{c}}}AbDl}{{{l{Lh}}}Ab}{{{l{Lb}}}{{L`{LnLb}}}}{{{f{{l{c}}}}}dDl}{{{f{{l{c}}}}}{{l{Bl}}}M`}000{{{f{{l{c}}}}}{{l{Bl}}}Dl}02{{{f{{l{c}}}}}MbDl}{{{f{{l{c}}}}}{{`{Md}}}Dl}{{{f{{l{c}}}}}{{`{{D`{}{{Cj{{l{c}}}}}}}}}Dl}{{{f{{l{Ah}}}}}{{`{{D`{}{{Cj{Hb}}}}}}}}{{{f{{l{c}}}}}{{Gh{{Gb{{Cn{Cl}}}}{Gf{{f{{Cn{Cl}}}}}{{Ad{{Ch{{f{Id}}}}}}}}}}}Dl}`{{fc}Gl{{Ij{B`}}}}{{{f{{l{c}}}}}ChDl}{{{f{{l{c}}}}}{{Ch{Gd}}}Dl}{{{f{{l{c}}}}}{{Mf{c}}}Dl}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}{{{f{{l{c}}}}}{}Al}01{{{f{{l{c}}}}}GdDl}0{{{f{{l{c}}}}e}{{l{c}}}Al{BhMh}}00{{{f{{l{c}}}}Gd}{{l{c}}}Dl}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}{{l{Bl}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{Bl}}}}{{{f{{l{c}}}}e}{{l{Bl}}}AlBj}{{{f{{l{Bb}}}}{f{{Bf{Bd}}}}}{{l{Bl}}}}{{{f{{l{An}}}}{f{B`}}}{{l{Bl}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bl}}}Al}{{{f{{l{Bl}}}}{f{{l{Bl}}}}}{{l{Bl}}}}4362150{{{f{{l{c}}}}}ChAl}{{{f{{l{Bl}}}}}{{Ch{d}}}}{{{f{{l{c}}}}}MjAl}{{{f{{l{Bb}}}}}Mj}{{{f{{l{An}}}}}Mj}{{{f{{l{Bl}}}}}Mj}{{{f{{l{Bl}}}}}{{Ch{Aj}}}}{{{f{{l{c}}}}}{{Ch{Aj}}}Al}{{{f{{l{Eh}}}}}{{Ch{Kd}}}}{{{f{{l{c}}}}}{{Ch{Aj}}}Fj}{{{f{{l{Ef}}}}}{{Ch{Aj}}}}{{{f{{l{Eh}}}}}Mj}{{{f{{l{c}}}}}MjFj}{{{f{{l{Ef}}}}}Mj}{{{f{Df{l{c}}}}{Kh{c}}}bDl}`{{{f{{l{c}}}}}{{Ml{c}}}Dl}{{{f{{l{c}}}}}{{f{{N`{{Mn{c}}}}}}}Dl}{{{f{{l{c}}}}}{{Ch{{Nb{Fl}}}}}Dl}{{{f{Df{l{c}}}}}{{f{Df{N`{{Mn{c}}}}}}}Dl}{{{f{{l{c}}}}}{{N`{{Mn{c}}}}}Dl}{{{f{{l{Bl}}}}}{{Ch{d}}}}{{{f{{l{c}}}}}ChAl}{{{f{{l{c}}}}}{{Ch{Hf}}}Al}{{{f{{l{An}}}}}Mj}{{{f{{l{Bl}}}}}Mj}{{{f{{l{Bb}}}}}Mj}{{{f{{l{c}}}}}MjAl}{{Dd{f{{Bf{Bd}}}}GdGd}{{l{Bl}}}}{{Dd{f{Bf}}}{{l{c}}}Al}{{{l{c}}{l{c}}}{}Al}{{{l{c}}e}{}Al{BhBj}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{c}}}}e}{}Al{BhBj}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{c}}}}}GdDl}{{{f{{l{An}}}}}{{A`{Gdn}}}}{{{f{{l{c}}}}}{{A`{Gdn}}}Al}{{{f{{l{Bb}}}}}{{A`{Gdn}}}}{{{f{{l{c}}}}}{{f{Dd}}}Dl}{{Dde}{{l{{Cd{c}}}}}Cf{{Ij{{Bf{{Ch{c}}}}}}}}{{Ddc}{{l{Nd}}}{{Ij{{Bf{Nf}}}}}}{{Dd{Nh{Kf}}}{{l{Nj}}}}{{Ddc}{{l{Eh}}}{{Ij{{Bf{{Ch{Kd}}}}}}}}{{Ddc}{{l{Bb}}}{{Ij{{Bf{{Eb{{Bf{Bd}}}}}}}}}}{{Ddc}{{l{Bb}}}{{Ij{{Bf{{Ch{{f{{Bf{Bd}}}}}}}}}}}}{{Ddc}{{l{Lh}}}{{Ij{{Bf{{Ch{Nl}}}}}}}}{{Ddc}{{l{Lb}}}{{Ij{{Bf{{Ch{Hb}}}}}}}}{{Ddc}{{l{Kl}}}{{Ij{{Bf{{Ch{Nn}}}}}}}}{{Ddc}{{l{O`}}}{{Ij{{Bf{{Ch{Ob}}}}}}}}{{Ddc}{{l{Nd}}}{{Ij{{Bf{{Ch{Nf}}}}}}}}{{Ddc}{{l{Nj}}}{{Ij{{Bf{{Ch{Kf}}}}}}}}{{Ddc}{{l{Fb}}}{{Ij{{Bf{{Ch{Jl}}}}}}}}{{Dd{f{{Bf{c}}}}}{{l{{Cd{c}}}}}Cf}{{Ddc}{{l{Od}}}{{Ij{{Bf{{Ch{Of}}}}}}}}{{Ddc}{{l{Oh}}}{{Ij{{Bf{{Ch{Bd}}}}}}}}{{Ddc}{{l{Bb}}}{{Ij{{Bf{{Ch{{Eb{{Bf{Bd}}}}}}}}}}}}{{Ddc}{{l{An}}}{{Ij{{Bf{Ej}}}}}}{{Ddc}{{l{Bb}}}{{Ij{{Bf{{Gj{Bd}}}}}}}}{{Ddc}{{l{Bl}}}{{Ij{{Bf{{Ch{d}}}}}}}}{{Ddc}{{l{Bb}}}{{Ij{{Bf{{Ch{{Gj{Bd}}}}}}}}}}{{Ddc}{{l{Nj}}}{{Ij{{Bf{Kf}}}}}}{{Ddc}{{l{Bb}}}{{Ij{{Bf{{f{{Bf{Bd}}}}}}}}}}{{Ddc}{{l{An}}}{{Ij{{Bf{{Ch{{Eb{B`}}}}}}}}}}{{Ddc}{{l{An}}}{{Ij{{Bf{{Ch{Ej}}}}}}}}{{Ddc}{{l{Ef}}}{{Ij{{Bf{Aj}}}}}}{{Ddc}{{l{An}}}{{Ij{{Bf{{Eb{B`}}}}}}}}{{Ddc}{{l{An}}}{{Ij{{Bf{{Ch{{f{B`}}}}}}}}}}{{Ddc}{{l{Eh}}}{{Ij{{Bf{Kd}}}}}}{{Ddc}{{l{Ef}}}{{Ij{{Bf{{Ch{Aj}}}}}}}}{{Ddc}{{l{Lh}}}{{Ij{{Bf{Nl}}}}}}{{Dd{Nh{Hb}}}{{l{Lb}}}}{{Ddc}{{l{An}}}{{Ij{{Bf{{f{B`}}}}}}}}{{Dd{Nh{Jl}}}{{l{Fb}}}}{{Ddc}{{l{Od}}}{{Ij{{Bf{Of}}}}}}{{Ddc}{{l{Oh}}}{{Ij{{Bf{Bd}}}}}}{{Ddc}{{l{Lb}}}{{Ij{{Bf{Hb}}}}}}{{Ddc}{{l{Kl}}}{{Ij{{Bf{Nn}}}}}}{{Dd{Nh{Nn}}}{{l{Kl}}}}{{Ddc}{{l{Fb}}}{{Ij{{Bf{Jl}}}}}}{{Ddc}{{l{O`}}}{{Ij{{Bf{Ob}}}}}}{{Ddc}{{l{Bl}}}{{Ij{{Bf{d}}}}}}{Dd{{l{{Cd{c}}}}}Cf}{{{f{{l{j}}}}GdGd}{{l{j}}}}{{{f{{l{Ah}}}}GdGd}{{l{Ah}}}}{{{f{{l{Fd}}}}GdGd}{{l{Fd}}}}{{{f{{l{Bl}}}}GdGd}{{l{Bl}}}}{{{f{{l{Cb}}}}GdGd}{{l{Cb}}}}{{{f{{l{{Cd{c}}}}}}GdGd}{{l{{Cd{c}}}}}Cf}{{{f{{l{Bb}}}}GdGd}{{l{Bb}}}}{{{f{{l{An}}}}GdGd}{{l{An}}}}{{{f{{l{c}}}}GdGd}{{l{c}}}Al}{{Dd{Gj{c}}}{{l{{Cd{c}}}}}Cf}{{Dd{Gj{c}}Id}{{l{{Cd{c}}}}}Cf}{{DdGj}{{l{c}}}Al}{{{N`{Oj}}{Gj{{Cn{Cl}}}}JlJl}{{l{c}}}Dl}{{{f{{l{c}}}}}{{l{c}}}M`}{{{l{Bl}}}}{{{f{{l{Bl}}}}}}{{{f{{l{Bl}}}}{f{{l{Bl}}}}}{{l{Bl}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bl}}}Al}{{{f{{l{An}}}}{f{B`}}}{{l{Bl}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Bl}}}}{{{f{{l{Bb}}}}{f{{Bf{Bd}}}}}{{l{Bl}}}}{{{f{{l{Cb}}}}{f{{l{Cb}}}}}{{l{Bl}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Bl}}}}{{{f{{l{c}}}}e}{{l{Bl}}}AlBj}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{Bl}}}}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}{{l{Bl}}}}{{{f{{l{Cb}}}}{f{{l{Cb}}}}}}712834:96{{{f{{l{c}}}}}GdDl}`{{{f{{l{Cb}}}}}{{A`{{Hd{Hb}}n}}}}{{{f{{l{Ah}}}}}{{A`{{Hd{Hb}}n}}}}`{{{f{{l{Ah}}}}}{{`{{Ol{}{{Cj{{Ch{Ab}}}}}}}}}}{{{f{{l{An}}}}}{{`{{Ol{}{{Cj{{Ch{{f{B`}}}}}}}}}}}}{{{f{{l{An}}}}}{{`{On}}}}{{{f{Df{l{Ah}}}}}{{`{On}}}}{{{f{{l{c}}}}}MjAl}{{{f{Df{l{c}}}}}bDl}{{{f{{l{Ef}}}}AjA@`}{{A`{{Ch{Aj}}n}}}}{{{f{{l{c}}}}AjA@`}{{A`{{Ch{Aj}}n}}}Fj}{{{f{{l{Eh}}}}AjA@`}{{A`{{Ch{Kd}}n}}}}{{{f{{l{c}}}}AjA@`}{{A`{Mjn}}}Fj}{{{f{{l{Eh}}}}AjA@`}{{A`{Mjn}}}}{{{f{{l{Ef}}}}AjA@`}{{A`{Mjn}}}}{{DdGdAj}{{A`{{l{Bl}}n}}}}{{DdGdAjAj}{{A`{{l{c}}n}}}Al}{{DdGd}{{l{c}}}Al}{{DdGdAjAj}{{l{c}}}Al}{{{f{{l{c}}}}}{{l{c}}}Dl}{{{f{{l{c}}}}}{{f{Oj}}}Dl}{{{f{{l{O`}}}}}Ab}{{{f{{l{Ef}}}}}Ab}{{{f{{l{Od}}}}}Ab}{{{f{{l{Fb}}}}}Ab}{{{f{{l{Lb}}}}}Ab}{{{f{{l{Nd}}}}}Ab}{{{f{{l{Kl}}}}}Ab}{{{f{{l{Oh}}}}}Ab}{{{f{{l{Eh}}}}}Ab}{{{f{{l{Nj}}}}}Ab}{{{f{{l{Ah}}}}}Ab}4609217358:{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}e}{}Al{BhBj}}{{{f{{l{c}}}}e}{}Al{BhBj}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{Df{l{c}}}}Dd}bDl}{{{f{{l{Bb}}}}}{{l{Bb}}}}{{{f{{l{{Cd{c}}}}}}}{{l{{Cd{c}}}}}Cf}{{{f{{l{Cb}}}}}{{l{Cb}}}}{{{f{{l{c}}}}}{{l{c}}}Al}{{{f{{l{An}}}}}{{l{An}}}}{{{f{{l{Bl}}}}}{{l{Bl}}}}{{{f{{l{Fd}}}}}{{l{Fd}}}}{{{f{{l{Ah}}}}}{{l{Ah}}}}{{{f{{l{c}}}}{f{Dn}}A@b}{{A`{Abn}}}Al}{{{f{{l{c}}}}Gde}{{A`{{l{c}}n}}}M`{{Af{{f{Df{l{c}}}}}{{Ad{Ch}}}}}}{{{f{{l{c}}}}Ajdd{Ch{Kf}}}{{A`{{l{c}}n}}}Dl}{{{f{{l{c}}}}Gddd{Ch{Kf}}}{{A`{{l{c}}n}}}Dl}{{{f{Df{l{c}}}}{f{{Bf{Jl}}}}e}{{A`{Abn}}}A@d{{Ib{}{{Cj{Ch}}}}}}{{{f{{l{An}}}}{f{{Bf{Jl}}}}c}{{A`{Abn}}}{{Ib{}{{Cj{{Ch{{f{B`}}}}}}}}}}{{{f{{l{Bl}}}}{f{{Bf{Jl}}}}c}{{A`{Abn}}}{{Ib{}{{Cj{{Ch{d}}}}}}}}{{{f{{l{An}}}}c{Ch{{f{B`}}}}}{{A`{{l{An}}n}}}{{Ib{}{{Cj{Jl}}}}}}{{{f{{l{c}}}}eCh}{{A`{{l{c}}n}}}Al{{Ib{}{{Cj{Jl}}}}}}{{{f{{l{Bl}}}}c{Ch{d}}}{{A`{{l{Bl}}n}}}{{Ib{}{{Cj{Jl}}}}}}{{{f{{l{Bb}}}}c{Ch{{f{{Bf{Bd}}}}}}}{{A`{{l{Bb}}n}}}{{Ib{}{{Cj{Jl}}}}}}{{{f{{l{c}}}}eg}{{A`{{l{c}}n}}}Al{{Ib{}{{Cj{Jl}}}}}{{Dn{Ch}{{Ad{Ch}}}}}}{{{f{{l{Bl}}}}ce}{{A`{{l{Bl}}n}}}{{Ib{}{{Cj{Jl}}}}}{{Dn{{Ch{d}}}{{Ad{{Ch{d}}}}}}}}{{{f{{l{An}}}}ce}{{A`{{l{An}}n}}}{{Ib{}{{Cj{Jl}}}}}{{Dn{{Ch{{f{B`}}}}}{{Ad{{Ch{Ej}}}}}}}}{{{f{{l{Bb}}}}ce}{{A`{{l{Bb}}n}}}{{Ib{}{{Cj{Jl}}}}}{{Dn{{Ch{{f{{Bf{Bd}}}}}}}{{Ad{{Ch{{Gj{Bd}}}}}}}}}}{{{f{{l{Bb}}}}{f{{l{Bl}}}}{Ch{{f{{Bf{Bd}}}}}}}{{A`{{l{Bb}}n}}}}{{{f{{l{c}}}}{f{{l{Bl}}}}Ch}{{A`{{l{c}}n}}}Al}{{{f{{l{Bl}}}}{f{{l{Bl}}}}{Ch{d}}}{{A`{{l{Bl}}n}}}}{{{f{{l{An}}}}{f{{l{Bl}}}}{Ch{{f{B`}}}}}{{A`{{l{An}}n}}}}{{{f{Df{l{Ah}}}}}b}{{{f{Df{l{c}}}}d}bDl}{{{f{Df{l{Ah}}}}El}b}{{{f{Df{l{c}}}}Jl}bDl}{{{f{Df{l{c}}}}Mb}bDl}{{{f{{l{Bl}}}}Hb}{{l{Bl}}}}{{{f{{l{c}}}}Hb}{{l{c}}}Al}{{{f{{l{j}}}}Hb}{{l{j}}}}{{{f{{l{{Cd{c}}}}}}Hb}{{l{{Cd{c}}}}}Cf}{{{f{{l{Cb}}}}Hb}{{l{Cb}}}}{{{f{{l{Ah}}}}Hb}{{l{Ah}}}}{{{f{{l{Fd}}}}Hb}{{l{Fd}}}}{{{f{{l{Bb}}}}Hb}{{l{Bb}}}}{{{f{{l{An}}}}Hb}{{l{An}}}}{{{f{{l{An}}}}Hb{Ch{{f{B`}}}}}{{l{An}}}}{{{f{{l{Bl}}}}Hb{Ch{d}}}{{l{Bl}}}}{{{f{{l{c}}}}HbCh}{{l{c}}}Al}{{{f{{l{{Cd{c}}}}}}Hb{Ch{{Cd{c}}}}}{{l{{Cd{c}}}}}Cf}{{{f{{l{Bb}}}}Hb{Ch{{f{{Bf{Bd}}}}}}}{{l{Bb}}}}{{{f{{l{Fd}}}}Hb{Ch{{f{{Bf{Bd}}}}}}}{{l{Fd}}}}{{{f{{l{Ah}}}}Hb{Ch{{f{Ab}}}}}{{l{Ah}}}}{{{f{{l{Cb}}}}Hb{Ch{{f{Ab}}}}}{{l{Cb}}}}{{{f{Df{l{c}}}}}bDl}{{{f{{l{c}}}}HbGd}{{l{c}}}Dl}0{{{f{{l{Fd}}}}d}{{l{Fd}}}}{{{f{{l{Bb}}}}d}{{l{Bb}}}}{{{f{{l{c}}}}d}{{l{c}}}Al}{{{f{{l{Bl}}}}d}{{l{Bl}}}}{{{f{{l{An}}}}d}{{l{An}}}}{{{f{{l{j}}}}d}{{l{j}}}}{{{f{{l{An}}}}F`}{{l{An}}}}{{{f{{l{c}}}}F`}{{l{c}}}Al}{{{f{{l{Bb}}}}F`}{{l{Bb}}}}{{{f{{l{Fd}}}}F`}{{l{Fd}}}}{{{f{{l{j}}}}F`}{{l{j}}}}{{{f{{l{Bl}}}}F`}{{l{Bl}}}}{{{f{{l{c}}}}Hb}{{Hf{{l{c}}{l{c}}}}}Dl}0{{{f{{l{c}}}}Bd}{{Ch{Aj}}}Al}{{{f{{l{c}}}}Bd}MjFj}{{{f{{l{Eh}}}}Bd}Mj}{{{f{{l{Ef}}}}Bd}Mj}{{{f{{l{j}}}}}{{f{{Bf{Oj}}}}}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{c}}}}e}{}Al{BhBj}}{{{l{c}}e}{}Al{BhBj}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{Bl}}}}}{{Ch{Jl}}}}{{{f{{l{c}}}}}ChAl}{{{f{{l{Bb}}}}}Mj}{{{f{{l{c}}}}}MjAl}{{{f{{l{Bl}}}}}Mj}{{{f{{l{c}}}}{Ch{Gd}}}{{l{c}}}Dl}{{{f{{l{c}}}}{f{{l{Fb}}}}}{{A`{{l{c}}n}}}Dl}{{{f{{l{c}}}}{f{e}}}{{A`{{l{c}}n}}}Dl{{Ij{{Bf{Jl}}}}A@f}}{{{f{{l{c}}}}{f{{Bf{A@h}}}}Mb}{{l{c}}}Dl}{{{f{{l{c}}}}{f{{Bf{A@h}}}}}{{l{c}}}Dl}{{{f{{l{Bb}}}}{f{{l{Fb}}}}}{{l{Bb}}}}{{{f{{l{j}}}}{f{c}}}{{l{j}}}{{Ij{{Bf{Jl}}}}A@f}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Dl{}{{Hh{Dj}}{A@j{Dj}}}}Dl}{{Ij{{Bf{Jl}}}}A@f}}{{{f{{l{c}}}}{f{{l{Fb}}}}}{{l{c}}}{{Dl{}{{Hh{Dj}}{A@j{Dj}}}}Dl}}{{{f{{l{An}}}}{f{{l{Fb}}}}}{{l{An}}}}{{{f{{l{Bb}}}}{f{c}}}{{l{Bb}}}{{Ij{{Bf{Jl}}}}A@f}}{{{f{{l{An}}}}{f{c}}}{{l{An}}}{{Ij{{Bf{Jl}}}}A@f}}{{{f{{l{j}}}}{f{{l{Fb}}}}}{{l{j}}}}`{{{f{{l{c}}}}dA@l}{{Gj{{Gj{A@n}}}}}Dl}{{{f{{l{c}}}}}{{l{c}}}M`}{{{f{{l{An}}}}Gd}{{A`{Abn}}}}{{{f{Df{l{Cb}}}}El}b}{{{f{Df{l{Ah}}}}El}b}{{{f{{l{Ah}}}}}{{A`{{AAf{AA`{AAd{{AAb{Gd}}}}}}n}}}}{{{f{{l{c}}}}}{{A`{{AAf{{AAh{f}}{AAd{{AAb{Gd}}}}}}n}}}Al}{fc{}}{{{f{{l{Bb}}}}}{{l{An}}}}{{{f{{l{c}}}}}{{Gj{Ch}}}Al}{{{f{{l{c}}}}}{{AAj{Gj{Gj{Ch}}}}}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}{{{f{{l{c}}}}}{}Al}01{{{f{{l{Ah}}}}c}{{A`{{l{Ah}}n}}}{{Af{Ed}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{Cb}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Ch{Ed}}}{{Ad{{A`{{Ch{c}}n}}}}}}E`}Dl}{{{f{{l{Ah}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Ch{Ed}}}{{Ad{{A`{{Ch{c}}n}}}}}}E`}Dl}{{{f{{l{Cb}}}}c}{{A`{{l{Cb}}n}}}{{Af{Ed}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{Cb}}}}c}{{A`{{l{Ah}}n}}}{{Af{Ed}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{c}}}}g}{{A`{{l{An}}e}}}Dl{}{{Af{{f{DfEj}}}{{Ad{{A`{be}}}}}}}}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dl}{c{{A`{e}}}{}{}}0{{Ddg}{{A`{{l{i}}e}}}Cl{}{{Ib{}{{Cj{{A`{ce}}}}}}}{{Dl{}{{I`{c}}}}Dl}}{{}{{A`{c}}}{}}0{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{A`{{l{Ah}}n}}}Dl{{Af{{Ch{Ed}}Ch}{{Ad{{A`{{Ch{Ab}}n}}}}}}}}{fAAl}0{{{f{{l{Bl}}}}}{{A`{{l{Bl}}n}}}}{{{f{{l{Bb}}}}}{{A`{{l{Bb}}n}}}}{{{f{{l{{Cd{c}}}}}}}{{A`{{l{{Cd{c}}}}n}}}Cf}{{{f{{l{An}}}}}{{A`{{l{An}}n}}}}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Al}{{{l{j}}}AAn}{{{f{{l{c}}}}{f{Ab}}}{{A`{{f{{l{c}}}}n}}}Dl}{{{f{Df{l{c}}}}}bDl}{{{f{{l{c}}}}Gd}{}Dl}{{{f{{l{c}}}}Bd}{{Ch{Aj}}}Al}{{{f{{l{Ef}}}}Bd}Mj}{{{f{{l{Eh}}}}Bd}Mj}{{{f{{l{c}}}}Bd}MjFj}{{{f{{l{Fd}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bl}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bb}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{{Cd{c}}}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}Cf}{{{f{{l{An}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lb}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lh}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Kl}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Eh}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{O`}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ef}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nd}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Oh}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nj}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Od}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Fb}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Fd}}}}A@l{f{Df{Bf{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bl}}}}A@l{f{Df{Bf{Kf}}}}}{{A`{bn}}}}{{{f{{l{An}}}}A@l{f{Df{Bf{Kf}}}}}{{A`{bn}}}}{{{f{{l{{Cd{c}}}}}}A@l{f{Df{Bf{Kf}}}}}{{A`{bn}}}Cf}{{{f{{l{Nj}}}}A@l{f{Df{Bf{Kf}}}}}{{A`{bn}}}}{{{f{{l{Fb}}}}A@l{f{Df{Bf{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nd}}}}A@l{f{Df{Bf{Kf}}}}}{{A`{bn}}}}{{{f{{l{Od}}}}A@l{f{Df{Bf{Kf}}}}}{{A`{bn}}}}{{{f{{l{O`}}}}A@l{f{Df{Bf{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bb}}}}A@l{f{Df{Bf{Kf}}}}}{{A`{bn}}}}{{{f{{l{Kl}}}}A@l{f{Df{Bf{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ef}}}}A@l{f{Df{Bf{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lb}}}}A@l{f{Df{Bf{Kf}}}}}{{A`{bn}}}}{{{f{{l{Eh}}}}A@l{f{Df{Bf{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lh}}}}A@l{f{Df{Bf{Kf}}}}}{{A`{bn}}}}{{{f{{l{Oh}}}}A@l{f{Df{Bf{Kf}}}}}{{A`{bn}}}}{{}c{}}0{{{f{{l{Cb}}}}}Gd}{{Ddc}{{l{e}}}Cl{{Dl{}{{I`{c}}}}Dl}}{{{f{{l{e}}}}c}{{l{e}}}Cl{{Dl{}{{I`{c}}}}Dl}}{{{f{{l{c}}}}{Gj{{Cn{Cl}}}}}{{l{c}}}Dl}{{{l{c}}Dd}{{l{c}}}Dl}{{{f{{Bf{AB`}}}}e}c{}{{ABb{{f{{l{Fb}}}}}{{Ad{c}}}}}}{{{l{j}}{Ch{Id}}}{{l{j}}}}{{{l{j}}{l{Bl}}}{{l{j}}}}{{{f{{l{c}}}}Mb}{{l{c}}}Dl}{{{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}23103223013232013232103223013223{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{l{Ah}}}Dl{{Af{{Ch{Ed}}Ch}{{Ad{{Ch{Ab}}}}}}}}{{{f{{l{Cb}}}}{f{{l{c}}}}e}{{l{Cb}}}Dl{{Af{{Ch{Ed}}Ch}{{Ad{{Ch{Ab}}}}}}}}{{{f{Df{l{j}}}}{f{{l{j}}}}}b}{{{f{{l{c}}}}{f{{l{Bl}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}{{Dl{}{{A@j{Dj}}}}}}{{{f{{l{j}}}}{f{{l{Bl}}}}{f{{l{j}}}}}{{A`{{l{j}}n}}}}````{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}e{}{}{}}{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}g{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}g{}{}{}}{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}g{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}65654654650654654````````````````{{fh}b}000{{{f{DfABl}}{f{Cl}}}b}{{{f{DfABl}}}b}{{{f{DfABn}}}b}{{{f{DfAC`}}c}b{{D`{}{{Cj{{Ch{d}}}}}}Jh}}{{{f{Df{ACb{c}}}}e}bAl{{D`{}{{Cj{Ch}}}}Jh}}{{{f{Df{ACb{c}}}}e}bAl{{D`{}{{Cj{}}}}Jh}}{{{f{DfACd}}}b}{{{f{DfACf}}}b}65{{{f{DfACh}}}b}{{{f{DfACj}}}b}{{{f{DfAC`}}}b}{{{f{DfACl}}}b}{{{f{Df{ACb{c}}}}}bAl}{{{f{Df{ACn{c}}}}}b{AD`A@f}}{{{f{DfADb}}}b}{{{f{DfADd}}}b}{{{f{Df{ADf{c}}}}}bAl}{{{f{DfABl}}{Ch{{f{Cl}}}}}b}{{{f{DfABl}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACd}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{Df{ACb{c}}}}{Ch{{f{Bf}}}}}bAl}{{{f{Df{ACn{c}}}}{Ch{e}}}b{AD`A@f}{{Ij{c}}}}{{{f{DfACf}}{Ch{c}}}b{}}{{{f{DfACd}}{f{Ab}}}{{A`{bn}}}}{{{f{DfABl}}{f{Ab}}}{{A`{bn}}}}{{{f{DfABn}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACh}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACj}}{f{Ab}}}{{A`{bn}}}}{{{f{DfAC`}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACl}}{f{Ab}}}{{A`{bn}}}}{{{f{Df{ACb{c}}}}{f{Ab}}}{{A`{bn}}}Al}{{{f{Df{ACb{c}}}}{f{Bf}}}bAl}{{{f{DfACh}}c}b{{D`{}{{Cj{{Ch{{f{B`}}}}}}}}Jh}}{{{f{DfACj}}c}b{{D`{}{{Cj{{Ch{{f{{Bf{Bd}}}}}}}}}}Jh}}{{{f{DfACf}}c}b{}}{{{f{Df{ACn{c}}}}e}b{AD`A@f}{{Ij{c}}}}{{{f{DfADb}}d}b}{{{f{Df{ADf{c}}}}}bAl}{{{f{DfACh}}c}b{{D`{}{{Cj{{f{B`}}}}}}}}{{{f{DfACj}}c}b{{D`{}{{Cj{{f{{Bf{Bd}}}}}}}}}}{f{{f{c}}}{}}0000000000{{{f{Df}}}{{f{Dfc}}}{}}0000000000`{{{f{{ACn{c}}}}}{{ACn{c}}}{AD`A@f}}{{{f{ADb}}}ADb}{{{f{ADd}}}ADd}{{{f{{ADf{c}}}}}{{ADf{c}}}{JfAl}}{{f{f{Dfc}}}b{}}000{fb}000{{}ABl}{{}ABn}{Gd{{f{c}}}{}}0000000000{Gd{{f{Dfc}}}{}}0000000000{Gdb}0000000000{{{f{ACh}}}d}{{{f{ACj}}}d}{{{f{AC`}}}d}{{{f{{ACb{c}}}}}dAl}{{{f{ACd}}}d}{{{f{ACh}}}{{f{Oj}}}}{{{f{ACj}}}{{f{Oj}}}}{{{f{AC`}}}{{f{Oj}}}}{{{f{{ACb{c}}}}}{{f{Oj}}}Al}{{{f{ACd}}}{{f{Oj}}}}{ACf{{l{c}}}Dl}{{{f{DfABl}}}{{l{Ah}}}}{{{f{DfABn}}}{{l{Ah}}}}{{{f{DfACl}}}{{l{Ah}}}}{{{f{DfACd}}}{{l{Ah}}}}{{{ACn{B`}}}{{l{An}}}}{{{ACn{{Bf{Bd}}}}}{{l{Bb}}}}{ADb{{l{Bl}}}}{ADdADh}{{{ADf{c}}}{{l{c}}}Al}`{cc{}}0000000000{{Dde}ADj{}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Dde}ADj{}{{D`{}{{Cj{c}}}}}}{{Dd{f{{Bf{c}}}}}ADj{}}{{Dd{f{{Bf{{Ch{c}}}}}}}ADj{}}{{{f{El}}GdGdDd}{{A`{{Cn{ACd}}n}}}}{{}Gd}0000000000{{{f{DfACh}}}{{Cn{Cl}}}}{{{f{DfACj}}}{{Cn{Cl}}}}{{{f{DfAC`}}}{{Cn{Cl}}}}{{{f{Df{ACb{c}}}}}{{Cn{Cl}}}Al}{{{f{DfACd}}}{{Cn{Cl}}}}{{}c{}}0000000000`{{DdGd{Ch{El}}}ABl}{{DdGd{Ch{El}}}ABn}{{DdGdGd}ACh}{{DdGdGd}ACj}{{DdGdGd}AC`}{{DdGd}ACl}{{DdGdGdEl}{{ACb{c}}}Al}{{DdGd}{{ACn{c}}}{AD`A@f}}{{DdGd}ADb}{{DdGd}ADd}{{DdGd}{{ADf{c}}}Al}{{DdGdGdElEl}{{ACb{c}}}Al}{{{f{DfACf}}}b}{{{f{DfADb}}}b}{{{f{DfADd}}}b}{{{f{Df{ADf{c}}}}}bAl}{fc{}}000{c{{A`{e}}}{}{}}0000000000{{}{{A`{c}}}{}}0000000000{fAAl}0000000000{{}c{}}0000000000````````{{{f{DfACd}}}b}{{{f{DfACd}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACd}}{f{Ab}}}{{A`{bn}}}}`{{{f{ACd}}}d}{{{f{ACd}}}{{f{Oj}}}}{{{f{DfACd}}}{{l{Ah}}}}{{{f{El}}GdGdDd}{{A`{{Cn{ACd}}n}}}}{{{f{DfACd}}}{{Cn{Cl}}}}````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Fn}}}Fn}{{f{f{Dfc}}}b{}}{fb}{{}Fn}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{f{Fn}}{f{Fn}}}d}{{f{f{c}}}d{}}00{{{f{Fn}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{Fn}}{f{Dfc}}}bADl}{{}Gd}{{}c{}}{{{f{Fn}}}d}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}5``{{ADnDd}{{l{c}}}Dl}{{AE`{f{{l{c}}}}}{{l{c}}}Dl}10{{AE`DdEl}{{l{c}}}Dl}0{{ADnDd}{{A`{{l{c}}e}}}Dl{}}{{AE`{f{{l{c}}}}}{{A`{{l{c}}e}}}Dl{}}10{{AE`DdEl}{{A`{{l{c}}e}}}Dl{}}0`{AEbAEb}``{{AEdDdEl}e{}{{AEf{c}}}}{{eDdEl}AEf{}{{Il{}{{Cj{c}}}}}}````{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{Gd{{f{c}}}{}}00{Gd{{f{Dfc}}}{}}00{Gdb}00{cc{}}00{{}Gd}00{{}c{}}00000{{{f{AEh}}}AEj}{{{f{AEl}}El}AEn}{{{f{DfAEj}}}Ch}{{{f{DfAEn}}}Ch}{{{f{Df{AF`{c}}}}}ChD`}21{{{f{Df{AF`{c}}}}}ChH`}`{{{f{AEj}}}{{Hf{Gd{Ch{Gd}}}}}}{{{f{AEn}}}{{Hf{Gd{Ch{Gd}}}}}}{{{f{{AF`{c}}}}}{{Hf{Gd{Ch{Gd}}}}}D`}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAl}00<<<`````````````````````````{{fh}b}0000{{}Gn}{{}Jn}{{GnGn}Gn}{{JnJn}Jn}{{{f{DfGn}}Gn}b}{{{f{DfJn}}Jn}b}3210{{{f{Gn}}}Jl}0{{{f{Jn}}}Bd}05432{f{{f{c}}}{}}000000{{{f{Df}}}{{f{Dfc}}}{}}000000{{{f{{Mn{c}}}}}{{Cn{Fl}}}Dl}{{{f{{Mn{c}}}}}{{Mn{c}}}Dl}{{{f{{Kh{c}}}}}{{Kh{c}}}Dl}{{{f{AFb}}}AFb}{{{f{Gn}}}Gn}{{{f{Jn}}}Jn}{{f{f{Dfc}}}b{}}0000{fb}0000{{{f{DfAFd}}}b}{GnGn}{JnJn}{{{f{Gn}}Gn}d}{{{f{Jn}}Jn}d}{{}{{Mn{c}}}Dl}{{}{{Kh{c}}}Dl}{{}Gn}{{}Jn}{Gd{{f{c}}}{}}{{{f{{Ml{c}}}}}fDl}111111{Gd{{f{Dfc}}}{}}000000{{GnGn}Gn}{{JnJn}Jn}{{}d}{{{f{Fl}}}{{Ch{Jl}}}}{{{f{{Kh{c}}}}}{{Ch{Jl}}}Dl}{{{Kh{c}}Jl}{{Kh{c}}}Dl}{{{Kh{c}}{Ch{Jl}}}{{Kh{c}}}Dl}{Gdb}000000<;5{{{f{Gn}}{f{Gn}}}d}{{{f{Jn}}{f{Jn}}}d}7{{{f{DfGn}}c}b{{Ib{}{{Cj{Gn}}}}}}{{{f{DfJn}}c}b{{Ib{}{{Cj{Jn}}}}}}{{{Kh{c}}d}{{Kh{c}}}Dl}{{{Kh{c}}{Ch{d}}}{{Kh{c}}}Dl}{{{f{{Kh{c}}}}Gn}{{Kh{c}}}Dl}{{{f{{Kh{c}}}}Gn}{{Kh{e}}}DlDl}{{{Kh{c}}Jn}{{Kh{c}}}Dl}{{{Kh{c}}{Ch{Jn}}}{{Kh{c}}}Dl}{{{f{{Kh{c}}}}{f{DfHl}}}{{A`{bHn}}}Dl}{{{f{AFb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Gn}}{f{DfHl}}}{{A`{bHn}}}}0000{{{f{Jn}}{f{DfHl}}}{{A`{bHn}}}}0000{cc{}}000000{Jl{{Ch{Gn}}}}{Bd{{Ch{Jn}}}}{JlGn}0{BdJn}010{cGn{{Ib{}{{Cj{Gn}}}}}}{cJn{{Ib{}{{Cj{Jn}}}}}}{{{f{B`}}}{{Ch{Gn}}}}{{{f{B`}}}{{Ch{Jn}}}}{{{f{{Kh{c}}}}}{{Ch{Jl}}}Dl}{{{f{{Kh{c}}}}}dDl}{{{f{Jn}}}d}{{{f{Fl}}}Jn}{{{f{{Kh{c}}}}}JnDl}0{{{f{{Kh{c}}}}}{{Ch{f}}}Dl}0{{{f{Df{Mn{c}}}}}{{f{Df{Kh{c}}}}}Dl}{{{f{Jn}}}Mb}{{}Gd}000000{{{f{DfGn}}Gn}b}{{{f{DfJn}}Jn}b}{{GnGn}Gn}{{JnJn}Jn}{{{f{Gn}}Gn}d}{{{f{Jn}}Jn}d}{{}c{}}000000{Gn}{Jn}{{{f{Gn}}}d}{{{f{Jn}}}d}{{{f{{Kh{c}}}}}dDl}21{{{f{{Kh{c}}}}}MbDl}111{{{f{Gn}}}{{AFf{Gn}}}}{{{f{Jn}}}{{AFf{Jn}}}}{{{f{Gn}}}{{AFh{Gn}}}}{{{f{Jn}}}{{AFh{Jn}}}}{{}d}{{}{{f{{AFl{AFj}}}}}}{{{f{Fl}}}{{Ch{Mj}}}}{{{Kh{c}}}{{Kh{c}}}Dl}{{{f{{Kh{c}}}}}{{Ch{Mj}}}Dl}{{{Kh{c}}Ch}{{Kh{c}}}Dl}{{{f{{Kh{c}}}}{Kh{c}}}{{AFn{c}}}Dl}4321{{{Kh{c}}}{{Mn{c}}}Dl}{GnGn}{JnJn}{{{f{{Mn{c}}}}}{{Nb{{Kh{c}}}}}Dl}{{{f{DfGn}}Gn}b}{{{f{DfJn}}Jn}b}{{{f{DfGn}}Gnd}b}{{{f{DfJn}}Jnd}b}{{{f{Df{Kh{c}}}}{Ch{Jl}}}bDl}{{{f{Df{Kh{c}}}}d}bDl}{{{f{DfJn}}d}b}{{{f{Df{Kh{c}}}}Jn}bDl}{{{f{Df{Kh{c}}}}Ch}bDl}033{{{f{Df{Kh{c}}}}Mb}bDl}{{{f{DfJn}}Mb}b}{{{Kh{c}}Mb}{{Kh{c}}}Dl}{{{Kh{c}}{Ch{Mb}}}{{Kh{c}}}Dl}{{GnGn}Gn}{{JnJn}Jn}>=10{{{Mn{c}}}{{Kh{c}}}Dl}{fc{}}0000{{{f{DfGn}}Gn}b}{{{f{DfJn}}Jn}b}{c{{A`{e}}}{}{}}000000{{}{{A`{c}}}{}}000000{{{f{{Mn{c}}}}}{{Ch{{Nb{{Kh{c}}}}}}}Dl}{{{f{{Mn{c}}}}}{{Ch{{Kj{{Kh{c}}}}}}}Dl}{fAAl}000000:9{{{f{{Mn{c}}}}}{{f{{AG`{Fl}}}}}Dl}{{}c{}}000000{AFdAFd}{{{f{{Mn{c}}}}}{{Kj{{Kh{c}}}}}Dl}````{{fh}b}{{{f{{AGb{c}}}}Gd}{{Hf{{AGb{c}}{AGb{c}}}}}Cf}{e{{AGb{c}}}Cf{{Ib{}{{Cj{{Ch{{f{c}}}}}}}}}}{e{{AGb{c}}}Cf{{Ib{}{{Cj{{f{c}}}}}}}}{{AGde}g{}{{Ib{}{{Cj{c}}}}}{}}0{{{f{K`}}}{{f{AGf}}}}{{{f{{AGb{c}}}}}{{f{AGf}}}Cf}{{{f{Df{AGb{c}}}}}{{f{DfAGf}}}Cf}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}`{{{f{{AGb{c}}}}Gd}dCf}{{{f{{AGb{c}}}}}{{AGb{c}}}{JfCf}}{{f{f{Dfc}}}b{}}{fb}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{f{{AGb{c}}}}}{{f{AGd}}}Cf}{{{f{{f{K`}}}}{f{{f{K`}}}}}d}{{{f{K`}}{f{K`}}}d}{{{f{{AGb{c}}}}{f{DfHl}}}{{A`{bHn}}}{AGhCf}}{{{Gj{c}}}{{AGb{c}}}Cf}{cc{}}{{GdAGd}{{AGb{c}}}Cf}{{{f{{AGb{c}}}}Gd}{{Ch{{f{c}}}}}Cf}{{}AGd}{{{f{Id}}{f{{AGb{c}}}}{f{{AGb{c}}}}}{{AGb{c}}}Cf}{{AGd{f{Id}}}{{AGb{c}}}Cf}{{{f{Id}}{f{{AGb{c}}}}}{{AGb{c}}}Cf}0{{}Gd}{{}c{}}{{{f{{AGb{c}}}}}{}Cf}{{{f{{AGb{c}}}}Gd}dCf}{{fGd}d}1{{{f{{AGb{c}}}}}{{AGl{AGj}}}Cf}{{{f{{AGb{c}}}}}{{AGl{{f{c}}{Gb{c}}AGj}}}Cf}{{{f{{AGb{c}}}}}GdCf}0`{db}{{{f{Df{AGb{c}}}}{Ch{Id}}}bCf}{{{f{Df{AGb{c}}}}GdGd}bCf}{{fGdGd}c{}}01{{{f{{AGb{c}}}}Gd}{{Hf{{Cn{Cl}}{Cn{Cl}}}}}Cf}0{{{f{K`}}}{{Cn{K`}}}}{{{f{{AGb{c}}}}}{{Cn{Cl}}}Cf}{fc{}}{g{{A`{{AGb{c}}e}}}Cf{}{{Ib{}{{Cj{{A`{{Ch{{f{c}}}}e}}}}}}}}{g{{A`{{AGb{c}}e}}}Cf{}{{Ib{}{{Cj{{A`{{f{c}}e}}}}}}}}{{AGdg}{{A`{ie}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}{}}0{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}{{{f{K`}}}{{f{B`}}}}{{}{{f{B`}}}}{{{f{{AGb{c}}}}}{{Ch{{f{Id}}}}}Cf}{{{f{{AGb{c}}}}Gd}{{f{c}}}Cf}{{{f{{AGb{c}}}}Gd}{}Cf}1{{{f{{AGb{c}}}}}{}Cf}{{{f{{AGb{c}}}}}{{Gb{c}}}Cf}{{}c{}}{{{f{{AGb{c}}}}{Ch{Id}}}{{Cn{Cl}}}Cf}{{{AGb{c}}{Ch{Id}}}{{AGb{c}}}Cf}0`{{{f{Df{AGn{c}}}}}bCf}0{{{f{Df{AGn{c}}}}{Ch{c}}}bCf}{{{f{Df{AGn{c}}}}c}bCf}{{{f{Df{AGn{c}}}}{f{AGf}}}bCf}{{{f{Df{AGn{c}}}}{f{AGf}}}{{A`{bn}}}Cf}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}{{AGn{c}}}Cf}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{AGn{c}}}{{l{{Cd{c}}}}}Cf}{cc{}}{{}Gd}{{}c{}}{{DdGd}{{AGn{c}}}Cf}{{{f{Df{AGn{c}}}}}AbCf}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}5````{{{f{DfAH`}}}b}{{{f{DfAH`}}{Ch{{f{AGf}}}}}b}{{{f{DfAH`}}{f{AGf}}}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}`{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{f{AHb}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{DdGd}{{Cn{AH`}}}}{{}{{N`{Dn}}}}{{}AGd}{{}Gd}{{}c{}}{{}d}`{{{Cn{Dn}}{N`{Dn}}AGd}b}{{{f{DfAH`}}}Ab}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}6````````````````````````````````````````````````{{fh}b}00{{{f{AHd}}}Aj}{{{f{{AHh{}{{AHf{c}}}}}}g}{{AHh{}{{AHf{c}}}}}{}{}{{Dn{{Ch{e}}}{{Ad{{Ch{c}}}}}}E`}}{{{f{AHj}}{f{Dn}}}AHj}{{{f{AHj}}{f{Dn}}}{{l{c}}}Dl}{{{f{{AHh{}{{AHf{c}}}}}}i{f{Df{Bf{g}}}}}b{}{}{}{{Dn{{Ch{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AHh{}{{AHf{c}}}}}}g}{{AHh{}{{AHf{c}}}}}{}{}{{Dn{e}{{Ad{c}}}}E`}}{{{f{AHl}}F`}{{l{Fb}}}}{{{f{AHl}}{f{{Bf{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}}{{{f{AHn}}}{{A`{{l{Fb}}n}}}}`{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{{{f{AI`}}{f{El}}}{{A`{Abn}}}}0{{{f{AI`}}{f{El}}Fn}{{A`{Abn}}}}{{{f{F`}}}F`}{{{f{Fh}}}Fh}{{{f{AIb}}}AIb}{{f{f{Dfc}}}b{}}00{fb}00{{}F`}{{}Fh}{Gd{{f{c}}}{}}00{Gd{{f{Dfc}}}{}}00``{Gdb}00{{{f{F`}}{f{F`}}}d}{{{f{Fh}}{f{Fh}}}d}{{{f{AIb}}{f{AIb}}}d}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}0{{f{f{c}}}d{}}00000{{{f{AIf}}}{{A`{Abn}}}}{{{f{AIf}}}{{A`{{Hf{Ab{Hd{Hb}}}}n}}}}`{{{f{AIh}}c}{{A`{AIhn}}}{}}{{{f{AIj}}{f{{l{Bl}}}}}{{A`{{l{c}}n}}}Dl}`{{{f{F`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Fh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{AIb}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{Fh}}}F`}{{{f{F`}}}Fh}22`{{DdcGd}AIl{}}{{DdGd}AIn}`{{{f{AJ`}}Gd}{{A`{Jjn}}}}{{{f{AJ`}}Gd}Jj}{{{f{{AJb{}{{Cj{c}}}}}}e}c{}{}}0{{{f{F`}}{f{Dfc}}}bADl}{{{f{Fh}}{f{Dfc}}}bADl}{{{f{AIb}}{f{Dfc}}}bADl}{{}Gd}00{{}c{}}00{{{f{AIb}}}d}{{{f{AJd}}}{{A`{{l{Bl}}n}}}}{{{f{AJf}}}{{A`{{l{Bl}}n}}}}88``{{{f{AHd}}}{{Ch{c}}}{}}{{{f{AHd}}}{{Ch{Aj}}}}{{{f{AJh}}}{{Ch{c}}}{}}2{{{f{AHd}}}{{Ch{{Hf{cc}}}}}{}}``{{{f{AHn}}}{{A`{Gdn}}}}{{}F`}{{}Fh}{{{f{AJj}}GdGd}{{l{c}}}Dl}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}0``{{{f{AIf}}}{{A`{{Hd{Hb}}n}}}}{{{f{AJh}}AjA@`}{{A`{{Ch{c}}n}}}{}}{{{f{AJl}}}Ab}0{{{f{AJn}}}AJn}{{{f{AK`}}{f{Dn}}A@b}{{A`{Abn}}}}{{{f{AKb}}c{Ch{e}}}{{A`{AKbn}}}{{Ib{}{{Cj{Jl}}}}}{}}{{{f{AKb}}ci}{{A`{AKbn}}}{{Ib{}{{Cj{Jl}}}}}{}{}{{Dn{{Ch{e}}}{{Ad{{Ch{g}}}}}}}}`{{{f{AKb}}{f{{l{Bl}}}}{Ch{c}}}{{A`{AKbn}}}{}}{{{f{AKd}}Hb}{{l{c}}}Dl}{{{f{AKf}}Hbc}{{l{e}}}{}Dl}{{{f{AKh}}GdGd}AKh}0`{{{f{AHl}}d}{{l{c}}}Dl}{{{f{AHl}}F`}{{l{c}}}Dl}{{{f{AKj}}Bd}{{Ch{Aj}}}}{{{f{AHd}}}{{Ch{c}}}{}}{{{f{AKl}}{f{c}}}{{A`{AKln}}}A@f}{{{f{AKn}}{f{c}}}AKnA@f}{{{f{AL`}}}{{Gj{{f{{Bf{Bd}}}}}}}}{fc{}}00{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAl}00{{{f{AHn}}}{{A`{AHnn}}}}9{{}c{}}00{{F`d}F`}{{Fhd}Fh}1010{{Fhc}Fh{{Ib{}{{Cj{d}}}}}}210{F`F`}{FhFh}`{{{f{ALb}}{f{{l{Bl}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dl}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DlDl{{Dn{ff}{{Ad{}}}}}{{Dn{f}{{Ad{}}}}}{{Dn{f}{{Ad{}}}}}Dl}{{{l{c}}{l{e}}gik}{{l{m}}}DlDl{{Dn{}{{Ad{}}}}}{{Dn{}{{Ad{}}}}}{{Dn{}{{Ad{}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DlDlCl{{Af{ff}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DlDl{{ALd{ChCh}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}g}bDlDl{{Af{ChCh}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{An}}}DlDl{{Af{{f{DfEj}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DlDl{}{{Af{}{{Ad{g}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DlDl{ClALf}{{Af{ff}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DlDlCl{{Af{ff}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DlDlCl{{Af{}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DlDl{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DlDl{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DlDl{}{}{{Af{ChCh}{{Ad{{A`{{Ch{g}}i}}}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DlDlDl{{ALh{ChChCh}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DlDlClALj{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dl{}{{I`{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kDd}{{A`{{l{m}}i}}}DlDlClALj{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DlDlALj{{Af{ff}{{Ad{{A`{{Cn{Cl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DlDlDl{}{}{{Af{ChChCh}{{Ad{{A`{{Ch{i}}k}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{}{}{{Af{Ch}{{Ad{{A`{{Ch{e}}g}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{ClALf}ALj{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dl{}{{I`{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dl{{ALl{Ch}}}Dl}{{{f{{l{c}}}}e}{{l{g}}}DlALlDl}{{{f{{l{c}}}}g}{{l{i}}}DlCl{{Af{f}{{Ad{e}}}}}{{Dl{}{{I`{e}}}}}}{{{l{c}}g}{{l{i}}}DlCl{{Af{}{{Ad{e}}}}}{{Dl{}{{I`{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dl{ClALf}{{Af{f}{{Ad{e}}}}}{{Dl{}{{I`{e}}}}}}0{{{f{{l{c}}}}}GdAl}0{{MbMb}Mb}{{{f{{l{Fb}}}}Jl}{{A`{bn}}}}{{{f{{ALn{Jl}}}}Jl}{{A`{bn}}}}````{{fh}b}{{{f{{l{c}}}}eAM`d}{{Gj{Jl}}}Dl{{D`{}{{Cj{Ch}}}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{AM`}}}AM`}{{f{f{Dfc}}}b{}}{fb}{{}AM`}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{f{AM`}}{f{AM`}}}d}{{f{f{c}}}d{}}00{{{f{AM`}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{AM`}}{f{Dfc}}}bADl}{{}Gd}{{}c{}}{{{f{{Bf{f}}}}cJle}{{Gj{Jl}}}{{D`{}{{Cj{Ch}}}}}{{Dn{fGdf}{{Ad{d}}}}}}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}5`{{Gd{f{Df{Gj{d}}}}}b}```{{{f{AKh}}GdGd}AKh}0{{Gd{f{{Bf{Ff}}}}{f{DfFh}}}{{A`{{AMb{{l{Fb}}}}n}}}}{{{f{{Bf{Ff}}}}{f{{Bf{d}}}}{f{{Bf{d}}}}}{{A`{AMdn}}}}{{{f{{Bf{Ff}}}}{f{{Bf{d}}}}{f{{Bf{d}}}}}{{A`{{Kb{Hb}}n}}}}{{Dd{f{{Bf{Ff}}}}{f{{Bf{d}}}}{f{{Bf{d}}}}}{{A`{{l{Fd}}n}}}}{{Dd{f{{Bf{Ab}}}}}{{A`{{l{Fd}}n}}}}{{{f{Ab}}}{{A`{{Cn{Cl}}n}}}}{{{f{{Bf{Ab}}}}}{{A`{AMdn}}}}{{{f{{Bf{Ab}}}}}{{A`{{l{Fd}}n}}}}0```````````88`{AMfHb}00{{{f{B`}}}{{A`{Ddn}}}}{{{f{B`}}}{{A`{AMhn}}}}{{{f{AMj}}}Hb}{{{f{B`}}}{{A`{bn}}}}444```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}00000000000000000000000000000000000{{{f{AMl}}}d}{{{f{Jj}}}{{`{{D`{}{{Cj{Jj}}}}}}}}{{{f{Jj}}{f{Df{Gj{Jj}}}}}b}{{AMld}AMl}{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{Jj}}{f{Jj}}}Jj}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Cb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{An}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bl}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfAMn}}{Ch{{f{B`}}}}}b}{{{f{DfAMl}}{f{AMl}}}{{A`{bn}}}}{{{f{DfAMn}}}b}{{{f{DfAMn}}{f{B`}}}b}{{{f{AMl}}F`}{{l{Fb}}}}{eAN`{}{{Ib{}{{Cj{c}}}}}}0{{AGde}ANb{}{{Ib{}{{Cj{c}}}}}}0{{{f{El}}}{{Ch{{f{El}}}}}}{{{f{Jj}}}Jj}{{{f{{L`{KnKl}}}}}{{`{Jh}}}}{{{f{{L`{LfLb}}}}}{{`{Jh}}}}{{{f{Dd}}}{{f{ANd}}}}{{{f{Dd}}}{{f{{Bf{Bd}}}}}}{{{f{Dd}}}{{f{ANf}}}}{{{f{Dd}}}{{f{B`}}}}{{{f{El}}}{{f{El}}}}{{{f{Oj}}}{{f{El}}}}{{{f{ANh}}}{{f{El}}}}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}{{Ch{{f{{Bf{c}}}}}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}4{{{f{{L`{LnLb}}}}}{{`{Jh}}}}5{f{{f{c}}}{}}000000000000000000000000000000000000000000000{{{f{Df}}}{{f{Dfc}}}{}}000000000000000000000000000000000000000000000{El{{Cn{El}}}}{{{AOd{B`}}}AOf}{{{f{AMl}}{f{AMl}}c}{{A`{AMln}}}AOh}{{{f{AOj}}{f{El}}}{{A`{Abn}}}}{{{f{Jj}}{f{El}}}Jj}{{{f{El}}El}El}{{{f{{L`{LfLb}}}}Ld}{{L`{LfLb}}}}{{{f{{L`{LlLb}}}}Ld}{{L`{LlLb}}}}{{{f{AOj}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{L`{LjLh}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{L`{LnLb}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{L`{LlLb}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{L`{LfLb}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{L`{KnKl}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{AMl}}{f{El}}Fn}{{A`{Abn}}}}`{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}00000000{{{f{{l{Eh}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Ef}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{Dd}}}Dd}{{{f{{L`{ce}}}}}{{L`{ce}}}DlDl}{{{f{AOl}}}AOl}{{{f{AOf}}}AOf}{{{f{AMl}}}AMl}{{{f{AOn}}}AOn}{{{f{Jj}}}Jj}{{{f{B@`}}}B@`}{{{f{El}}}El}{{{f{B@b}}}B@b}{{{f{Oj}}}Oj}{{{f{B@d}}}B@d}{{{f{B@f}}}B@f}{{{f{Ld}}}Ld}{{{f{Oh}}}Oh}{{{f{Od}}}Od}{{{f{Fb}}}Fb}{{{f{Nj}}}Nj}{{{f{Nd}}}Nd}{{{f{O`}}}O`}{{{f{Kl}}}Kl}{{{f{Lb}}}Lb}{{{f{Eh}}}Eh}{{{f{Ef}}}Ef}{{{f{Kn}}}Kn}{{{f{Ln}}}Ln}{{{f{An}}}An}{{{f{Bb}}}Bb}{{{f{Fd}}}Fd}{{{f{Bl}}}Bl}{{{f{Lj}}}Lj}{{{f{Lf}}}Lf}{{{f{Ll}}}Ll}{{{f{B@h}}}B@h}{{{f{AGd}}}AGd}{{{f{B@j}}}B@j}{{f{f{Dfc}}}b{}}00000000000000000000000000000000000{fb}00000000000000000000000000000000000{{{f{Dd}}{f{Dd}}}B@l}{{{f{B@d}}{f{B@d}}}B@l}{{{f{DfOj}}El}b}{B@ne{}{{AN`{c}}ALf}}0{{B@nAGd}e{}{{ANb{c}}ALf}}0{{f{f{c}}}B@l{}}0{{{f{El}}}d}00{{{AOd{B`}}}El}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}{{}Dd}{{}BA`}{{}AOl}{{}AOf}{{}Jj}{{}B@`}{{}El}{{}AGd}{Gd{{f{c}}}{}}{{{f{Dd}}}f}11{{{f{{L`{ce}}}}}fDlDl}2222222222222222222222222222222222222222222{Gd{{f{Dfc}}}{}}00{{{f{Df{L`{ce}}}}}{{f{Df}}}DlDl}1111111111111111111111111111111111111111111{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Cb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{AMnc}AMl{{Ib{}{{Cj{{Ch{{f{B`}}}}}}}}}}{Gdb}000000000000000000000000000000000000000000000{{{f{AOj}}}{{f{El}}}}{{{f{{L`{LnLb}}}}}{{f{El}}}}{{{f{{L`{LjLh}}}}}{{f{El}}}}{{{f{{L`{KnKl}}}}}{{f{El}}}}{{{f{{L`{LlLb}}}}}{{f{El}}}}{{{f{{L`{LfLb}}}}}{{f{El}}}}{{{f{AMl}}}{{f{El}}}}{{{f{Jj}}}El}{{{f{Oj}}}{{f{El}}}}`{fc{{BAd{BAb}}}}0`{{{f{Dd}}{f{c}}}d{{Ij{B`}}A@f}}{{{f{AOl}}{f{AOl}}}d}{{{f{Jj}}{f{Jj}}}d}{{{f{B@`}}{f{B@`}}}d}{{{f{El}}{f{AGd}}}d}{{{f{El}}{f{El}}}d}{{{f{B@b}}{f{B@b}}}d}{{{f{Oj}}{f{Oj}}}d}{{{f{B@d}}{f{B@d}}}d}{{{f{B@f}}{f{B@f}}}d}{{{f{Ld}}{f{Ld}}}d}{{{f{AGd}}{f{AGd}}}d}{{{f{B@j}}{f{B@j}}}d}{{{f{Jj}}{f{Jj}}d}d}{{{f{AMl}}{f{B`}}}}{{{f{AMl}}{f{{l{An}}}}}}{{{f{AMl}}{f{AMl}}}}021{{f{f{c}}}d{}}00000000000000000000000000000000{{{f{{L`{ce}}}}}OjDlDl}{{{f{AOf}}{f{B`}}}{{Ch{Jl}}}}{{AOh{f{{l{Fb}}}}{f{{l{Fb}}}}}{{A`{{l{Fb}}n}}}}{AMnAMl}{BA`{{N`{AOf}}}}{{{f{Dd}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{AOl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{AOf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{AOn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Jj}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{B@`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{El}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{B@b}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Oj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{B@d}}{f{DfHl}}}{{A`{bHn}}}}{{{f{B@f}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{Ld}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{AGd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{B@j}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{GlDd}{{{f{B`}}}Dd}{EjDd}{{{f{Ej}}}Dd}44{{{l{Lb}}}{{L`{LnLb}}}}{{{l{Kl}}}{{L`{KnKl}}}}66666666666666{{{Ch{c}}}Jj{{BAf{Jj}}}}{cJjBAh}{{{f{{Bf{Bd}}}}}Jj}{{{f{B`}}}Jj}{dJj};;{JjEl}{{{f{Jj}}}El}{{{f{AGd}}}El}>{{{f{BAj}}}Oj}{{{f{Jj}}}Oj}{cc{}}00{{{f{B@j}}}Ld}111111111111111111111{BAlAGd}2{BAnAGd}3{{{f{AGd}}d}El}{{{l{Fb}}{N`{AOf}}dAOl}AMl}{{DdcLd}{{L`{LlLb}}}{{Ib{}{{Cj{BB`}}}}}}{{DdcLd}{{L`{LlLb}}}{{Ib{}{{Cj{{Ch{BB`}}}}}}}}{{{l{Fb}}AOl}AMl}{cDd{{Ib{}{{Cj{{Eb{B`}}}}}}}}{cDd{{Ib{}{{Cj{Dd}}}}}}{cDd{{Ib{}{{Cj{{Cn{B`}}}}}}}}{cDd{{Ib{}{{Cj{Ej}}}}}}{cDd{{Ib{}{{Cj{{f{B`}}}}}}}}{cDd{{Ib{}{{Cj{{f{BAb}}}}}}}}{cDd{{Ib{}{{Cj{{f{Dd}}}}}}}}{cDd{{Ib{}{{Cj{BAb}}}}}}{{Ddc}{{L`{KnKl}}}{{Ib{}{{Cj{BBb}}}}}}{{Ddc}{{L`{KnKl}}}{{Ib{}{{Cj{{Ch{BBb}}}}}}}}{{DdcLd}{{L`{LfLb}}}{{Ib{}{{Cj{AMf}}}}}}{{DdcLd}{{L`{LfLb}}}{{Ib{}{{Cj{{Ch{AMf}}}}}}}}{{Ddc}{{L`{LnLb}}}{{Ib{}{{Cj{AMj}}}}}}{{Ddc}{{L`{LnLb}}}{{Ib{}{{Cj{{Ch{AMj}}}}}}}}{{{f{B`}}}Dd}0{EjDd}{{{f{{l{An}}}}{f{{AOd{B`}}}}AOl}{{A`{AMln}}}}{{{Gj{c}}AGd}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{Gj{c}}AGd}{{ALf{}{{ANj{e}}{ANl{c}}{ANn{g}}}}}{AO`{AOb{e}}}Jf{{H`{}{{Cj{e}}}}JhInJ`}}{{GdcAGd}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{GdAGd}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{DddGdAOl}AMl}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}Gd}{{Ch{c}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{AOf}}Jl}{{f{B`}}}}{B@dKf}{B@f{{Ch{Kf}}}}{{{f{{L`{LnLb}}}}Gd}{{A`{Jjn}}}}{{{f{{L`{LfLb}}}}Gd}{{A`{Jjn}}}}{{{f{{L`{LjLh}}}}Gd}{{A`{Jjn}}}}{{{f{{L`{KnKl}}}}Gd}{{A`{Jjn}}}}{{{f{{L`{LlLb}}}}Gd}{{A`{Jjn}}}}{{{f{AOj}}Gd}{{A`{Jjn}}}}{{{f{AMl}}Gd}{{A`{Jjn}}}}{{{f{{L`{LnLb}}}}Gd}Jj}{{{f{{L`{LfLb}}}}Gd}Jj}{{{f{{L`{KnKl}}}}Gd}Jj}{{{f{{L`{LlLb}}}}Gd}Jj}{{{f{{L`{LjLh}}}}Gd}Jj}{{{f{AOj}}Gd}Jj}{{{f{AMl}}Gd}Jj}{{{f{AOf}}}{{f{{AOd{B`}}}}}}{{}El}0000000000000000000000000{{{f{AOf}}Jl}{{Ch{{f{B`}}}}}}{{B@fKf}Kf}{{B@fc}Kf{{Dn{}{{Ad{Kf}}}}}}{{{f{AMl}}}{{f{{N`{AOf}}}}}}{{{f{El}}}{{Ch{{Gj{Gd}}}}}}{{{f{Jj}}}{{Ch{{f{B`}}}}}}{{{f{BBd}}Gd}Jj}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}Gd}{{Ch{c}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{AMl}}{f{AMl}}}}{{{f{AMl}}{f{B`}}}}{{{f{AMl}}{f{{l{An}}}}}}102{{{f{Dd}}{f{Dfc}}}bADl}{{{f{Jj}}{f{Dfc}}}bADl}{{{f{B@`}}{f{Dfc}}}bADl}{{{f{El}}{f{Dfc}}}bADl}{{{f{Oj}}{f{Dfc}}}bADl}{{{f{B@f}}{f{Dfc}}}bADl}{{{f{Ld}}{f{Dfc}}}bADl}{{{f{AGd}}{f{Dfc}}}bADl}{{{f{B@j}}{f{Dfc}}}bADl}{{{f{Jj}}{f{Dfc}}d}bADl}{{{f{{L`{LnLb}}}}}{{l{Nd}}}}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}{{{f{Jj}}}Jl}{ElEl}{{}Gd}000000000000000000000000000000000000000000000{{{f{El}}}{{Ch{{f{El}}}}}}{{{f{AGd}}}{{Ch{{f{AGd}}}}}}{{}c{}}000000000000000000000000000000000000000000000{{}Ff}01{{BBfEl}{{A`{Mjn}}}}{{{L`{LjLh}}}Ab}{{{L`{LlLb}}}Ab}{{{L`{LfLb}}}Ab}{{{L`{LnLb}}}Ab}{{{L`{KnKl}}}Ab}{AMlAb}{JjJj}{DdEj}{{{f{El}}}d}00{{{f{Jj}}}d}111{{{f{AMl}}}d}0212{{{f{AOf}}}d}23330323{{{f{AGd}}}d}34343444434444340{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}{{AGl{cgAGj}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{AMl}}}BBh}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}{{Ch{c}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{El}}}{{f{El}}}}{{{f{AOf}}}Gd}{{{f{AMl}}}Gd}{DdBBj}{{{f{AMl}}{f{AMl}}}}{{{f{AMl}}{f{{l{An}}}}}}{{{f{AMl}}{f{B`}}}}012{{{f{AMl}}{f{AMl}}}{{A`{{Hf{AMlAMl}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hf{{l{Ah}}{l{Ah}}}}n}}}}{{{f{El}}{f{El}}}{{A`{dn}}}}{{{f{B@`}}}{{Ch{El}}}}{{{f{AMl}}}Mj}{{{f{El}}{f{El}}}{{A`{Eln}}}}{{{f{DfBA`}}{f{{N`{AOf}}}}}{{A`{bn}}}}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}03{{{f{{L`{LnLb}}}}}{{l{Nd}}}}1{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Cb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{AMl}}}{{A`{Gdn}}}}{{{f{AMl}}}{{f{Dd}}}}{{{f{Oj}}}{{f{Dd}}}}`{{{f{{L`{LnLb}}}}}{{l{Kl}}}}9{{}c{}}0{{DdGdAOl}AMn}{{Ddc}{{L`{KnKl}}}{{Ij{{Bf{BBb}}}}}}{{Ddc}{{L`{KnKl}}}{{Ij{{Bf{{Ch{BBb}}}}}}}}{{Ddc}{{L`{LfLb}}}{{Ij{{Bf{AMf}}}}}}{{Ddc}{{L`{LlLb}}}{{Ij{{Bf{{Ch{BB`}}}}}}}}{{Ddc}{{L`{LnLb}}}{{Ij{{Bf{{Ch{AMj}}}}}}}}{{Ddc}{{L`{LfLb}}}{{Ij{{Bf{{Ch{AMf}}}}}}}}{{Ddc}{{L`{LnLb}}}{{Ij{{Bf{AMj}}}}}}{{Ddc}{{L`{LlLb}}}{{Ij{{Bf{BB`}}}}}}{{{N`{AOf}}}BA`}{{DdEl}Oj}{KfB@d}{HbB@f}{KfB@f}{{{l{c}}}{{L`{ec}}}DlDl}{{}B@b}{{{f{DfBBh}}}Ch}{{{f{AMl}}{f{B`}}}}{{{f{AMl}}{f{AMl}}}}{{{f{AMl}}{f{{l{An}}}}}}210{{{f{AMl}}}Gd}5{{Dd{f{{Bf{{f{B`}}}}}}{f{B`}}}{{L`{KnKl}}}}{{Dd{f{{Bf{{f{B`}}}}}}{f{B`}}}{{L`{LnLb}}}}{{{f{Dd}}{f{Dd}}}{{Ch{B@l}}}}{{{f{Jj}}{f{Jj}}}{{Ch{B@l}}}}{{{f{B@d}}{f{B@d}}}{{Ch{B@l}}}}{{{f{Ld}}{f{Ld}}}{{Ch{B@l}}}}{{{f{{L`{ce}}}}}{{f{{l{e}}}}}DlDl}{{{f{AMl}}}{{f{{l{Fb}}}}}}{{{f{{L`{LjLh}}}}}{{Ch{Gd}}}}{{{f{DfAMn}}{f{B`}}}{{Hf{Jld}}}}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Cb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{L`{LfLb}}}}{f{{l{An}}}}{Ch{{f{AMh}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{{L`{KnKl}}}}{f{{l{An}}}}{Ch{{f{AMh}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{AOf}}{f{AOf}}}d}{{{f{{L`{LjLh}}}}}Gd}{{{f{{L`{LnLb}}}}}{{l{Nd}}}}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}{{{f{DfOj}}Dd}b}{{{f{Df{L`{LlLb}}}}Ld}b}{{{f{Df{L`{LfLb}}}}Ld}b}{{{f{Df{L`{LfLb}}}}LdDd}{{A`{bn}}}}{{{f{Df{L`{LfLb}}}}Dd}{{A`{bn}}}}{{{f{BBh}}}{{Hf{Gd{Ch{Gd}}}}}}{{{f{AMl}}d}AMl}{{{f{AMl}}F`}AMl}{{{f{Jj}}}{{Eb{B`}}}}{{{f{{L`{LfLb}}}}{f{B`}}}{{A`{{l{An}}n}}}}{{{f{{L`{LnLb}}}}{f{B`}}}{{l{An}}}}{{{f{{L`{KnKl}}}}{f{B`}}}{{A`{{l{An}}n}}}}{{{f{Jj}}{f{El}}}{{Ch{Jj}}}}{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Cb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{L`{LfLb}}}}}Ld}{{{f{{L`{LlLb}}}}}Ld}{{{f{{L`{LfLb}}}}}{{f{{Ch{Dd}}}}}}{{{f{AMl}}B@bd}{{Cn{Cl}}}}{{{f{El}}B@b}AGd}{{{f{Oj}}B@b}BAj}{LdB@j}{{{f{El}}DdB@b}BAj}{Ld{{f{B`}}}}{{{f{AMl}}{f{{AOd{B`}}}}BBl}AMl}{{AGdGdd}AGd}{{{f{AMl}}}{{A`{AMln}}}}{{{f{AMl}}}AMl}{{{f{AGd}}}{{f{AGd}}}}{fc{}}00000000000000000000000000000000000{{{f{El}}}El}{{{f{AGd}}}BBn}{{{f{{L`{LjLh}}}}Gd}{{A`{{Eb{{L`{LjLh}}}}n}}}}{fEj}{{{f{{L`{LfLb}}}}{f{B`}}}{{A`{{l{An}}n}}}}{{{f{{L`{KnKl}}}}{f{B`}}}{{A`{{l{An}}n}}}}{{{f{{L`{LnLb}}}}{f{B`}}}{{l{An}}}}3333{{{f{Jj}}{f{Jj}}}d}{{{f{{L`{LfLb}}}}{Ch{{f{AMh}}}}{f{{l{An}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{{L`{KnKl}}}}{Ch{{f{AMh}}}}{f{{l{An}}}}}{{A`{{L`{KnKl}}n}}}}{g{{A`{AN`e}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}0{{AGdg}{{A`{ANbe}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}0{B@n{{A`{eg}}}{}{{AN`{c}}ALf}{}}0{{B@nAGd}{{A`{eg}}}{}{{ANb{c}}ALf}{}}0{{{f{Jj}}}{{A`{cn}}}Mh}{c{{A`{e}}}{}{}}00000000000000000000{Hb{{A`{B@d}}}}1111111111111111111111111{{}{{A`{c}}}{}}000000000000000000000000000000000000000000000{{{f{Jj}}{f{El}}}{{A`{Jjn}}}}{{{f{El}}B@b}{{A`{AGdn}}}}{f{{A`{GlBC`}}}}0000{fAAl}000000000000000000000000000000000000000000000{{{f{AGd}}}AGd}{{{f{AMl}}}{{A`{AMln}}}}{{{f{AMl}}}d}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}Gd}cJf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{AMl}}}{{A`{AAnn}}}}1{{{f{El}}Jj}d}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}gJf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{}c{}}000000000000000000000000000000000000000000000{Gdc{}}0{{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}{Ch{Id}}}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{DfDd}}BAb}{{A`{bHn}}}}{{{f{DfDd}}BCb}{{A`{bHn}}}}{{{f{DfDd}}{f{B`}}}{{A`{bHn}}}}{{{f{El}}}Jj}```````````{{{f{AMl}}{f{AMl}}c}{{A`{AMln}}}AOh}{{AOh{f{{l{Fb}}}}{f{{l{Fb}}}}}{{A`{{l{Fb}}n}}}}{{{f{AMl}}{f{AMl}}}{{A`{{Hf{AMlAMl}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hf{{l{Ah}}{l{Ah}}}}n}}}}`````````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}BCd}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{{}b}{Gdb}{{{f{DfBCd}}}b}2{cc{}}6{{}Gd}{{}c{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}{{}d}4`{{{f{DfBCf}}Jl{f{AOf}}}{{A`{{f{DfBCf}}n}}}}{{{f{DfBCf}}}{{f{DfBCf}}}}{{{f{DfBCf}}{f{B`}}}{{A`{{f{DfBCf}}n}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}?{BCfAMl}>=<{{DdGd{N`{AOf}}AOld}BCf}<;:=``````````````````````````{{{f{BCh}}}{{f{B`}}}}666555`{{nBCh}n}{nn}66{{{f{BCh}}}f}7666{Gdb}00`{{{f{BCj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BCh}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{n}}{f{DfHl}}}{{A`{bHn}}}}0{cc{}}0{cBCh{{BAf{{Eb{B`}}}}}}{BCln}{BCnn}{BD`n}{BDbn}{BDdn}{BDfn}7{{}{{Gf{{f{B`}}BCj}{{Ad{b}}}}}}{{}Gd}00{{}c{}}00{cnALj}{{{f{B`}}}BCh}````{{{Gf{{f{B`}}BCj}{{Ad{b}}}}}b}{cnBDh}{fEj}0{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{f{{A`{GlBC`}}}}0{fAAl}00999{{{f{n}}c}n{{ABb{{f{B`}}}{{Ad{Ej}}}}}}``````````````````{{fh}b}00{{{f{DfAAn}}{Gj{Ff}}{f{{BDj{El}}}}}{{A`{bn}}}}{{{f{DfAAn}}{Gj{Ab}}{f{{BDj{El}}}}}{{A`{bn}}}}{{{f{AAn}}{f{Dn}}}{{Gj{Ff}}}}0{{{f{AAn}}{f{{l{Bl}}}}}{{A`{AAnn}}}}{{{Gj{Ff}}}AAn}{{{f{AAn}}{f{{Bf{Dd}}}}}{{A`{AAnn}}}}0{{{f{AAn}}{f{{Bf{Dd}}}}{f{{BDj{El}}}}d}{{A`{AAnn}}}}{{{f{AAn}}HbGd}AAn}{{{f{AAn}}}AAn}{{{f{DfAAn}}}{{f{DfAAn}}}}{{{f{DfAAn}}{f{B`}}e}{{A`{{f{DfAAn}}n}}}BDl{{ABb{{f{Ff}}}{{Ad{c}}}}}}{{{f{DfAAn}}Gde}{{A`{{f{DfAAn}}n}}}BDl{{ABb{{f{Ff}}}{{Ad{c}}}}}}22{f{{f{c}}}{}}0000{{{f{Df}}}{{f{Dfc}}}{}}0000{{{f{AAn}}}{{`{{D`{}{{Cj{Gd}}}}}}}}6{{{f{BDn}}}BDn}{{{f{BE`}}}BE`}8{{f{f{Dfc}}}b{}}00{fb}00`{{{f{AAn}}{f{B`}}}{{A`{{f{Ff}}n}}}}{{{f{AAn}}e}{{A`{{Gj{{f{Ff}}}}n}}}{{Ij{B`}}}{{Ib{}{{Cj{c}}}}}}{{}BE`}{{}AAn}{Gd{{f{c}}}{}}0000{Gd{{f{Dfc}}}{}}0000{Gdb}000{{{f{AAn}}{f{B`}}}{{A`{AAnn}}}}1{{{f{DfAAn}}{f{B`}}}{{A`{Ffn}}}}{{{f{AAn}}e}AAn{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AAn}}{f{{BEb{DdA@l}}}}}AAn}{{{f{AAn}}{Ch{{f{{Bf{c}}}}}}}{{A`{AAnn}}}{}}{{{f{AAn}}}{{Gj{El}}}}9{{{f{{BDj{BAj}}}}}AAn}{{{f{{BDj{El}}}}}AAn}{{{f{BE`}}{f{BE`}}}d}{{{f{AAn}}{f{AAn}}}d}00{{f{f{c}}}d{}}00{{{f{AAn}}}Gd}`{{{f{AAn}}e}{{A`{AAnn}}}{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AAn}}{Gj{Ff}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{AAn}}}{{A`{bn}}}}{{{f{AAn}}}{{Gj{Oj}}}}{{{f{AAn}}AIb}{{A`{AAnn}}}}{{{f{AAn}}{f{{l{Bl}}}}}{{A`{AAnn}}}}{{{f{BDn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BE`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{AAn}}{f{DfHl}}}{{A`{bHn}}}}0{cc{}}0000{cAAn{{Ib{}{{Cj{Ab}}}}}}{cAAn{{Ib{}{{Cj{Ff}}}}}}{{{f{{Bf{BEd}}}}}{{A`{AAnn}}}}{{{f{{Bf{BEd}}}}{f{{BDj{El}}}}}{{A`{AAnn}}}}{{c{f{{BDj{El}}}}}{{A`{AAnn}}}{{D`{}{{Cj{{f{BEd}}}}}}}}{{{f{AAn}}Gd}{{Ch{{Gj{Jj}}}}}}{{{f{AAn}}{f{B`}}}{{Ch{Gd}}}}{{{f{AAn}}}{{Gj{{f{Dd}}}}}}{{{f{AAn}}}{{Gj{Dd}}}}{{{f{AAn}}}{{Gj{{f{B`}}}}}}{{{f{AAn}}}{{f{{Bf{Ff}}}}}}{{{f{DfAAn}}}{{f{Df{Gj{Ff}}}}}}{{{f{AAn}}Gd}{{A`{BEdn}}}}{{{f{AAn}}Gd{f{DfBEd}}}{{A`{bn}}}}{{{f{AAn}}Gd{f{DfBEd}}}b}{{{f{AAn}}}{{Ch{{A`{Eln}}}}}}`{{{f{AAn}}e}{{A`{BEfn}}}{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AAn}}{Gj{Ff}}{f{BEh}}}{{A`{{Hf{Ff{Gj{Ff}}C`}}n}}}}1{{{f{AAn}}{Gj{Ff}}dd}{{A`{BEfn}}}}{{{f{BE`}}{f{Dfc}}}bADl}{{{f{AAn}}{Ch{Gd}}}AAn}{{{f{AAn}}}Gd}{{{f{AAn}}{f{{Bf{Ff}}}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{{Bf{Ff}}}}}{{A`{{f{DfAAn}}n}}}}{{{f{DfAAn}}{f{{Bf{Ff}}}}}{{f{DfAAn}}}}{{{f{AAn}}{Nh{Gd}}}f}{{{f{AAn}}{BEj{Gd}}}f}{{{f{AAn}}{BEl{Gd}}}f}{{{f{AAn}}{BEn{Gd}}}f}{{{f{AAn}}Gd}f}{{{f{AAn}}{BF`{Gd}}}f}{{{f{AAn}}BFb}f}{{{f{AAn}}{f{B`}}}f}{{}Gd}0000{{{f{DfAAn}}Gdc}{{A`{{f{DfAAn}}n}}}BDl}{{}c{}}000000{{AAnDd}{{l{j}}}}{{{f{AAn}}}{{A`{{l{Bl}}n}}}}{{{f{AAn}}}d}1{{{f{AAn}}}{{`{Jd}}}}{{{f{AAn}}}{{`{{D`{}{{Cj{AAn}}}}}}}}{{{f{AAn}}B@bd}BFd}{{{f{AAn}}}BFf}{AAnBFh}{{{f{AAn}}}Gd}5{{{f{AAn}}}{{A`{{Ch{Ff}}n}}}}{{{f{AAn}}BDn}{{A`{{Ch{Ab}}n}}}}122{{{Gj{Ff}}}{{A`{AAnn}}}}{{{Gj{Ff}}}AAn}111{{{f{DfBFd}}}Ch}{{{f{DfBFf}}}Ch}{{{f{AAn}}}AAn}{{{f{AAn}}}{{`{{Ol{}{{Cj{{f{Ab}}}}}}}}}}{{{f{AAn}}ed}{{A`{{Gj{AAn}}n}}}{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}}0{{AAne}{{A`{cn}}}{}{{Dn{AAn}{{Ad{{A`{cn}}}}}}}}{{{f{DfAAn}}e}{{A`{cn}}}{}{{Dn{{f{DfAAn}}}{{Ad{{A`{cn}}}}}}}}{{AAngc}{{A`{en}}}{}{}{{Dn{AAnc}{{Ad{{A`{en}}}}}}}}{{{f{DfAAn}}}{{Ch{Ff}}}}{{{f{AAn}}{f{AAn}}}d}{{{f{DfAAn}}{f{B`}}Dd}{{A`{{f{DfAAn}}n}}}}{{{f{DfAAn}}{f{B`}}c}{{A`{{f{DfAAn}}n}}}BFj}{{{f{DfAAn}}Gdc}{{A`{{f{DfAAn}}n}}}BDl}{{{f{DfAAn}}Ddc}{{A`{{f{DfAAn}}n}}}BFj};{{{f{AAn}}{Gj{Ff}}{f{BFl}}}{{A`{{Hf{Ff{Gj{Ff}}C`}}n}}}}`{{{f{AAn}}{f{Ab}}dd{Ch{Kf}}}{{A`{AAnn}}}}0{{{f{AAn}}Gddd{Ch{Kf}}}{{A`{AAnn}}}}{{{f{AAn}}}{{BDj{El}}}}{{{f{AAn}}{f{AAn}}}{{A`{bn}}}}{{{f{AAn}}e}{{A`{AAnn}}}{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AAn}}Gd}{{Ch{{f{Ff}}}}}}{{{f{AAn}}c}{{A`{AAnn}}}{{BFn{Gd}}}}{{{f{AAn}}c}{{A`{{Gj{Ff}}n}}}{{BG`{Dd}}}}3{{{f{AAn}}e{f{{N`{{BDj{El}}}}}}}{{A`{AAnn}}}{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AAn}}e{f{{BDj{El}}}}}{{A`{AAnn}}}{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{DfAAn}}e}{{A`{bn}}}{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AAn}}}{{Hf{GdGd}}}}{{{f{AAn}}Hb}AAn}{{{f{AAn}}}d}{{{f{DfAAn}}}b}{{{f{AAn}}}Gd}{{{f{BFd}}}{{Hf{Gd{Ch{Gd}}}}}}{{{f{BFf}}}{{Hf{Gd{Ch{Gd}}}}}}{{{f{AAn}}HbGd}AAn}00{{{f{AAn}}cFh}{{A`{AAnn}}}{{BG`{Dd}}}}{{{f{DfAAn}}cFh}{{A`{{f{DfAAn}}n}}}{{BG`{Dd}}}}{{{f{AAn}}Hb}{{Hf{AAnAAn}}}}0{{{f{DfAAn}}}{{`{{D`{}{{Cj{AAn}}}}}}}}{{AAnGdd}{{Gj{AAn}}}}{{{f{AAn}}BDn}{{A`{{Ch{Ab}}n}}}}{{{f{AAn}}{Ch{Gd}}}AAn}{{{f{AAn}}{f{{l{Fb}}}}}{{A`{AAnn}}}}{AAn{{Gj{Ff}}}}{{{f{AAn}}{f{{l{Fb}}}}}AAn}{{{f{AAn}}{f{{l{Fb}}}}d}AAn}{{{f{AAn}}}{{f{AAn}}}}{{{f{AAn}}BGb}{{A`{{AAf{AA`{AAd{{AAb{Gd}}}}}}n}}}}{fc{}}00{fEj}{{{f{DfAAn}}{Ch{{f{B`}}}}{Ch{{AAj{Ej{Gj{Ej}}}}}}}{{A`{AAnn}}}}{{{f{DfAAn}}{Ch{{f{B`}}}}{Ch{{AAj{Dd{Gj{Dd}}}}}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{B`}}e}{{A`{{f{DfAAn}}n}}}BDl{{ABb{{f{Ab}}}{{Ad{{A`{cn}}}}}}}}{{{f{DfAAn}}Gde}{{A`{{f{DfAAn}}n}}}BDl{{ABb{{f{Ff}}}{{Ad{{A`{cn}}}}}}}}{c{{A`{e}}}{}{}}0000{{{Hf{{BGd{{Cn{Cl}}}}{f{{BDj{BAj}}}}}}}{{A`{AAnn}}}}{BGf{{A`{AAnn}}}}{{c{f{{BDj{El}}}}}{{A`{AAnn}}}{{D`{}{{Cj{{A`{{f{BEd}}n}}}}}}}}{{{f{AAn}}{f{B`}}}{{A`{Gdn}}}}{{}{{A`{c}}}{}}0000{f{{A`{GlBC`}}}}{fAAl}0000{{{f{AAn}}{Ch{{f{{Bf{Ej}}}}}}BE`{Ch{{Hf{HbGd}}}}}{{A`{AAnn}}}}{{{f{AAn}}d{Ch{{Gj{Dd}}}}BE`{Ch{{Hf{HbGd}}}}}{{A`{AAnn}}}}1{{{f{AAn}}c}{{A`{AAnn}}}{{BG`{Dd}}}}{{{f{AAn}}c{f{B`}}BGh}{{A`{AAnn}}}{{BG`{Dd}}}}0{{{f{AAn}}{f{AAn}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{AAn}}}{{A`{{f{DfAAn}}n}}}}{{{f{DfAAn}}{f{AAn}}}b}{{}c{}}0000{{{f{AAn}}}Gd}{{{f{DfAAn}}c}{{A`{{f{DfAAn}}n}}}BDl}{{{f{DfAAn}}c{f{{BDj{El}}}}}{{A`{{f{DfAAn}}n}}}BDl}{{{f{DfAAn}}Ff}{{f{DfAAn}}}}{{{f{AAn}}Dd{Ch{Jl}}}{{A`{AAnn}}}}{{{f{DfAAn}}Dd{Ch{Jl}}}{{f{DfAAn}}}}`````{{fh}b}0{{FfFf}}{{{f{Ff}}{f{Ff}}}}{{Ffc}{}{BhMh}}{{{f{Ff}}c}{}{BhMh}}{{{f{Ff}}{f{C`}}}Ff}0000000{{{f{Ff}}{f{C`}}AjA@`}Ff}1{{{f{Ff}}{f{C`}}Bd}Ff}{{{f{DfFf}}{f{Ff}}}{{A`{{f{DfFf}}n}}}}{{{f{Ff}}F`}{{l{Fb}}}}{{{f{Ff}}}{{A`{{f{{l{Cb}}}}n}}}}{{{f{BGj}}}{{f{Ab}}}}{{{f{Ff}}}{{f{Ab}}}}{{{f{Ff}}}{{Ch{{f{BGj}}}}}}{{{f{Ff}}}{{Ch{{f{Ab}}}}}}{{{f{BGj}}}Ab}{{{f{Ff}}}{{A`{{f{{l{Bb}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Fd}}}}n}}}}{{{f{Ff}}}{{Ch{BGl}}}}{{{f{Ff}}{f{Ff}}}{{A`{Ffn}}}}{{FfFf}}{{{f{Ff}}{f{Ff}}}}1010{{{f{Ff}}}{{A`{{f{{l{Bl}}}}n}}}}{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{BGj}}{f{El}}}{{A`{BGjn}}}}{{{f{Ff}}{f{El}}}{{A`{Ffn}}}}10{{{f{BGj}}{f{El}}Fn}{{A`{BGjn}}}}{{{f{Ff}}{f{El}}Fn}{{A`{Ffn}}}}{{{f{Ff}}}{{A`{{f{AMl}}n}}}}{{{f{Ff}}}Ff}{{{f{BGj}}}BGj}1{{f{f{Dfc}}}b{}}0{fb}0{{{f{Ff}}}{{A`{{f{{L`{KnKl}}}}n}}}}{{{f{Ff}}}{{A`{{f{{L`{LfLb}}}}n}}}}{{{f{Ff}}}{{A`{{f{{L`{LjLh}}}}n}}}}{{}Ff}{Gd{{f{c}}}{}}0{Gd{{f{Dfc}}}{}}0{{{f{Ff}}{f{Ff}}}}{{{f{Ff}}c}{}{BhMh}}{{FfFf}}{{Ffc}{}{BhMh}}{{{f{Ff}}{f{Ff}}}{{A`{Ffn}}}}{Gdb}0?{{{f{BGj}}}{{f{El}}}}{{{f{Ff}}}{{f{El}}}}{{{f{Ff}}}{{A`{{f{{L`{LlLb}}}}n}}}}{{{f{Ff}}{f{Ff}}}d}{{{f{Ff}}{f{Ff}}}{{A`{{l{Bl}}n}}}}011{{{f{Ff}}}{{A`{Ffn}}}}{{{f{DfFf}}{f{Ff}}}{{A`{{f{DfFf}}n}}}}{{{f{Ff}}JjGd}{{A`{Ffn}}}}{{{f{Ff}}}{{A`{{f{{l{Eh}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Ef}}}}n}}}}{{{f{Ff}}}{{Eb{Oj}}}}{{{f{Ff}}AIb}{{A`{Ffn}}}}{{{f{Ff}}{f{{l{Bl}}}}}{{A`{Ffn}}}}{{{f{BGj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Ff}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}0{AbFf}{BGjFf}{{AbGd}BGj}{{DdGd{f{El}}}Ff}{{{f{Ff}}GdGd}Ff}{{{f{Ff}}Gd}{{A`{Jjn}}}}{{{f{Ff}}}Gd}{{{f{Ff}}}Jn}{{{f{Ff}}}{{Ch{{Cn{Fl}}}}}}{{{f{Ff}}Gd}{{Ch{{f{K`}}}}}}{{{f{Ff}}Gd}Jj}{{{f{Ff}}{f{Ff}}}{{A`{{l{Bl}}n}}}}0{{{f{BGj}}}d}{{{f{Ff}}}d}{{{f{Ff}}{Ch{Gd}}}Ff}{{{f{Ff}}}{{A`{{f{{l{O`}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Kl}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Lb}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Nd}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Fb}}}}n}}}}{{}Gd}0{{}c{}}0{BDlFf}{BGjFf}{FfFf}{FfAAn}{{{f{DfFf}}}{{f{DfAb}}}}>={{{f{Ff}}}{{A`{{l{Bl}}n}}}}000{{{f{Ff}}}{{l{Bl}}}}0{{{f{Ff}}}Mb}{{{f{BGj}}}{{Ch{{f{Ab}}}}}}{{{f{BGj}}}Gd}{{{f{Ff}}}Gd}{{{f{Ff}}}{{A`{{f{{l{Ah}}}}n}}}}{{{f{Ff}}{f{Ff}}}{{A`{{l{Bl}}n}}}}0{{{f{Ff}}}{{A`{Mjn}}}}0{{{f{Ff}}{f{Ff}}}}{{FfFf}}{{Ffc}{}{BhMh}}{{{f{Ff}}c}{}{BhMh}}{{{f{BGj}}}{{f{Dd}}}}{{{f{Ff}}}{{f{Dd}}}}{{DdMjGd}BGj}{{Ddc}Ff{}}{{DdEl}BGj}{{Dd{f{El}}}Ff}{{{f{Ff}}GdGd}Ff}{{DdMjGd}Ff}==?{{{f{Ff}}}{{Cn{Jd}}}}={{{f{Ff}}}Ff};:=<{{{f{DfBGj}}Dd}{{f{DfBGj}}}}{{{f{DfFf}}Dd}b}{{{f{Ff}}{f{{Bf{B@f}}}}}{{A`{Ffn}}}}0{{{f{BGj}}Gd}BGj}4{{{f{Ff}}Ajdd{Ch{Kf}}}{{A`{Ffn}}}}{{{f{Ff}}Gddd{Ch{Kf}}}{{A`{Ffn}}}}{{{f{BGj}}}{{f{Mj}}}}{{{f{DfFf}}Mb}b}{{{f{Ff}}Hb}Ff}{{{f{DfFf}}}b}{{{f{Ff}}{Ch{Kf}}}Ff}{{{f{Ff}}HbGd}Ff}{{{f{Ff}}F`}{{A`{Ffn}}}}{{{f{Ff}}Hb}{{Hf{FfFf}}}}{{{f{Ff}}}{{A`{{f{{l{An}}}}n}}}}{{{f{BGj}}{f{El}}}{{A`{BGjn}}}}{{{f{Ff}}{f{El}}}{{A`{Ffn}}}}{{{f{Ff}}}{{A`{{f{{l{j}}}}n}}}}{{{f{Ff}}c}{}{BhMh}}{{FfFf}}{{{f{Ff}}{f{Ff}}}}{{Ffc}{}{BhMh}}{{{f{Ff}}{Ch{Gd}}}Ff}{{{f{Ff}}{f{{l{Fb}}}}}{{A`{Ffn}}}}{BGjAb}{FfAb}{{{f{Ff}}{f{{Bf{Jl}}}}}{{A`{Ffn}}}}{{{f{Ff}}{f{{Bf{Jl}}}}}Ff}{{{f{Ff}}{f{{l{Fb}}}}}Ff}{fc{}}0{{{f{Ff}}}Ff}{{{f{BGj}}}Ab}{{{f{Ff}}}{{Ch{{f{{l{Cb}}}}}}}}{{{f{Ff}}}{{Ch{{f{{l{Bb}}}}}}}}{{{f{Ff}}}{{Ch{{f{{l{Fd}}}}}}}}{{{f{Ff}}}{{Ch{{f{{l{Bl}}}}}}}}{{{f{Ff}}}{{Ch{{f{AMl}}}}}}{{{f{Ff}}}{{Ch{{f{{L`{KnKl}}}}}}}}{{{f{Ff}}}{{Ch{{f{{L`{LfLb}}}}}}}}{{{f{Ff}}}{{Ch{{f{{L`{LjLh}}}}}}}}{{{f{Ff}}}{{Ch{{f{{L`{LlLb}}}}}}}}{{{f{Ff}}}{{Ch{{f{{l{Eh}}}}}}}}{{{f{Ff}}}{{Ch{{f{{l{Ef}}}}}}}}{c{{A`{e}}}{}{}}0{{{f{Ff}}}{{Ch{{f{{l{O`}}}}}}}}{{{f{Ff}}}{{Ch{{f{{l{Kl}}}}}}}}{{{f{Ff}}}{{Ch{{f{{l{Lb}}}}}}}}{{{f{Ff}}}{{Ch{{f{{l{Nd}}}}}}}}{{{f{Ff}}}{{Ch{{f{{l{Fb}}}}}}}}{{}{{A`{c}}}{}}0{{{f{Ff}}}{{Ch{{f{{l{Ah}}}}}}}}{{{f{Ff}}}{{Ch{{f{{l{An}}}}}}}}{{{f{Ff}}}{{Ch{{f{{l{j}}}}}}}}{{{f{Ff}}}{{Ch{{f{{l{Od}}}}}}}}5{{{f{Ff}}}{{Ch{{f{{l{Nj}}}}}}}}{{{f{Ff}}}{{Ch{{f{{l{Oh}}}}}}}}{fAAl}0{{{f{Ff}}}{{A`{{f{{l{Od}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Fb}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Nj}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Oh}}}}n}}}}{{{f{Ff}}}{{A`{Ffn}}}}0{AbBGj}{{{f{Ff}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{Ff}}A@l{f{Df{Bf{Kf}}}}}{{A`{bn}}}}{{}c{}}0{{FfDd}Ff}{{{f{Ff}}c}Ff{BhMh}}{{{f{Ff}}{f{{l{Bl}}}}{f{Ff}}}{{A`{Ffn}}}}0`{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{BGn}}}BGn}{{f{f{Dfc}}}b{}}{fb}{{}BGn}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{f{BGn}}{f{BGn}}}d}{{f{f{c}}}d{}}00{{{f{BGn}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{BGn}}{f{Dfc}}}bADl}`{{}Gd}{{}c{}}`{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}``4````````````````````````````````{{fh}b}000{{{f{BEf}}}{{A`{AAnn}}}}`{{{f{BH`}}}{{f{{Bf{{BHb{Jl}}}}}}}}{{{f{BEf}}c}{{A`{AAnn}}}{{Af{AAn}{{Ad{{A`{AAnn}}}}}}InJ`}}{{{f{C`}}}{{l{Ah}}}}{f{{f{c}}}{}}0000000{{{f{Df}}}{{f{Dfc}}}{}}0000000{{{f{BH`}}}BH`}{{{f{C`}}}C`}{{{f{BEf}}}BEf}{{{f{BHd}}}BHd}{{f{f{Dfc}}}b{}}000{fb}000;{{}BH`}{{}C`}{Gd{{f{c}}}{}}000{{{f{BHf}}}f}1111{Gd{{f{Dfc}}}{}}0000000`{{BHhc}{}BHj}{Gdb}0000{{{f{DfBH`}}}b}111{{{f{BH`}}{f{BH`}}}d}{{{f{C`}}{f{C`}}}d}{{f{f{c}}}d{}}00000`{{{f{BHl}}}Jl}{{{f{BH`}}}{{f{{Bf{Jl}}}}}}{{{f{BEf}}}{{A`{AAnn}}}}{{{f{DfBH`}}}{{f{Df{Gj{Jl}}}}}}{{{f{BH`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{C`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BEf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BHd}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{B`}}BHd}Dd}{cc{}}000{{{Gj{{Hf{Jl{BHb{Jl}}}}}}}BH`}{{{Gj{{Hf{{Gj{Jl}}{Gj{{BHb{Jl}}}}}}}}}BH`}{{{Gj{{Gj{{Hf{Jl{BHb{Jl}}}}}}}}}BH`}33{BH`C`}4{BHnBHd}5{cBH`{{Ib{}{{Cj{{Hf{Jl{BHb{Jl}}}}}}}}}}{cBH`{{Il{}{{Cj{{Hf{Jl{BHb{Jl}}}}}}}}}}{{{f{C`}}Gd}BHl}{{{f{BEf}}}{{f{C`}}}}{{{f{DfBEf}}}{{f{DfC`}}}}{{{f{C`}}}{{l{Fb}}}}{{{f{BI`}}dd}{{A`{C`n}}}}{{{f{BEf}}}{{A`{AAnn}}}}{{{f{DfC`}}}{{f{DfBH`}}}}{{}Gd}0000000{{}c{}}0000000{C`BH`}1{{{f{BH`}}}}{BH`}301{{{f{BHl}}}d}{{{f{C`}}}d}{{{f{BH`}}}d}{{{f{BH`}}}{{BId{{BIb{{Gb{Jl}}}}{Gb{{BHb{Jl}}}}}}}}{{{f{C`}}}BIf}{{{f{BEf}}}{{Gj{Ff}}}}{{{f{BEf}}{Ch{{Hf{HbGd}}}}}{{Gj{Ff}}}}={{{f{BHl}}}Gd}{{{f{C`}}}Gd}?????{{{Gj{Jl}}{Gj{{BHb{Jl}}}}d}BH`}{{{f{AAn}}{Gj{Ff}}C`{Ch{{Gj{Dd}}}}}BEf}{{{f{DfBIf}}}Ch}{{{f{DfBIf}}Gd}Ch}{{{f{BEf}}c}{{A`{AAnn}}}{{Dn{AAn}{{Ad{{A`{AAnn}}}}}}InJ`}}{f}{{{f{C`}}}BHh}{{{f{BEf}}AjA@`}{{A`{AAnn}}}}{{BEfe}BEf{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{C`}}HbGd}BHf}{{{f{DfBH`}}}b}{{{f{DfC`}}}b}{{{f{BEf}}Bd}{{A`{AAnn}}}}{{{f{BEf}}}{{A`{AAnn}}}}{C`{{Gj{Jl}}}}0{BEfC`}{{{f{DfBEf}}}C`}{fc{}}000{fEj}{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{f{{A`{GlBC`}}}}{fAAl}0000000{C`C`}{{{f{C`}}}{{f{BH`}}}}{{{f{C`}}}{{f{{Gj{{AAb{Jl}}}}}}}}={{}c{}}0000000`````{{{f{BH`}}c}Ab{{Dn{{Hf{Jl{f{{BHb{Jl}}}}}}}{{Ad{Ch}}}}InJ`}}{{{f{BH`}}c}Ab{{Dn{{Hf{Jl{f{{BHb{Jl}}}}}}}{{Ad{}}}}InJ`}}{{{f{{Bf{{AAb{Jl}}}}}}c}Ab{{Dn{{AAb{Jl}}}{{Ad{Ch}}}}InJ`}}{{{f{{Bf{{AAb{Jl}}}}}}c}Ab{{Dn{{AAb{Jl}}}{{Ad{}}}}InJ`}}{{{f{{Bf{c}}}}e{Ch{BIh}}}{{ALn{c}}}{BIjBIl}{{D`{}{{Cj{{Hf{JlJl}}}}}}Jh}}{{{f{{Bf{c}}}}{f{Id}}e{Ch{BIh}}}{{ALn{c}}}{BIjBIl}{{D`{}{{Cj{{Hf{JlJl}}}}}}Jh}}{{{f{{l{c}}}}JlJl}{{l{c}}}Dl}{{{f{{Gj{{AAb{Jl}}}}}}{f{{Bf{{Cn{Cl}}}}}}}d}{{{f{BIn}}{f{C`}}}Ab}{{BJ`BJ`}BJ`}0`{{{f{BJb}}{f{AAn}}{f{C`}}}{{A`{Abn}}}}{{{f{BJb}}}{{A`{{f{Dd}}n}}}}````````````````````````````````````{{fh}b}00{{{f{DfBJd}}Jj}{{Ch{b}}}}{{{f{DfBJf}}{f{Jj}}}b}0{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{{{f{BJd}}}BJd}{{{f{BJf}}}BJf}{{{f{BEd}}}BEd}{{f{f{Dfc}}}b{}}00{fb}00{{{f{{Bf{c}}}}}El{{If{El}}}}{{}BEd}{Gd{{f{c}}}{}}00{Gd{{f{Dfc}}}{}}00{Gdb}00{{{f{BEd}}{f{BEd}}}d}{{f{f{c}}}d{}}00{{{f{BEd}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{Hf{{f{El}}Gd}}}BJd}1{{{Hf{{f{El}}Gd}}}BJf}2{{gGd}{{BDj{El}}}{{BAf{Dd}}}{{BAf{El}}}{{D`{}{{Cj{{Gj{{Hf{ce}}}}}}}}}}{{}Gd}00{{}c{}}00{BJdAb}{BJfAb}{{{f{El}}Gd}BJd}{{{f{El}}Gd}BJf}{{{Gj{Jj}}}BEd}{{{f{DfBJd}}Gd}Ab}{{{f{DfBJf}}Gd}Ab}{{{f{{Bf{BEd}}}}{Ch{Gd}}}{{A`{{BDj{El}}n}}}}0{{{f{{Bf{BEd}}}}{Ch{Gd}}}{{A`{{Gj{El}}n}}}}{fc{}}00{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAl}00==={{{f{{Bf{AAn}}}}}{{A`{AAnn}}}}{{{f{{Bf{AAn}}}}d}{{A`{AAnn}}}}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{AAn{f{{Bf{Dd}}}}{f{{Bf{Dd}}}}{Ch{Dd}}{f{AAn}}}AAn}{{BFhc}{{A`{AAnn}}}{{Dn{BJh{f{Df{BJl{BJj}}}}{f{Df{BJl{BJn}}}}}{{Ad{{A`{bn}}}}}}}}{{{f{BK`}}{f{{Bf{Jl}}}}dd}AAn}{{{f{BK`}}{f{AAn}}{f{Ab}}{f{Ab}}BKb}{{A`{AAnn}}}}`{{{f{B`}}{f{B`}}}Dd}{{BKd{N`{{Bf{Dd}}}}}BBj}{{{f{BGf}}Gd}{{Hf{BGfBGf}}}}{{{f{AHd}}}Aj}{{{f{BKf}}}Aj}{{{f{BKh}}{f{{Bf{A@h}}}}Mb}AAn}0{{{f{BKh}}{f{{Bf{A@h}}}}}AAn}0{{{f{BKj}}{Ch{{Gj{{f{B`}}}}}}{Ch{{f{B`}}}}d}{{A`{AAnn}}}}{{BFhd}BFh}{{{BKl{c}}{Ch{{N`{BKn}}}}}{{BKl{c}}}BL`}{{{f{Ab}}}{{A`{Abn}}}}{BBjBBj}{{{BLb{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBjBBj}}{{BLdBLd}}{{{f{BGh}}Hb{Ch{{f{AMh}}}}}{{A`{Hbn}}}}0{{{f{BLf}}{f{Ab}}}{{A`{Abn}}}}1{{BLhc}BFh{{Ij{{Bf{BBj}}}}}}6`{{BBjc}BBj{{BAf{Dd}}}}{{}BBj}{{BBjd}BBj}{{}BLj}{c{{A`{BBjn}}}{{Ij{{Bf{BBj}}}}}}{{{f{{N`{ce}}}}}{{f{e}}}A@fBLl}`{{BLnd}BLn}`{{{f{BM`}}}d}00`{{BBjc}BBj{{BAf{BBj}}}}{{{N`{BM`}}BMb}{{A`{BFhn}}}}75{{BBjcd}BBj{{BAf{BBj}}}}{{{f{DfACd}}}b}{{{f{DfACf}}}b}{{{f{DfACd}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACf}}{Ch{c}}}b{}}{{{f{DfACd}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACf}}c}b{}}{{{f{{AHh{}{{AHf{c}}}}}}g}{{AHh{}{{AHf{c}}}}}{}{}{{Dn{{Ch{e}}}{{Ad{{Ch{c}}}}}}E`}}{{BLhc{N`{{BDj{El}}}}}BFh{{Dn{AAn}{{Ad{{A`{AAnn}}}}}}InJ`}}{{BBjc{BMf{{N`{BMd}}}}}BBj{{Dn{Ff}{{Ad{{A`{{Ch{Ff}}n}}}}}}InJ`}}{{BBjBBjc{BMf{{N`{BMd}}}}}BBj{{Dn{FfFf}{{Ad{{A`{{Ch{Ff}}n}}}}}}InJ`}}{{{f{BBj}}{f{Dfc}}f}{{A`{BMhn}}}{{Af{{f{BBj}}f}{{Ad{{A`{BMhn}}}}}}}}{{{f{AHj}}{f{Dn}}}AHj}{{{f{AHj}}{f{Dn}}}{{l{c}}}Dl}{{BBjc{f{{Bf{BBj}}}}{BMf{{N`{BMd}}}}}BBj{{Dn{{f{Df{Bf{Ff}}}}}{{Ad{{A`{{Ch{Ff}}n}}}}}}InJ`}}{{BBjBMj{f{{Bf{BBj}}}}dd}BBj}{{ce{BMf{{N`{BMd}}}}d}BBj{{Dn{{f{Df{Bf{Ff}}}}}{{Ad{{A`{{Ch{Ff}}n}}}}}}InJ`}{{Ij{{Bf{BBj}}}}}}{{{f{{AHh{}{{AHf{c}}}}}}i{f{Df{Bf{g}}}}}b{}{}{}{{Dn{{Ch{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AHh{}{{AHf{c}}}}}}g}{{AHh{}{{AHf{c}}}}}{}{}{{Dn{e}{{Ad{c}}}}E`}}{{BBjBBjHbEl}BBj}{BGf{{N`{Cl}}}}{{{f{BMl}}}{{Ch{Gd}}}}{BMnBBj}{BN`BBj}{BBjBBj}3210{{{f{AHl}}F`}{{l{Fb}}}}{{BBjF`}BBj}{{{f{BKf}}F`}{{l{Fb}}}}{{cFh}BBj{{Ij{{Bf{BBj}}}}}}{{{f{AHl}}{f{{Bf{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}}{{{f{AHn}}}{{A`{{l{Fb}}n}}}}6{{{f{BKf}}}{{A`{{l{Fb}}n}}}}{cBBj{{BAf{BBj}}}}{{{f{BNb}}}{{f{{Bf{Oj}}}}}}``{BBjBMn}{eAN`{}{{Ib{}{{Cj{c}}}}}}{cBGf{{Ib{}{{Cj{{Ch{b}}}}}}}}{cBGf{{Ib{}{{Cj{b}}}}}}2{{AGde}ANb{}{{Ib{}{{Cj{c}}}}}}0{{AGdc}BGf{{Ib{}{{Cj{{Ch{b}}}}}}}}{{AGdc}BGf{{Ib{}{{Cj{b}}}}}}`{{{f{Df{BNd{c}}}}}{{A`{{BDj{BAj}}n}}}BNf}{{{f{BM`}}}{{f{AGf}}}}{{{f{BKf}}}{{f{AGf}}}}{{{f{BNh}}}{{f{AGf}}}}{{{f{BGf}}}{{f{AGf}}}}{{{f{DfBKf}}}{{f{DfAGf}}}}{{{f{DfBGf}}}{{f{DfAGf}}}}{{{f{Mj}}}Jj}{{{f{BNj}}}{{f{{l{Bb}}}}}}{{{f{BNl}}{Ch{{f{B`}}}}d}{{A`{{L`{KnKl}}n}}}}{{{f{BNl}}{Ch{{f{B`}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{BNl}}{Ch{{f{B`}}}}Lddd{Ch{{f{Dd}}}}{f{{l{An}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BNl}}{Ch{{f{B`}}}}Ldd{Ch{{f{Dd}}}}{f{{l{An}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{{N`{c}}}}}BNn{BO`A@f}}{{{f{BOb}}}{{f{{l{Ah}}}}}}{{{f{{N`{ce}}}}}{}A@fBLl}{{{f{{N`{c}}}}}NnBOd}{{{f{BOf}}}{{f{BBj}}}}{{{f{{N`{ce}}}}}{{f{c}}}A@fBLl}{{{f{ANh}}}{{f{El}}}}{{{f{BOh}}}{{f{Ab}}}}{{{f{DfBKf}}}{{A`{Gdn}}}}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}{{Ch{{f{{Bf{c}}}}}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{BOj}}}{{f{{l{An}}}}}}{{{Gj{BBj}}}BBj}{{{f{BNl}}{Ch{{f{B`}}}}d}{{A`{{L`{LnLb}}n}}}}{{{N`{{BOl{c}}e}}}{{N`{ce}}}{}BLl}{{{N`{{Bf{{BOl{c}}}}e}}}{{N`{{Bf{c}}e}}}{}BLl}{{{f{B`}}}BBj}{{BBj{Ch{Jl}}}BBj}{{{f{BOn}}}{{A`{{l{An}}n}}}}{{{f{BOn}}}{{l{An}}}}{{{f{{L`{LfLb}}}}{f{Ld}}{f{AMh}}}{{L`{LlLb}}}}`{{{BKl{{Cn{BL`}}}}{Ch{{N`{{BDj{El}}}}}}}{{A`{C@`n}}}}{{{C@b{c}}{f{{BDj{El}}}}}{{A`{{C@d{c}}n}}}C@f}{{{C@h{c}}{f{{BDj{El}}}}}{{A`{{C@j{c}}n}}}C@f}{{{C@l{c}}Gd}{{A`{C@nn}}}BL`}{{{CA`{c}}{f{{BDj{El}}}}}{{A`{{CAb{c}}n}}}C@f}{{{f{Df{BKl{c}}}}}{{A`{CAdn}}}BL`}`{BBjCAf}{{BBjCAhBBj}BBj}{{BLdBLd}}{{BLjBLj}BLj}{{{f{BKf}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfBLj}}BLj}b}210{{{f{BLj}}}Jl}04321{f{{f{c}}}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{N`{ce}}}}}{{f{c}}}A@fBLl}1111111111111{{{f{Df}}}{{f{Dfc}}}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{BFhJlcFh}BFh{{Ij{{Bf{BBj}}}}}}{BGf{{Cn{Cl}}}}{{{f{BKf}}}{{Ch{{Cn{Fl}}}}}}``{BFhBFh}```{{{f{CAj}}{f{Dd}}}{{A`{Ddn}}}}{{CAl{Gj{BBj}}}{{A`{BBjn}}}}{{{f{AMl}}{f{AMl}}c}{{A`{AMln}}}AOh}{{{f{BNh}}{f{Df{Bf{Ff}}}}}{{A`{{Ch{Ff}}n}}}}{{{f{CAn}}FfFf}{{A`{Ffn}}}}{{CAl{Gj{BBj}}}BBj}{{{f{CB`}}}b}{{BBjEl}BBj}{{{f{BKf}}{f{El}}Fn}{{A`{Abn}}}}{{BFh{CBb{{f{B`}}ElA@l}}d}BFh}{{{f{AI`}}{f{El}}}{{A`{Abn}}}}3{{{f{AOj}}{f{El}}}{{A`{Abn}}}}{{BFhEld}BFh}2{{{f{AI`}}{f{El}}Fn}{{A`{Abn}}}}{{{f{AOj}}{f{El}}Fn}{{A`{Abn}}}}{{BBjElFn}BBj}`{BBjCBd}{{{f{{N`{c}}}}}{{Ch{{f{ALj}}}}}{ALjA@f}}{BBjBBj}{{{f{CBf}}}{{A`{Abn}}}}1`{{{f{CBh}}}{{A`{{l{Kl}}n}}}}{{{f{BGf}}Gd}d}{{{f{CBj}}{f{Ab}}}{{A`{Abn}}}}{{{f{BKf}}{f{Ab}}}{{A`{Abn}}}}{{{f{CBj}}c}{{A`{Abn}}}Bj}{{{f{BKf}}}{{Gh{{Gb{{Cn{Cl}}}}{Gf{{f{{Cn{Cl}}}}}{{Ad{Gd}}}}}}}}``{{{f{BKf}}}{{f{{Gj{{Cn{Cl}}}}}}}}{{{f{DfBKf}}}{{f{Df{Gj{{Cn{Cl}}}}}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BBjBBjBBj}BBj}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BBjBBj}BBj}10{{{f{CB`}}}CB`}{{{f{BFh}}}BFh}{{{f{BLh}}}BLh}{{{f{BMb}}}BMb}{{{f{CBl}}}CBl}{{{f{CBn}}}CBn}{{{f{CC`}}}CC`}{{{f{CCb}}}CCb}{{{f{CCd}}}CCd}{{{f{BEh}}}BEh}{{{f{BFl}}}BFl}{{{f{CCf}}}CCf}{{{f{BGh}}}BGh}{{{f{CCh}}}CCh}{{{f{CCj}}}CCj}{{{f{CCl}}}CCl}{{{f{CCn}}}CCn}{{{f{AB`}}}AB`}{{{f{A@h}}}A@h}{{{f{CD`}}}CD`}{{{f{CDb}}}CDb}{{{f{CDd}}}CDd}{{{f{CDf}}}CDf}{{{f{CDh}}}CDh}{{{f{BKb}}}BKb}{{{f{CDj}}}CDj}{{{f{CDl}}}CDl}{{{f{CDn}}}CDn}{{{f{CE`}}}CE`}{{{f{CEb}}}CEb}{{{f{CEd}}}CEd}{{{f{CEf}}}CEf}{{{f{CEh}}}CEh}{{{f{CEj}}}CEj}{{{f{CEl}}}CEl}{{{f{CEn}}}CEn}{{{f{CF`}}}CF`}{{{f{CFb}}}CFb}{{{f{CFd}}}CFd}{{{f{CFf}}}CFf}{{{f{CFh}}}CFh}{{{f{CFj}}}CFj}{{{f{CFl}}}CFl}{{{f{CFn}}}CFn}{{{f{CG`}}}CG`}{{{f{CGb}}}CGb}{{{f{CGd}}}CGd}{{{f{CGf}}}CGf}{{{f{CGh}}}CGh}{{{f{CGj}}}CGj}{{{f{CGl}}}CGl}{{{f{CGn}}}CGn}{{{f{CH`}}}CH`}{{{f{BOf}}}BOf}{{{f{BBj}}}BBj}{{{f{CHb}}}CHb}{{{f{CAh}}}CAh}{{{f{{BMf{c}}}}}{{BMf{c}}}Jf}{{{f{CHd}}}CHd}{{{f{CHf}}}CHf}{{{f{CHh}}}CHh}{{{f{CHj}}}CHj}{{{f{CHl}}}CHl}{{{f{CHn}}}CHn}{{{f{BMj}}}BMj}{{{f{CI`}}}CI`}{{{f{CIb}}}CIb}{{{f{CId}}}CId}{{{f{CIf}}}CIf}{{{f{CIh}}}CIh}{{{f{CIj}}}CIj}{{{f{CIl}}}CIl}{{{f{CIn}}}CIn}{{{f{CJ`}}}CJ`}{{{f{CJb}}}CJb}{{{f{BLd}}}BLd}{{{f{CAl}}}CAl}{{{f{BLj}}}BLj}{{{f{CJd}}}CJd}{{{f{CJf}}}CJf}{{{f{{N`{ce}}}}}{{N`{ce}}}A@f{BLlJf}}{{{f{CJh}}}CJh}{{{f{CJj}}}CJj}{{{f{A@b}}}A@b}{{{f{BGb}}}BGb}{{{f{BGf}}}BGf}{{{f{Mj}}}Mj}{{{f{BAj}}}BAj}{{{f{A@`}}}A@`}{{{f{BIh}}}BIh}{{{f{CJl}}}CJl}{{{f{CJn}}}CJn}{{{f{CK`}}}CK`}{{{f{BKf}}}{{N`{BKf}}}}{{f{f{Dfc}}}b{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{fb}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{f{CKb}}}{{Ch{{f{CKd}}}}}}{{{f{CBl}}}{{Ch{{f{CKd}}}}}}{{{f{CC`}}}{{Ch{{f{CKd}}}}}}``{{{f{BGh}}{f{BGh}}}B@l}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}B@l{CKfA@f}BLl}{{{f{{Bf{BBj}}}}}BBj}{{BLnCDj}BLn}{{{f{CDj}}{f{CDl}}}d}`{{{f{{Bf{Ff}}}}}{{A`{Ffn}}}}{cBBj{{BAf{Dd}}}}{BFh{{A`{AAnn}}}}{c{{A`{{Gj{AAn}}n}}}{{Il{}{{Cj{BFh}}}}}}{B@ne{}{{AN`{c}}ALf}}0{{B@nAGd}e{}{{ANb{c}}ALf}}0{{ADnDd}{{l{c}}}Dl}{{AE`{f{{l{c}}}}}{{l{c}}}Dl}10{{AE`DdEl}{{l{c}}}Dl}0{BFh{{A`{CB`n}}}}{{{f{DfBFh}}}{{A`{{N`{{BDj{El}}}}n}}}}{eBBj{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{CJd}}Gd}CKh}``{{{f{BKj}}{Gj{{f{B`}}}}{Ch{{f{B`}}}}d}{{A`{AAnn}}}}`{{f{f{c}}}B@l{}}0{BLjBLj}```{{{f{CGh}}}{{A`{{N`{{BDj{El}}}}n}}}}{{cCJj}{{A`{BFhn}}}{{Ij{{Bf{BFh}}}}}}{{{f{BOn}}{f{{l{An}}}}}{{l{An}}}}{{ed}{{A`{BBjn}}}{{BAf{BBj}}Jf}{{Ij{{Bf{c}}}}}}{{{f{CKb}}{Gj{BFh}}}{{A`{BFhn}}}}{{{f{CBl}}{Gj{BFh}}}{{A`{BFhn}}}}44{e{{A`{BBjn}}}{{BAf{BBj}}Jf}{{Ij{{Bf{c}}}}}}{{c{f{B`}}d}BBj{{Ij{{Bf{BBj}}}}}}{{BMnc}BBj{{BAf{BBj}}}}{{{f{CKj}}{f{{Bf{Bd}}}}}{{l{Bl}}}}{{{f{BOn}}{f{B`}}d}{{A`{{l{Bl}}n}}}}{{BN`c}BBj{{BAf{BBj}}}}{{{f{BLj}}BLj}d}{{{f{CKj}}{f{{l{Bb}}}}}{{l{Bl}}}}{{{f{BOn}}{f{{l{An}}}}dd}{{A`{{l{Bl}}n}}}}{{{f{BOn}}{f{B`}}}{{A`{{l{Bl}}n}}}}{{{f{Cl}}{f{AGd}}}{{Cn{Cl}}}}{{{f{Ab}}Gd}{{A`{{l{Fb}}n}}}}{BFhBFh}{{{CKl{c}}}{{A`{Gdn}}}BL`}{BBjBBj}{{{f{BOn}}{f{B`}}d}{{A`{{l{Fb}}n}}}}{{{f{BOn}}{f{{l{An}}}}d}{{A`{{l{Fb}}n}}}}{{{f{ANf}}Bd{Ch{Bd}}{Ch{{f{CDf}}}}Bdd}{{A`{Gdn}}}}{{{f{{Bf{Bd}}}}Bd{Ch{Bd}}{Ch{{f{CDf}}}}Bdd}{{A`{Gdn}}}}{{{AOd{B`}}}El}{{{f{BK`}}{f{{Bf{A@h}}}}d}AAn}`{{BFhBFh{Ch{Dd}}}BFh}{{{f{CKn}}{f{AAn}}{Ch{Dd}}{Ch{{Hf{HbGd}}}}}{{A`{AAnn}}}}{{{f{CKn}}{f{AAn}}{Ch{{Hf{HbGd}}}}d}{{A`{{Hf{AAnAAn}}n}}}}{{{f{Ab}}d}{{A`{Abn}}}}{{BBjd}BBj}{{BBjced}BBj{{Dn{FfFf}{{Ad{{A`{{Ch{Ff}}n}}}}}}InJ`Jf}{{Ij{{Bf{BBj}}}}}}212121{{ce}BBj{{Dn{FfFf}{{Ad{{A`{{Ch{Ff}}n}}}}}}InJ`Jf}{{Ij{{Bf{BBj}}}}}}32{{CL`BBjGdd}BBj}```{{BBjBBjBGhCCh}BBj}`{CIbBBj}`{{BBjBBjBGhCCh{Ch{Ld}}{Ch{Dd}}}BBj}0{AMfHb}00{{{f{CLb}}}{{l{Nd}}}}{{{f{CLd}}}{{l{Nd}}}}{{{f{CBh}}}{{A`{{l{Nd}}n}}}}`{{{f{CLf}}}{{l{Lb}}}}{{{f{BGh}}}Hb}`{{{f{BGh}}}d}```{{}b}{cbBLl}{{}BFh}{{}BMb}{{}CBn}{{}CCb}{{}CLh}{{}BEh}{{}BFl}{{}CCl}{{}CD`}{{}CDb}{{}CDd}{{}BKb}{{}CDj}{{}CDn}{{}CE`}{{}CEb}{{}CEd}{{}CEf}{{}CEj}{{}CEl}{{}CEn}{{}CFb}{{}CFd}{{}CFj}{{}CFl}{{}CFn}{{}CG`}{{}CGh}{{}BBj}{{}{{BMf{{N`{BMd}}}}}}{{}{{BMf{{N`{CLj}}}}}}{{}{{BMf{{N`{CAn}}}}}}{{}CI`}{{}CIb}{{}CId}{{}CIh}{{}CIj}{{}CIl}{{}CIn}{{}CJb}{{}BLj}{{}{{N`{B`}}}}{{}{{N`{c}}}CLl}{{}{{N`{CLn}}}}{{}{{N`{{Bf{c}}}}}{}}{{}CJh}{{}CJj}{{}A@b}{{}BGb}{{}BAj}{{}A@`}`{{}{{AAj{{Gj{AB`}}{Gj{A@h}}}}}}{Gd{{f{c}}}{}}0{{{f{{AMb{c}}}}}f{}}111111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{f{{BMf{c}}}}}f{}}22222222222222222222222{{{f{{N`{ce}}}}}{{f{c}}}A@fBLl}33333333333333{Gd{{f{Dfc}}}{}}0{{{f{Df{AMb{c}}}}}{{f{Df}}}{}}1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111```{{{f{CGh}}}{{A`{Ejn}}}}{{{f{BFh}}}{{A`{Ejn}}}}0001{{{f{{N`{c}}}}}{{f{B`}}}{ALjA@f}}{{{f{BAj}}c}{{A`{CM`n}}}{{Jd{}{{Cj{{f{CMb}}}}}}}}```{{{f{Ab}}HbCMd}{{A`{Abn}}}}{{BN`HbCMd}BBj}{{BBjHbCMd}BBj}{{BLjBLj}BLj}{{{f{CGh}}}{{A`{{`{BDh}}n}}}}``{{{BLb{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBjBBj}}{{{f{BLf}}{f{Ab}}}{{A`{Abn}}}}{{BBjc}BBj{{BAf{BBj}}}}{{{N`{AGfc}}}{{A`{{N`{ec}}{N`{AGfc}}}}}BLl{AGfInJ`}}{{{N`{AGfc}}}{{N`{ec}}}BLl{AGfInJ`}}{{{f{{N`{ce}}}}}{{CMf{ce}}}A@f{JfBLl}}{Gdb}000000{{{f{DfCB`}}}b}1{{BFhe}BFh{{BAf{BLd}}}{{Ib{}{{Cj{c}}}}}}22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222{{{f{Df{N`{ce}}}}}bA@fBLl}33333333333333{BBjBBj}2{{BFh{Ch{{Gj{BBj}}}}}BFh}1{{{f{BKf}}}Ab}{{{f{{L`{LfLb}}}}{f{Ld}}{f{AMh}}}{{L`{LlLb}}}}`{BBjCMh}{{{f{AOj}}}{{f{El}}}}{{{f{BKf}}}{{f{El}}}}{{{f{BGf}}}{{f{AGd}}}}{{{f{Mj}}}{{f{El}}}}{{{f{BAj}}}{{f{AGd}}}}``{{{f{El}}}BBj}{cBBj{{Ij{{Bf{El}}}}}}`{CIdBBj}{{}CI`}{{}BLj}{fc{{BAd{BAb}}}}0`{{{f{CKj}}{f{{Bf{Bd}}}}}{{l{Bl}}}}{{{f{CKj}}{f{{l{Bb}}}}}{{l{Bl}}}}{{BGh{f{El}}{f{B`}}}{{A`{bn}}}}{{BGh{Ch{{f{B`}}}}{f{B`}}}{{A`{bn}}}}{{{f{{BDj{c}}}}{f{{BDj{c}}}}}{{A`{bn}}}{}}{{{f{CMj}}{f{B`}}}{{A`{bn}}}}`{{{f{CCd}}{f{CCd}}}d}{{{f{BEh}}{f{BEh}}}d}{{{f{BFl}}{f{BFl}}}d}{{{f{BGh}}{f{BGh}}}d}{{{f{CCh}}{f{CCh}}}d}{{{f{CCj}}{f{CCj}}}d}{{{f{CCl}}{f{CCl}}}d}{{{f{AB`}}{f{AB`}}}d}{{{f{CD`}}{f{CD`}}}d}{{{f{CDb}}{f{CDb}}}d}{{{f{CDd}}{f{CDd}}}d}{{{f{CDf}}{f{CDf}}}d}{{{f{CDh}}{f{CDh}}}d}{{{f{BKb}}{f{BKb}}}d}{{{f{CDj}}{f{CDj}}}d}{{{f{CDl}}{f{CDl}}}d}{{{f{CDn}}{f{CDn}}}d}{{{f{CE`}}{f{CE`}}}d}{{{f{CEb}}{f{CEb}}}d}{{{f{CEd}}{f{CEd}}}d}{{{f{CEf}}{f{CEf}}}d}{{{f{CEh}}{f{CEh}}}d}{{{f{CEj}}{f{CEj}}}d}{{{f{CEl}}{f{CEl}}}d}{{{f{CEn}}{f{CEn}}}d}{{{f{CF`}}{f{CF`}}}d}{{{f{CFb}}{f{CFb}}}d}{{{f{CFd}}{f{CFd}}}d}{{{f{CFf}}{f{CFf}}}d}{{{f{CFh}}{f{CFh}}}d}{{{f{CFj}}{f{CFj}}}d}{{{f{CFl}}{f{CFl}}}d}{{{f{CFn}}{f{CFn}}}d}{{{f{CG`}}{f{CG`}}}d}{{{f{CGb}}{f{CGb}}}d}{{{f{CGd}}{f{CGd}}}d}{{{f{CGf}}{f{CGf}}}d}{{{f{BOf}}{f{BOf}}}d}{{{f{BBj}}{f{BBj}}}d}{{BBjc}BBj{{BAf{BBj}}}}{{{f{CHb}}{f{CHb}}}d}{{{f{CAh}}{f{CAh}}}d}{{{f{{BMf{{N`{c}}}}}}{f{{BMf{{N`{c}}}}}}}dA@f}{{{f{{BMf{Ab}}}}{f{{BMf{Ab}}}}}d}{{{f{CHd}}{f{CHd}}}d}{{{f{CHf}}{f{CHf}}}d}{{{f{CHh}}{f{CHh}}}d}{{{f{CHj}}{f{CHj}}}d}{{{f{CHl}}{f{CHl}}}d}{{{f{CHn}}{f{CHn}}}d}{{{f{CM`}}{f{CM`}}}d}{{{f{BMj}}{f{BMj}}}d}{{{f{CI`}}{f{CI`}}}d}{{{f{CIf}}{f{CIf}}}d}{{{f{CIh}}{f{CIh}}}d}{{{f{CIj}}{f{CIj}}}d}{{{f{CIl}}{f{CIl}}}d}{{{f{CIn}}{f{CIn}}}d}{{{f{CJ`}}{f{CJ`}}}d}{{{f{CJb}}{f{CJb}}}d}{{{f{BLd}}{f{BLd}}}d}{{{f{CJf}}{f{CJf}}}d}{{{f{{N`{Cl}}}}{f{Cl}}}d}{{{f{{N`{CMl}}}}{f{CMl}}}d}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{CMnA@f}BLl}{{{f{CJh}}{f{CJh}}}d}{{{f{CJj}}{f{CJj}}}d}{{{f{A@b}}{f{A@b}}}d}{{{f{BGb}}{f{BGb}}}d}{{{f{BGf}}{f{{f{Cl}}}}}d}{{{f{BGf}}{f{BGf}}}d}{{{f{Mj}}{f{Mj}}}d}{{{f{BAj}}{f{BAj}}}d}{{{f{A@`}}{f{A@`}}}d}{{{f{BIh}}{f{BIh}}}d}{{{f{CJl}}{f{CJl}}}d}{{{f{CJn}}{f{CJn}}}d}{{{f{CK`}}{f{CK`}}}d}{{BBjc}BBj{{BAf{BBj}}}}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}0{{f{f{c}}}d{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CN`BBjd}BBj}``{{BBjc}BBj{{BG`{Dd}}}}{{BBjc}BBj{{Ij{{Bf{El}}}}}}{{{f{Df}}c}{{A`{{f{Dfe}}BDf}}}CNb{}}{{{f{{Bf{CNd}}}}d{Ch{{f{CKd}}}}}{{A`{{N`{{Bf{CNd}}}}n}}}}{{{f{{Bf{CNd}}}}d{Ch{{f{CKd}}}}d}{{A`{{Hf{{N`{{Bf{CNd}}}}Gd}}n}}}}{{{f{{Bf{c}}}}{f{{Bf{c}}}}}d{{Ij{ANf}}}}{{{f{BFh}}d}{{A`{Ejn}}}}{{BFhe}BFh{{BAf{BLd}}Jf}{{Ij{{Bf{c}}}}}}{{{f{AIf}}}{{A`{Abn}}}}{BBjBBj}{{{f{AIf}}}{{A`{{Hf{Ab{Hd{Hb}}}}n}}}}`{{{f{DfBLj}}c}b{{Ib{}{{Cj{BLj}}}}}}{{BBjBBjBBj}BBj}{{{f{BOn}}{f{{l{An}}}}Gd}{{A`{{l{An}}n}}}}{A@h{{Hf{JlJl}}}}{{{f{BOn}}{f{B`}}}{{A`{{l{Ah}}n}}}}{{{f{BOn}}{f{{l{An}}}}}{{A`{{l{Ah}}n}}}}{{{f{BOn}}{f{B`}}{f{El}}}{{A`{Abn}}}}{{{f{ACd}}}d}{{{f{CB`}}}{{Ch{{A`{AAnn}}}}}}{{BFhGd}{{A`{AAnn}}}}{{{f{CB`}}}{{A`{AAnn}}}}{{{f{ACd}}}{{f{Oj}}}}{{{f{BKf}}}{{Eb{Oj}}}}{{BKdHb}BBj}{{BKd{f{B`}}}BBj}{{BKde}BBj{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{BGf}}}{{f{{Bf{BAj}}}}}}`{{BFhc}BFh{{BAf{BBj}}}}{{BBjc}BBj{{BAf{BBj}}}}`10{{BBjAIb}BBj}{{{f{AIh}}c}{{A`{AIhn}}}{}}{{{f{AIj}}{f{{l{Bl}}}}}{{A`{{l{c}}n}}}Dl}{{{f{BKf}}{f{{l{Bl}}}}}{{A`{Abn}}}}{{BFhBBj}BFh}5{{{f{BOn}}{f{B`}}d}{{A`{{l{Fb}}n}}}}{{{f{BOn}}{f{{l{An}}}}dd}{{A`{{l{Fb}}n}}}}{{{f{BOn}}{f{B`}}}{{A`{{l{Fb}}n}}}}{CNf{{A`{AAnn}}}}{{{f{DfCNh}}{f{DfAAn}}}{{A`{bn}}}}{ACf{{l{c}}}Dl}{{AOh{f{{l{Fb}}}}{f{{l{Fb}}}}}{{A`{{l{Fb}}n}}}}{BLnBFh}{{{BKl{c}}}{{A`{AAnn}}}BL`}{CKb{{A`{BFhn}}}}{CBl{{A`{BFhn}}}}{CC`{{A`{BFhn}}}}{{{f{Df{C@b{c}}}}{f{DfAAn}}}{{A`{bn}}}C@f}{{{CNj{c}}}{{A`{AAnn}}}BL`}{{{BNd{c}}}{{A`{AAnn}}}BNf}{{{f{Df{CNl{c}}}}{f{DfAAn}}}{{A`{bn}}}C@f}{{{f{Df{C@h{c}}}}{f{DfAAn}}}{{A`{bn}}}C@f}{{{f{Df{CNn{c}}}}{f{DfAAn}}}{{A`{bn}}}C@f}{{{CO`{c}}}{{A`{AAnn}}}BL`}{{{CKl{c}}}{{A`{AAnn}}}BL`}{{{C@l{c}}}{{A`{AAnn}}}BL`}{{{CA`{c}}{f{DfAAn}}}{{A`{Kfn}}}C@f}{{{f{DfACd}}}{{l{Ah}}}}=<;{{{CNj{c}}{Ch{{N`{BKn}}}}d}{{A`{AAnn}}}BL`}{{{f{C@n}}Gd}d}{{}BBj}{BFhBFh}{BN`BBj}{BBjBBj}`0```{{}{{BMf{{N`{BMd}}}}}}{{{f{CBf}}}{{A`{Abn}}}}2{{BBjBBj}BBj}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Df{N`{AFj}}}}}{{A`{bBDf}}}}{{{f{BNh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CAn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CAj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CCd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BEh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BFl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CCf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BGh}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CCh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CCj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CCl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{AB`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{A@h}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BM`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CD`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BKb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{COb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDl}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CDn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CE`}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CEb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CF`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CG`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CGb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CGd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CGf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BBj}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CHb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CAh}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{{BMf{c}}}}{f{DfHl}}}{{A`{bHn}}}{}}{{{f{CHd}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CHf}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CHh}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CHj}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CHl}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CHn}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CM`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BMj}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CI`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CIb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CId}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CIf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CIh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CIj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CIl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CIn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJ`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BLd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CAl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BLj}}{f{DfHl}}}{{A`{bHn}}}}0000{{{f{CJd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{N`{ce}}}}{f{DfHl}}}{{A`{bHn}}}{BDhA@f}BLl}{{{f{{N`{ce}}}}{f{DfHl}}}{{A`{bHn}}}A@fBLl}{{{f{{N`{ce}}}}{f{DfHl}}}{{A`{bHn}}}{AGhA@f}BLl}{{{f{CJh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{A@b}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BGb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BGf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Mj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BAj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{A@`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BIh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CK`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{B`}}BHd}Dd}```{{BBjce}BBj{{Dn{FfFf}{{Ad{{A`{{Ch{Ff}}n}}}}}}InJ`Jf}{{Ij{{Bf{BBj}}}}}}{{BLnd}BLn}``{{{f{B`}}c}{{A`{BBjn}}}{{Ij{{Bf{BBj}}}}}}{{BBj{Ch{Jl}}}BBj}{cc{}}0000000{CGhBFh}{BLhBFh}22222222222222222222222222222222222{JlAB`}3333333{{{f{B`}}}CDf}44{CDlBKb}555555555555555555555555555555{JlBBj}{KfBBj}{dBBj}{ObBBj}{NfBBj}{NnBBj}{KdBBj}{OfBBj}{BdBBj}{BOfBBj}{AjBBj}{{{f{B`}}}BBj}{cc{}}{HbBBj}11{CHf{{BMf{{N`{BNh}}}}}}{CHn{{BMf{{N`{BNh}}}}}}{COd{{BMf{{N`{BNh}}}}}}{COf{{BMf{{N`{BNh}}}}}}{BMj{{BMf{{N`{BNh}}}}}}{COh{{BMf{{N`{BNh}}}}}}{COj{{BMf{{N`{BNh}}}}}}{CHh{{BMf{{N`{BNh}}}}}}9{CHl{{BMf{{N`{BNh}}}}}}{CHd{{BMf{{N`{BNh}}}}}};;;;;;{COlCM`}<<{CHdBMj}{CHlBMj}{COfBMj}{CHfBMj}{cc{}}00000{CInCIl}11111{DdBLd}{BBjBLd}{{{f{B`}}}BLd}{EjBLd}5555{{{f{{Bf{c}}}}}{{N`{{Bf{c}}}}}Jf}{Ej{{N`{B`}}}}{COn{{N`{CLn}}}}{{{f{CLn}}}{{N`{CLn}}}}{{{AAb{c}}}{{N`{{Bf{c}}}}}{}}{{{N`{B`}}}{{N`{{Bf{Bd}}}}}};{D@`c{}}{{{f{B`}}}{{N`{B`}}}}{D@b{{N`{ANd}}}}{{{f{ANd}}}{{N`{ANd}}}}{CNd{{N`{ANf}}}}{{{f{ANf}}}{{N`{ANf}}}}{{{Eb{c}}}{{N`{c}}}{D@dA@f}}{{{Gj{ce}}}{{N`{{Bf{c}}e}}}{}{BLlJf}}{{{Cn{ce}}}{{N`{ce}}}A@fBLl}{Gl{{N`{B`}}}}{c{{N`{c}}}{}}{cc{}}0000{D@fBGf}{D@hBGf}2{ObMj}{NfMj}{HbMj}5{KfMj}{NnMj}{OfMj}{AjMj}{JlMj}{KdMj}{BdMj}<<<<<<{{{f{{BDj{BAj}}}}}D@j}{Jl{{Ch{BLj}}}}{JlBLj}00{{c{Ch{Id}}}D@l{}}{{{D@n{Hb}}{D@n{Bd}}{Ch{Id}}}DA`}{{{D@n{Hb}}{D@n{Bd}}{Ch{Id}}}DAb}{c{{AMb{{l{Bl}}}}}{{Ib{}{{Cj{d}}}}}}{c{{AMb{{l{e}}}}}{{Ib{}{{Cj{}}}}}Al}{cBLj{{Ib{}{{Cj{BLj}}}}}}{e{{N`{{Bf{c}}}}}{}{{Ib{}{{Cj{c}}}}}}{{gGd}{{DAd{Hb}}}Ij{{Ib{}{{Cj{{Ch{c}}}}}}}{{Ib{}{{Cj{{Ch{e}}}}}}}}0{e{{DAd{Hb}}}{{Ib{}{{Cj{{Ch{d}}}}}}}{{Ib{}{{Cj{{Ch{c}}}}}}}}{{Dde}ADj{}{{D`{}{{Cj{{Ch{c}}}}}}}}{{gAGd}{{DAd{Hb}}}BIl{{Ib{}{{Cj{{Ch{c}}}}}}}{{Ib{}{{Cj{{Ch{e}}}}}}}}673{{Dde}ADj{}{{D`{}{{Cj{c}}}}}}{{{f{B`}}}{{Ch{BLj}}}}{c{{AMb{{l{e}}}}}{{Il{}{{Cj{}}}}}Al}{e{{N`{{Bf{c}}}}}In{{Il{}{{Cj{c}}}}}}`{c{{A`{{CKl{AFj}}n}}}{{BAf{CNd}}}}{{}{{N`{c}}}A@f}{c{{N`{ec}}}BLlA@f}{{Dd{f{{Bf{c}}}}}ADj{}}{{Dd{f{{Bf{{Ch{c}}}}}}}ADj{}}{{{f{B`}}}{{A`{DAf}}}}{c{{AMb{{l{Bl}}}}}{{Jh{}{{Cj{d}}}}}}{c{{AMb{{l{e}}}}}{{Jh{}{{Cj{}}}}}Al}{El{{BMf{{N`{BMd}}}}}}{{Ddc}DAh{}}{{{Gj{c}}AGd}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{Gj{c}}AGd}{{ALf{}{{ANj{e}}{ANl{c}}{ANn{g}}}}}{AO`{AOb{e}}}Jf{{H`{}{{Cj{e}}}}JhInJ`}}`{{DdcGd}AIl{}}{{GdcAGd}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{}CI`}{{BFhBFhcc}BFh{{BAf{BBj}}}}{{{f{DAj}}{f{AAn}}ei}{{A`{AAnn}}}{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}{{BAf{Dd}}}{{Ib{}{{Cj{g}}}}}}{{DdGd}AIn}{{GdAGd}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{GdAGd}BGf}``{{BBjc{BMf{{N`{BMd}}}}DAl}BBj{{Dn{Ff}{{Ad{{A`{{Ch{Ff}}n}}}}}}InJ`}}`{{BBjc}BBj{{BAf{BBj}}}}{{BBjGdGd}BBj}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DAnA@f}BLl}{{{f{BKf}}Gd}{{A`{Jjn}}}}{{BMnBBjd}BBj}{{BN`BBjd}BBj}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}Gd}{{Ch{c}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}6{{{f{AJ`}}Gd}{{A`{Jjn}}}}{{{f{AOj}}Gd}{{A`{Jjn}}}}{{{f{AJ`}}Gd}Jj}{{{f{AOj}}Gd}Jj}{CBdBBj}{{{f{BFh}}}BLj}{{{f{CJf}}}El}{{}El}{{{f{CCn}}HbCCh{Ch{{f{AMh}}}}}{{A`{CCfn}}}}00{{{f{CLj}}{f{{BDj{El}}}}DB`{f{Oj}}{f{Oj}}}{{Ch{Oj}}}}{{{f{BMd}}{f{{BDj{El}}}}DB`{f{{Bf{Oj}}}}}{{A`{Ojn}}}}{{{f{D@j}}{f{B`}}}{{Ch{Oj}}}}{{{f{AGd}}}{{f{{Bf{BAj}}}}}}{{{f{BNb}}}Gd}{{{f{{Bf{Bd}}}}}{{Ch{Gd}}}}{{{f{Df{C@l{c}}}}}{{A`{{f{{N`{CJd}}}}n}}}BL`}{{{f{BKf}}}{{Ch{{Nb{Fl}}}}}}{{{f{Df{N`{ce}}}}}{{Ch{{f{Dfc}}}}}A@fBLl}{{{f{Df{N`{ce}}}}}{{f{Dfc}}}A@fBLl}{{{f{BKf}}Gd}{{Ch{{f{K`}}}}}}{{{f{BKf}}GdGd}{{Ch{{f{K`}}}}}}{{{f{BNh}}}{{Ch{{BMf{{N`{BMd}}}}}}}}{{{f{CCn}}CCfCChLd{Ch{{f{AMh}}}}CCl}{{A`{DBbn}}}}{{{f{CD`}}}{{N`{CDb}}}}{{{f{Dfc}}}{{A`{DBdn}}}{BNfBL`A@f}}{{{f{COb}}{f{{BDj{El}}}}}{{A`{{N`{{BDj{El}}}}n}}}}{{{f{BBd}}Gd}Jj}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}Gd}{{Ch{c}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{BKf}}Gd}Jj}{{{f{CKb}}}d}{{{f{CBl}}}d}`{{BFhe}BLh{{BAf{BBj}}Jf}{{Ij{{Bf{c}}}}}}{{{f{DBf}}{Gj{Ff}}{f{BEh}}}{{A`{{Hf{Ff{Gj{Ff}}C`}}n}}}}{{BFhBBjcBEh}BLh{{Ij{{Bf{BBj}}}}}}2{{BGhBGh{f{{Bf{Hb}}}}CChLd{Ch{AMh}}}{{A`{{Gj{{AAb{Jl}}}}n}}}}{{CCn{f{{Bf{Hb}}}}CChLd{f{{Ch{Dd}}}}ddCCl}{{Hf{{Gj{{AAb{Jl}}}}{Gj{Hb}}{Gj{Hb}}}}}}{{{f{BI`}}dd}{{A`{C`n}}}}{{{f{{AJb{}{{Cj{c}}}}}}e}c{}{}}{{BBjc}BBj{{BAf{BBj}}}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DAnA@f}BLl}21`{{{f{BKf}}}d}{{{f{BEh}}{f{Dfc}}}bADl}{{{f{BFl}}{f{Dfc}}}bADl}{{{f{BGh}}{f{Dfc}}}bADl}{{{f{CCh}}{f{Dfc}}}bADl}{{{f{CCj}}{f{Dfc}}}bADl}{{{f{CCl}}{f{Dfc}}}bADl}{{{f{CD`}}{f{Dfc}}}bADl}{{{f{CDb}}{f{Dfc}}}bADl}{{{f{CDd}}{f{Dfc}}}bADl}{{{f{CDf}}{f{Dfc}}}bADl}{{{f{CDh}}{f{Dfc}}}bADl}{{{f{BKb}}{f{Dfc}}}bADl}{{{f{CDj}}{f{Dfc}}}bADl}{{{f{CDl}}{f{Dfc}}}bADl}{{{f{CDn}}{f{Dfc}}}bADl}{{{f{CE`}}{f{Dfc}}}bADl}{{{f{CEb}}{f{Dfc}}}bADl}{{{f{CEd}}{f{Dfc}}}bADl}{{{f{CEf}}{f{Dfc}}}bADl}{{{f{CEh}}{f{Dfc}}}bADl}{{{f{CEj}}{f{Dfc}}}bADl}{{{f{CEl}}{f{Dfc}}}bADl}{{{f{CEn}}{f{Dfc}}}bADl}{{{f{CF`}}{f{Dfc}}}bADl}{{{f{CFb}}{f{Dfc}}}bADl}{{{f{CFd}}{f{Dfc}}}bADl}{{{f{CFf}}{f{Dfc}}}bADl}{{{f{CFh}}{f{Dfc}}}bADl}{{{f{CFj}}{f{Dfc}}}bADl}{{{f{CFl}}{f{Dfc}}}bADl}{{{f{CFn}}{f{Dfc}}}bADl}{{{f{CG`}}{f{Dfc}}}bADl}{{{f{CGb}}{f{Dfc}}}bADl}{{{f{CGd}}{f{Dfc}}}bADl}{{{f{CGf}}{f{Dfc}}}bADl}{{{f{BOf}}{f{Dfc}}}bADl}{{{f{BBj}}{f{Dfc}}}bADl}{{{f{CHb}}{f{Dfc}}}bADl}{{{f{CAh}}{f{Dfc}}}bADl}{{{f{CHd}}{f{Dfc}}}bADl}{{{f{CHf}}{f{Dfc}}}bADl}{{{f{CHh}}{f{Dfc}}}bADl}{{{f{CHj}}{f{Dfc}}}bADl}{{{f{CHl}}{f{Dfc}}}bADl}{{{f{CHn}}{f{Dfc}}}bADl}{{{f{BMj}}{f{Dfc}}}bADl}{{{f{CI`}}{f{Dfc}}}bADl}{{{f{CIf}}{f{Dfc}}}bADl}{{{f{CIh}}{f{Dfc}}}bADl}{{{f{CIj}}{f{Dfc}}}bADl}{{{f{CIl}}{f{Dfc}}}bADl}{{{f{CIn}}{f{Dfc}}}bADl}{{{f{CJ`}}{f{Dfc}}}bADl}{{{f{CJb}}{f{Dfc}}}bADl}{{{f{BLd}}{f{Dfc}}}bADl}{{{f{CJf}}{f{Dfc}}}bADl}{{{f{{N`{ce}}}}{f{Dfg}}}b{DBhA@f}BLlADl}{{{f{CJh}}{f{Dfc}}}bADl}{{{f{CJj}}{f{Dfc}}}bADl}{{{f{BGb}}{f{Dfc}}}bADl}{{{f{BAj}}{f{Dfc}}}bADl}{{{f{A@`}}{f{Dfc}}}bADl}{{{f{CK`}}{f{Dfc}}}bADl}{{{f{DBj}}{f{Ab}}CE`d}{{A`{{Hf{{Hf{{Gj{Jl}}{Gj{Jl}}}}d}}n}}}}{{{f{DBj}}{f{Ab}}CE`d}{{A`{{Hf{{ALn{Jl}}{ALn{Jl}}}}n}}}}{{BLh{Ch{Gd}}}BFh}{{BN`BBj}BBj}{{BBj{Ch{Gd}}}BBj}{{{f{BOn}}}{{A`{{l{An}}n}}}}{{{f{BOn}}}{{l{An}}}}``{{{f{{Bf{{f{{l{An}}}}}}}}{f{B`}}d}{{A`{{l{An}}n}}}}{{{f{DBl}}}{{l{Nd}}}}{{{f{CLd}}}{{l{Nd}}}}{{{f{CBh}}}{{A`{{l{Nd}}n}}}}`{{{f{CLf}}}{{l{Lb}}}}`{{BLnCDl}BLn}`{{{f{AB`}}}Jl}`{{{f{{Bf{Ff}}}}Ld}{{A`{Ffn}}}}{{{f{{L`{LfLb}}}}{f{{l{An}}}}CK`{Gf{Hb}{{Ad{AMf}}}}{Gf{AMf}{{Ad{Hb}}}}{f{AMh}}{f{AMh}}}{{A`{{l{Lb}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{B`}}}}{Gf{Hb}{{Ad{AMf}}}}{Gf{AMf}{{Ad{Hb}}}}{f{AMh}}{f{AMh}}}{{A`{{l{Lb}}n}}}}{BBjBBj}{{{f{AMf}}}d}{{{C@b{c}}d}{{C@b{c}}}C@f}````0`{{}b}{cb{JfBLl}}``{cBBj{{Ij{{Bf{Hb}}}}}}``{{{f{{Bf{Jl}}}}}{{`{{D`{}{{Cj{Gd}}}}}}}}{{{f{DBd}}Bd{Ch{Gd}}d{Ch{{f{{BDj{El}}}}}}GdGd{Ch{{f{CDf}}}}{Ch{Bd}}Bd{Ch{{f{CDh}}}}dd{f{Df{Ch{Gd}}}}d}{{A`{{Hf{{BDj{El}}GdGd}}n}}}}{{{CO`{c}}{Ch{{DBn{Gd}}}}}{{CO`{c}}}BL`}{{{CKl{c}}{Ch{{DBn{Gd}}}}}{{CKl{c}}}BL`}``{{}Gd}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{DfACd}}}{{Cn{Cl}}}}{{BFhBFhcc}BFh{{BAf{BBj}}}}{{{f{DAj}}{f{AAn}}ei}{{A`{AAnn}}}{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}{{BAf{Dd}}}{{Ib{}{{Cj{g}}}}}}{{{f{DfA@h}}}{{f{DfKf}}}}`{{{f{DfBLj}}BLj}b}{{BBjBBjHbEl}BBj}{{BBjBBjBBj}BBj}``{{{f{Ab}}CF`}Ab}{{BBjCF`}BBj}`{{{f{Ff}}{f{Ff}}d}{{A`{Ffn}}}}{{BBjBBj}BBj}{{BLjBLj}BLj}{{{f{BLj}}BLj}d}{{}c{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BDlFf}{{}Ff}{{MjDd}Ff}{BGf{{Hf{{Gj{BAj}}{Gj{{Cn{Cl}}}}{Ch{Id}}}}}}{{{AMb{c}}}c{}}{{{N`{ce}}}{{Ch{c}}}{}BLl}66{{{f{BBj}}}}{BLj}{{{f{BGf}}}}{DC`BN`}{BN`BN`}{{{N`{ce}}}{}A@fBLl}{{{N`{ce}}}{{Hf{e}}}A@fBLl}{{CD`c}{{BKl{c}}}BL`}{{BBfEl}{{A`{Mjn}}}}{BFjAb}{{{N`{BKf}}}Ab}{{MjDd}Ab}{BG`{{Gj{c}}}{}}{{}{{Gj{Dd}}}}{{{f{BLj}}}d}{{{f{CAh}}}d}{{{f{CDl}}}d}{{{f{Ab}}{f{Ab}}{f{Ab}}CFd}{{A`{{l{Bl}}n}}}}{{BBjccCFd}BBj{{BAf{BBj}}}}{cd{{Ij{ANf}}}}4{{{f{BGh}}{Ch{{f{B`}}}}}d}{{{f{CI`}}}d}7{{{f{BKf}}}d}{{{f{C@n}}}d}{BBjBBj}{{{f{Ab}}}{{A`{{l{Bl}}n}}}}{{{f{AJd}}}{{A`{{l{Bl}}n}}}}25{{{f{BGh}}}d};{{{f{Ab}}{f{Ab}}}{{A`{{l{Bl}}n}}}}{{BBjc}BBj{{BAf{BBj}}}}54{{{f{AJf}}}{{A`{{l{Bl}}n}}}}6{{{f{CLb}}}{{l{Bl}}}}{{{f{CLd}}}{{l{Bl}}}}{{{f{CBh}}}{{A`{{l{Bl}}n}}}}9{{{f{Mj}}}d}::{{{f{BKf}}}{{l{Bl}}}};;0{{{f{A@h}}}d}<2{{{f{AB`}}}d}`{{{f{Ab}}}d}{{{f{{N`{AFj}}}}}d}{{{f{CJf}}}d}{{}d}{{{f{CMj}}F`}{{A`{dn}}}}{fd}{{{f{c}}}d{}}{{{f{CE`}}{f{CDl}}}{{A`{bn}}}}6{{{f{BGh}}}d}{{{f{CLb}}}{{l{Kl}}}}{{{f{CLd}}}{{l{Kl}}}}{{{f{CBh}}}{{A`{{l{Kl}}n}}}}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}{{AGl{cgAGj}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{BLj}}}{{AFf{BLj}}}}{{{f{BGf}}}{{AGl{{Gj{{Cn{CMl}}}}DCbAGj}}}}{{{f{D@j}}}{{`{Jd}}}}{{{f{BLj}}}{{AFh{BLj}}}}{{{f{{DCf{}{{DCd{c}}}}}}}{{`{Jd}}}{AGhJfCLlCMn}}{{BMnBBjd}BBj}{{BFhBFhccBKb}BFh{{Ij{{Bf{BBj}}}}}}{{BN`BBjd}BBj}{{{f{DAj}}{f{AAn}}eiBKb}{{A`{AAnn}}}{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}{{BAf{Dd}}}{{Ib{}{{Cj{g}}}}}}{{{f{DCh}}{f{AAn}}{f{B`}}{f{B`}}eeCEj{Ch{Jj}}}{{A`{AAnn}}}{{Ij{B`}}}{{Ib{}{{Cj{c}}}}}}{BFhBLn}{{{f{DCj}}{f{B`}}d}{{A`{{l{An}}n}}}}{{{f{DCj}}{f{{l{An}}}}d}{{A`{{l{An}}n}}}}{{BLnd}BLn}`{{BLn{Gj{BBj}}}BFh}{BKdBBj}{DClBBj}{{{f{CJd}}}{{f{{Ch{{Gj{DCn}}}}}}}}``{{}BBj}{BFhBFh}{BN`BBj}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}{{Ch{c}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{BBjBBj}{DD`BFh}4{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DAnA@f}BLl}`{{BFhBFhcc}BFh{{BAf{BBj}}}}{{{f{DAj}}{f{AAn}}ei}{{A`{AAnn}}}{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}{{BAf{Dd}}}{{Ib{}{{Cj{g}}}}}}{{BLnc}BLn{{Ij{{Bf{BBj}}}}}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}e{}{}{}}{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}<{{{f{BKf}}}Gd};9{{{f{BGf}}}Gd}{{BFhJl}BFh}{{{f{BKf}}Gd}Ab}`{BBjBN`}{cBBjDDb}{DDbBBj}{BGhBBj}{DDdBBj}{CJfBBj}{MjBBj}{{BBjc}BBj{{BAf{BBj}}}}0``{{CC`d}CC`}{{{CKl{c}}d}{{CKl{c}}}BL`}```{BBjBBj}{{{f{DCj}}}{{l{Fb}}}}0{{{f{DCj}}{f{{Bf{Ff}}}}}{{A`{{l{Ah}}n}}}}{{{f{DCj}}HbCMd}{{A`{{l{Ah}}n}}}}{{{f{DCj}}Hbd}{{A`{Abn}}}}{{{f{DCj}}{f{{l{An}}}}d}{{A`{{l{An}}n}}}}4{{{f{DCj}}}{{A`{Abn}}}}{{{f{DCj}}}Ab}01{{{f{DCj}}}{{A`{{l{Fb}}n}}}}{{{f{DCj}}}{{l{Ah}}}}{{{f{DCj}}{f{Ff}}}{{A`{{l{Ah}}n}}}}{{{f{DCj}}HbGd}{{l{Ah}}}}{{{f{DCj}}F`}{{A`{{l{Ah}}n}}}}{{{f{DCj}}Bd}Ab}7{{{f{DCj}}}{{A`{{l{Ah}}n}}}}01{{{f{{AJb{}{{Cj{c}}}}}}e}c{}{}}{{BBjc}BBj{{BAf{BBj}}}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DAnA@f}BLl}21``````{{{f{AMl}}{f{AMl}}}{{A`{{Hf{AMlAMl}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hf{{l{Ah}}{l{Ah}}}}n}}}}{{{f{Df{N`{ce}}}}}{{f{Dfc}}}{DDfA@f}{BLlJf}}{{BFhcBLj{Ch{{N`{COb}}}}{Ch{{f{B`}}}}}BFh{{Dn{AAn}{{Ad{{A`{AAnn}}}}}}InJ`}}{{DClc}BBj{{Dn{{f{Dd}}}{{Ad{{A`{Ddn}}}}}}InJ`}}{{BBjc{BMf{{N`{BMd}}}}}BBj{{Dn{Ff}{{Ad{{A`{{Ch{Ff}}n}}}}}}InJ`}}{{BBjBBjc{BMf{{N`{BMd}}}}}BBj{{Dn{FfFf}{{Ad{{A`{{Ch{Ff}}n}}}}}}InJ`}}{{BBj{f{Dfc}}{f{Df}}}{{A`{BBjn}}}{{Af{BBj{f{Df}}}{{Ad{{A`{BBjn}}}}}}}}{{{f{BNb}}{Ch{{f{Dd}}}}}{{A`{Ojn}}}}{{{f{BNb}}c}{{A`{Ojn}}}{{ABb{{f{El}}}{{Ad{El}}}}}}{c{{BMf{{N`{BMd}}}}}{{Dn{{f{El}}}{{Ad{{A`{Eln}}}}}}InJ`}}{c{{BMf{{N`{BMd}}}}}{{Dn{{f{{Bf{{f{El}}}}}}}{{Ad{{A`{Eln}}}}}}InJ`}}{{BBjc}BBj{{Af{BBj}{{Ad{BBj}}}}}}{c{{BMf{{N`{BMd}}}}}{{Dn{{f{Oj}}}{{Ad{{A`{Ojn}}}}}}InJ`}}{{DCl{N`{Dn}}}BBj}{c{{BMf{{N`{BMd}}}}}{{Dn{{f{{Bf{Oj}}}}}{{Ad{{A`{Ojn}}}}}}InJ`}}:{{ce{BMf{{N`{BMd}}}}}BBj{{Dn{{f{Df{Bf{Ff}}}}}{{Ad{{A`{{Ch{Ff}}n}}}}}}InJ`}{{Ij{{Bf{BBj}}}}}}{{BBjc{f{{Bf{BBj}}}}{BMf{{N`{BMd}}}}}BBj{{Dn{{f{Df{Bf{Ff}}}}}{{Ad{{A`{{Ch{Ff}}n}}}}}}InJ`}}{{BBjBMj{f{{Bf{BBj}}}}d{Ch{DDh}}}BBj}2{{{f{BNb}}}{{A`{Ojn}}}}{{CD`c}CD`{{Dn{CDb}{{Ad{CDb}}}}}}1111{CJfCJf}{{{Ch{{f{{Bf{Gd}}}}}}{f{{BDj{BAj}}}}{Ch{{f{{Bf{Ab}}}}}}{Ch{{f{DDj}}}}}AAn}{{{Ch{{f{{Bf{Dd}}}}}}{f{{BDj{El}}}}{Ch{{f{{Bf{Ab}}}}}}d}{{Ch{{Gj{Gd}}}}}}{{{f{B`}}}BBj}{BMnBBj}{BFhBFh}{BN`BBj}{{{f{AHd}}}{{Ch{c}}}{}}{BBjBBj}{{{f{DDl}}}Mj}{{{f{BKf}}}{{A`{Mjn}}}}```754{{{f{AHd}}}{{Ch{Aj}}}}3{{{f{BKf}}}{{Ch{Aj}}}}9876{{{f{AJh}}}{{Ch{c}}}{}}51{{{f{DDn}}}Mj}4{{{CNj{c}}{Ch{CNd}}}{{CNj{c}}}BL`}{{{f{El}}{f{El}}}{{A`{Eln}}}}```{{{f{CLf}}}{{l{Lb}}}}`{{{f{CBh}}}{{A`{{l{Kl}}n}}}}1`?>=<;:{{{f{AHd}}}{{Ch{{Hf{cc}}}}}{}}```:9``{{{f{DBl}}}{{l{Nd}}}}{{{f{CLd}}}{{l{Nd}}}}{{{f{CBh}}}{{A`{{l{Nd}}n}}}}`5```>{{{f{CLb}}}{{l{Nd}}}}21`{{{f{BGh}}}Hb}{{{f{BGh}}}d}{{{BLb{}{{Ad{c}}}}{f{Ab}}}c{}}{{BGhHb}BGh}{{BBjBBj}}{{{f{BLf}}{f{Ab}}}{{A`{Abn}}}}``{{{f{BKf}}}Gd}{{{f{CKb}}}{{Ch{Gd}}}}{{{f{CBl}}}{{Ch{Gd}}}}{{{f{CC`}}}{{Ch{Gd}}}}`````{{{C@b{c}}Gd}{{C@b{c}}}C@f}`{BMnBBj}{BN`BBj}{{{f{AHn}}}{{A`{Gdn}}}}{BBjBBj}{{{f{BKf}}}{{A`{Gdn}}}}{{{f{BKf}}}{{f{Dd}}}}{BBjDCl}````33`{{{f{DBl}}}{{l{Kl}}}}{{{f{CLd}}}{{l{Kl}}}}{{{f{CBh}}}{{A`{{l{Kl}}n}}}}{{{f{CLf}}}{{l{Lb}}}}{{{f{BGh}}}Hb}`{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{CMnA@f}BLl}{{{f{CE`}}}d}{BGh}{BBj}{{{f{Ab}}}{{A`{Abn}}}}0{{{f{BGh}}}d}{{DE`Gd}{{Ch{Gd}}}}{{BBjc}BBj{{BAf{BBj}}}}0{{{f{BNb}}}{{A`{Ojn}}}}{{}c{}}{cCNfBNf}{cCNhC@f}2{{Ddc}DEb{}}{c{{AMb{c}}}{}}{BFhBLn}{c{{BKl{c}}}BL`}{cCBl{{Ij{ANf}}}}{cCC`{{Ij{ANf}}}}{{{f{{Bf{Oj}}}}}BNb}{c{{C@b{c}}}C@f}{c{{CNj{c}}}BL`}{c{{BNd{c}}}BNf}{c{{CNl{c}}}C@f}{{}CLh}{c{{C@h{c}}}C@f}{HbBGh}{c{{CNn{c}}}C@f}{c{{CO`{c}}}BL`}{{BGhBGhBGh}CCn}{c{{CKl{c}}}BL`}{{DEd{N`{CJd}}{N`{{BDj{BAj}}}}{Hf{GdGd}}{Ch{{Gj{Gd}}}}{Ch{{N`{BKn}}}}{Ch{DDj}}Gdd{Ch{{Gj{Ab}}}}{Ch{{Hf{Dd{N`{B`}}}}}}CFl}{{A`{C@nn}}}}{c{{C@l{c}}}BL`}{c{{CA`{c}}}{C@fC@f}}{CDlBKb}{c{{BMf{c}}}{}}{{BBjBBjBBj}CIb}{{}CId}{BBjBLd}{{Dd{Gj{Oj}}{BMf{{N`{BMd}}}}c}CAlBNh}{c{{N`{c}}}{}}{{AGd{Gj{{Cn{Cl}}}}{Ch{Id}}}BGf}{{ElJj}Mj}{{DdAGdd}BAj}{e{{N`{c}}}{}{{ABb{{f{{CMf{c}}}}}{{Ad{c}}}}}}{{ge}{{N`{ce}}}{}BLl{{ABb{{f{{CMf{ce}}}}}{{Ad{c}}}}}}{AGdBGf}{{{f{AJj}}GdGd}{{l{c}}}Dl}{{{f{BKf}}GdGd}Ab}{{{f{B`}}}CDf}{{ce}{{N`{ce}}}{}BLl}{{HbDd}{{A`{Abn}}}}{DdCDf}{{AGdGd}BGf}{{{N`{{Bf{CNd}}}}}CBl}{{{N`{{Bf{CNd}}}}}CC`}{BdCDf}{{}{{N`{{BOl{c}}}}}{}}{c{{N`{{BOl{e}}c}}}BLl{}}{Gd{{N`{{Bf{{BOl{c}}}}}}}{}}{{Gdc}{{N`{{Bf{{BOl{e}}}}c}}}BLl{}}{DEfCBl}{DEfCC`}5432{{{f{DfDEh}}}Ch}{{{f{DfDBb}}}Ch}{{{f{BM`}}DEj}{{A`{{Ch{AAn}}n}}}}{{{f{DfCAd}}Gd}{{A`{{Ch{{Gj{AAn}}}}n}}}}{{{f{DfC@`}}Gd}{{A`{{Ch{{Gj{AAn}}}}n}}}}{{{f{DfC@n}}Gd}{{A`{{Ch{{Gj{AAn}}}}n}}}}{{{f{BBj}}{f{Df{BHb{{f{BBj}}}}}}}b}{{BBj{f{Df{BHb{BBj}}}}}b}{BBjBBj}0{BLjBLj}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}0{HbBBj}`{{}AB`}{{}A@h}`{{{f{BKf}}}Gd}{BFhBFh}7`````{{{f{Df{C@l{c}}}}}{{A`{Gdn}}}BL`}````{{{f{AIf}}}{{A`{{Hd{Hb}}n}}}}{{BLnc}BLn{{Ij{{Bf{BBj}}}}}}``{{BFh{f{Df{BJl{BJj}}}}{f{Df{BJl{BJn}}}}}{{A`{BJhn}}}}`{{BBjc}BBj{{BAf{BBj}}}}{{{f{CLb}}}{{l{O`}}}}{{{f{CLd}}}{{l{O`}}}}{{{f{CBh}}}{{A`{{l{O`}}n}}}}{{{f{CBh}}}{{A`{{l{Kl}}n}}}}{{CGlc}BBj{{BAf{BBj}}}}{{CH`c}BBj{{BAf{BBj}}}}`{{BBje}BBj{{BAf{BBj}}Jf}{{Ij{{Bf{c}}}}}}{{BBje{Ch{{Hf{eF`}}}}CIn}BBj{{BAf{BBj}}Jf}{{Ij{{Bf{c}}}}}}{{{f{Df{BDj{El}}}}{f{{BDj{El}}}}}{{A`{bn}}}}```{{{f{B`}}}BGh}{{Dd{f{{Bf{{f{B`}}}}}}{f{B`}}}{{L`{KnKl}}}}{{Dd{f{{Bf{{f{B`}}}}}}{f{B`}}}{{L`{LnLb}}}}{{Dd{f{{Bf{{f{B`}}}}}}{f{B`}}Ld}{{L`{LfLb}}}}``{{{f{BGh}}{f{BGh}}}{{Ch{B@l}}}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}{{Ch{B@l}}}{DAnA@f}BLl}```{{}BBj}{c{{DEl{{N`{c}}}}}{}}{{ce}{{DEl{{N`{ce}}}}}{}BLl}````{{BBjc}BBj{{BAf{BBj}}}}`{{DCl{f{B`}}}BBj}0{{{f{AAn}}{f{AAn}}d}{{A`{{Hf{{AAj{{Gj{Jl}}{Gj{A@h}}}}{AAj{{Gj{AB`}}{Gj{A@h}}}}}}n}}}}`{{{f{DDl}}}Mj}{BBjBBj}{BFh{{A`{{Hf{AAnAAn}}n}}}}`{{{f{BGf}}}BGf}{{{f{{N`{c}}}}{f{DfDEn}}}b{ALjA@f}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}dA@fBLl}{{{f{B`}}BBjA@`}BBj}{{BFhBBjA@`}BFh}{{{f{AJh}}AjA@`}{{A`{{Ch{c}}n}}}{}}{{BBjBBjA@`}BBj}{{{f{DDn}}AjA@`}{{A`{Mjn}}}}{{{f{BKf}}AjA@`}{{A`{Mjn}}}}{{{f{CLb}}}{{l{Nd}}}}{{{f{CLd}}}{{l{Nd}}}}{{{f{CBh}}}{{A`{{l{Nd}}n}}}}{{{f{Df}}c}{{A`{{f{Dfe}}BDf}}}CNb{}}````{{{f{DF`}}CFj{Ch{Kf}}}Ab}{{BBjCFj{Ch{Kf}}}BBj}{{{f{Df{N`{AFj}}}}{f{Df{Bf{Bd}}}}}{{A`{GdBDf}}}}{{{f{Df{N`{AFj}}}}DFb}{{A`{bBDf}}}}{{{C@l{c}}CFl}{{C@l{c}}}BL`}{{{f{Df{N`{AFj}}}}{f{Df{Gj{Bd}}}}}{{A`{GdBDf}}}}{{{f{Df{N`{AFj}}}}{f{DfEj}}}{{A`{GdBDf}}}}{{{f{Df}}}{{A`{cBDf}}}DFd}{{{f{Df{N`{AFj}}}}{f{Df{Bf{DFf}}}}}{{A`{GdBDf}}}}{{{f{CKb}}}d}{{{f{BKf}}}Ab}{{{f{CBl}}}d}{{{f{CC`}}}d}````{{ce}BBj{{Dn{FfFf}{{Ad{{A`{{Ch{Ff}}n}}}}}}InJ`Jf}{{Ij{{Bf{BBj}}}}}}{{{f{AJl}}}Ab}0{{{BLb{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBjBBj}}{{{f{BLf}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfBLj}}BLj}b}{{{f{{Bf{Bd}}}}}{{A`{{f{{Bf{Bd}}}}n}}}}{{{f{DfBKf}}Dd}b}{{BFheid}BFh{{Ij{B`}}}{{Ib{}{{Cj{c}}}}}{{Ij{B`}}}{{Ib{}{{Cj{g}}}}}}{{BKde}BBj{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}}{{cBBj}BBj{{BAf{BBj}}}}{{{f{Ab}}{f{{l{Fb}}}}}{{A`{{l{Ah}}n}}}}{{BBjc}BBj{{BAf{BBj}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{BOn}}{f{B`}}{f{B`}}}{{A`{{l{An}}n}}}}{{BBjcc}BBj{{BAf{BBj}}}}1{{{f{BNb}}{Ch{El}}}{{A`{Ojn}}}}{{{f{BOn}}{f{B`}}{f{B`}}Gd}{{A`{{l{An}}n}}}}3{{{f{Ab}}{f{Ab}}{f{Ab}}{f{Ab}}{Ch{El}}}{{A`{Abn}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}{Ch{El}}}{{A`{Abn}}}}{{BBjcc{Ch{c}}{Ch{El}}}BBj{{BAf{BBj}}}}{{{f{{L`{LfLb}}}}{Ch{{f{B`}}}}{f{{l{An}}}}CK`}{{A`{{L`{LfLb}}n}}}}{{BBj{f{{Bf{Hb}}}}}BBj}{{{f{ANf}}}CNd}`{{{f{AJn}}}AJn}{{{f{BKf}}}Ab}{BMnBBj}{BFhBFh}{BN`BBj}{BBjBBj}`{{BLnc}BLn{{Ij{{Bf{BBj}}}}}}{{{f{DBf}}{Gj{Ff}}{f{BFl}}}{{A`{{Hf{Ff{Gj{Ff}}C`}}n}}}}{{BFhBBjcBFl}BLh{{Ij{{Bf{BBj}}}}}}{{BBjBFl}BBj}{{{f{AK`}}{f{Dn}}A@b}{{A`{Abn}}}}{{BBj{N`{Dn}}{BMf{{N`{BMd}}}}A@b}BBj}{{{f{BKf}}{f{Dn}}A@b}{{A`{Abn}}}}{{BBjGdc}BBj{{Af{{f{Df{l{Ef}}}}}{{Ad{{Ch{Aj}}}}}}InJ`E`}}{{{f{DFh}}A@b}{{A`{Abn}}}}{{BBjA@b}BBj}{{{f{DFh}}{f{Ab}}CCd}{{A`{Abn}}}}{{BBjBBjCCd}BBj}32102032103{{BBjA@`AjA@b}BBj}2{{BBjBBjA@`AjCCd}BBj}543254325432{{{f{DFj}}{f{{l{An}}}}{Ch{{f{AMh}}}}}{{A`{DFjn}}}}{{{f{CBf}}Jl}{{A`{Abn}}}}{{BBjJl}BBj}{{{f{CCn}}Hb{Ch{{f{AMh}}}}}{{A`{Hbn}}}}0{{{f{CBf}}Nn}{{A`{Abn}}}}{{BBjNn}BBj}2``{{{f{CKb}}}{{Ch{{f{DDj}}}}}}{{{f{CBl}}}{{Ch{{f{DDj}}}}}}{{{f{CC`}}}{{Ch{{f{DDj}}}}}}``````{{{f{DCj}}{l{Ah}}}{{l{Ah}}}}{{}{{BMf{{N`{BMd}}}}}}{{BBjBBjdd{Ch{Kf}}}BBj}0`{{{f{BM`}}DEj}{{A`{AAnn}}}}{{cCBn}{{A`{BFhn}}}{{Ij{ANf}}}}{{{N`{{Bf{CNd}}}}CBn}{{A`{BFhn}}}}{{DEfCBn}{{A`{BFhn}}}}{{cCCb}{{A`{BFhn}}}{{Ij{ANf}}}}{{{N`{{Bf{CNd}}}}CCb}{{A`{BFhn}}}}{{DEfCCb}{{A`{BFhn}}}}{{DFl{f{{Bf{Jl}}}}e}{{A`{Abn}}}E`{{Ib{}{{Cj{{Ch{c}}}}}}}}{{{f{AKb}}c{Ch{e}}}{{A`{AKbn}}}{{Ib{}{{Cj{Jl}}}}}{}}{{{f{AKb}}ci}{{A`{AKbn}}}{{Ib{}{{Cj{Jl}}}}}{}{}{{Dn{{Ch{e}}}{{Ad{{Ch{g}}}}}}}}{{{f{Df{CNj{c}}}}}{{A`{{N`{{BDj{BAj}}}}n}}}BL`}{{{f{Df{BNd{c}}}}}{{A`{{BDj{El}}n}}}BNf}{{{f{C@n}}}{{f{{N`{{BDj{BAj}}}}}}}}{{{f{Df{C@l{c}}}}}{{A`{{N`{{BDj{BAj}}}}n}}}BL`}{{{f{BM`}}{Ch{Gd}}}{{A`{{N`{{BDj{El}}}}n}}}}{{{f{CJd}}}{{f{DFn}}}}```````{{}BLj}`{{{f{DfBFh}}{f{Df{BJl{BJj}}}}{f{Df{BJl{BJn}}}}}{{A`{{N`{{BDj{El}}}}n}}}}`{{{f{DBl}}}{{l{Nd}}}}{{{f{CLd}}}{{l{Nd}}}}{{{f{CBh}}}{{A`{{l{Nd}}n}}}}`{{{f{CLf}}}{{l{Lb}}}}`{{{f{Df{N`{AFj}}}}DG`}{{A`{KfBDf}}}}{{BFhc}BFh{{Ij{{Bf{BBj}}}}}}0````{{{f{AKb}}{f{{l{Bl}}}}{Ch{c}}}{{A`{AKbn}}}{}}{{{f{DfBLj}}BLjd}b}{{{f{BFh}}{BJl{BJj}}{BJl{BJn}}}b}{{{C@l{c}}d}{{C@l{c}}}BL`}{{{f{Df{C@l{c}}}}{N`{CJd}}}bBL`}{{{CA`{c}}d}{{CA`{c}}}C@f}{{{CNj{c}}d}{{CNj{c}}}BL`}{{{BNd{c}}d}{{BNd{c}}}BNf}{{{CO`{c}}d}{{CO`{c}}}BL`}5{{CNfd}CNf}{{BBjMb}BBj}{{{f{DfBGf}}{Ch{Id}}}b}{{{f{AKd}}Hb}{{l{c}}}Dl}{{{f{BKf}}Hb}Ab}{{BMnBBj}BBj}{{BFhc}BFh{{BAf{BBj}}}}{{BN`BBj}BBj}{{BBjBBj}BBj}{{{f{AKf}}Hbc}{{l{e}}}{}Dl}{{BFhce}BFh{{BAf{BBj}}}{{BAf{BBj}}}}{{BBjce}BBj{{BAf{BBj}}}{{BAf{BBj}}}}{{{f{BKb}}}d}{BBjBBj}{{{f{DfACf}}}b}{{{f{DfBKf}}}b}{{BBj{Ch{Kf}}}BBj}{{BFhcCDn}{{A`{bn}}}{{Ij{ANf}}}}{{BFhcCEl}{{A`{bn}}}{{Ij{ANf}}}}{{BFhcCFb}{{A`{bn}}}{{Ij{ANf}}}}{{BFhcCFn}{{A`{bn}}}{{Ij{ANf}}}}{{{f{CKj}}}{{l{Fb}}}}````{{{f{BKf}}HbGd}Ab}{{BFhHbJl}BFh}{{BN`BBjBBj}BBj}={{{f{DfBGf}}GdGd}b}0`{{{f{AKh}}GdGd}AKh}{{fGdGd}c{}}1022{{BGfGdGd}BGf}0`{{{f{AHl}}d}{{l{c}}}Dl}{{BMnF`}BBj}{{BFhcFh}BFh{{BG`{Dd}}}}{{BN`F`}BBj}{{BBjF`}BBj}{{BBjeFh}BBj{{BAf{BBj}}Jf}{{Ij{{Bf{c}}}}}}{{BFhcFh}BFh{{Ij{{Bf{BBj}}}}}}{{{f{AHl}}F`}{{l{c}}}Dl}{{{f{BKf}}F`}{{A`{Abn}}}}{{{f{{N`{c}}}}}{{Ch{{f{ALj}}}}}{ALjA@f}}{{{f{CKb}}}{{f{DEf}}}}{{{f{CBl}}}{{f{DEf}}}}{{{f{CC`}}}{{f{DEf}}}}{{{f{BOn}}{f{{l{An}}}}}{{l{Ah}}}}{{{f{BKf}}Hb}{{Hf{AbAb}}}}{{{f{BGf}}Gd}{{Hf{{Cn{Cl}}{Cn{Cl}}}}}}0{{{f{BOn}}{f{{l{An}}}}Gd}{{A`{{l{j}}n}}}}0{{{f{{l{An}}}}{f{{l{An}}}}e}{{l{Ah}}}{{D`{}{{Cj{{f{B`}}}}}}}{{Dn{{f{B`}}{f{B`}}}{{Ad{c}}}}}}4{{{f{{l{An}}}}{f{{l{An}}}}Gded}{{A`{{l{j}}n}}}{{D`{}{{Cj{{f{B`}}}}}}}{{Dn{{f{B`}}{f{B`}}}{{Ad{c}}}}}}2{BBjBBj}`{{{f{CKj}}{f{{Bf{Bd}}}}}{{l{Bl}}}}{{{f{CKj}}{f{{l{Bb}}}}}{{l{Bl}}}}`{{BMnBd}BBj}{{BFhBd}BFh}{{BN`Bd}BBj}{{{f{AKj}}Bd}{{Ch{Aj}}}}{{BBjBd}BBj}{{{f{BKf}}Bd}{{Ch{Aj}}}}{{{f{DGb}}Bd}Mj}{{{f{BKf}}Bd}{{A`{Mjn}}}}{{JlJl}A@h}{BBjDGd}{{{f{BOn}}{f{Ff}}}{{A`{{l{An}}n}}}}{{{f{{l{An}}}}{f{B`}}d}{{l{An}}}}{{{f{BOn}}}{{l{Fb}}}}0{{{f{BOn}}}{{l{An}}}}{{{f{BOn}}{f{Ff}}{f{Ff}}}{{A`{{l{An}}n}}}}4`{{{f{CBh}}{f{B`}}}{{A`{Abn}}}}`{{BBjEl}BBj}`{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}707070{{{f{BOn}}{f{{l{An}}}}}{{l{An}}}}10{{{f{{N`{ce}}}}}GdA@fBLl}{BBjBKd}{{{BLb{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBjBBj}}{{BLdBLd}}{{BLjBLj}BLj}{{{f{DfBLj}}BLj}b}{{{f{BLf}}{f{Ab}}}{{A`{Abn}}}}{{BLnc}BLn{{BAf{Dd}}}}{{DCl{f{B`}}}BBj}{{{f{BKb}}}{{f{Dd}}}}`1{{{f{B`}}}BBj}{BMnBBj}{BFhBFh}{BN`BBj}{{{f{AHd}}}{{Ch{c}}}{}}{BBjBBj}{{{f{DDl}}}Mj}{{{f{BKf}}}{{A`{Mjn}}}}{{}{{BMf{{N`{BMd}}}}}}{CAhCAh}?{{{f{Df}}g}{{A`{eBDf}}}{}{}{{ABb{{f{Dfc}}}{{Ad{e}}}}}}{{BFhJl}BFh}{{BLh{Ch{Gd}}}BFh}{{BN`BBj}BBj}{{BBj{Ch{Gd}}}BBj}{{{f{AKl}}{f{c}}}{{A`{AKln}}}A@f}{{{f{BKf}}{f{{l{Fb}}}}}{{A`{Abn}}}}{{{f{DGf}}{f{{Bf{A@h}}}}Mb}DGf}{{{f{DGf}}{f{{Bf{A@h}}}}}DGf}{{{f{BKf}}{f{{Bf{Jl}}}}}{{A`{Abn}}}}{{{f{BKf}}{f{{Bf{Jl}}}}}Ab}{{{f{AKn}}{f{c}}}AKnA@f}{{{f{BKf}}{f{{l{Fb}}}}}Ab}{{{f{DfBGf}}}{{Ch{Id}}}}{{BBjBBjBBj}BBj}{{CGjc}CGl{{BAf{BBj}}}}{{CGnc}CH`{{BAf{BBj}}}}`{{BBjBBjBGhCCh}BBj}```{{{f{CBh}}Ld}{{A`{{l{Lb}}n}}}}{BFh{{A`{DGhn}}}}{CGh{{A`{DGhn}}}}1{{{f{CJf}}}{{Ch{Jj}}}}{{BN`Gd}BBj}{{{f{D@j}}B@b}{{BDj{BAj}}}}{{{f{BGf}}}{{Cn{Cl}}}}{{{f{AL`}}}{{Gj{{f{{Bf{Bd}}}}}}}}{{{f{BFh}}d}{{A`{Ejn}}}}{{{f{DGj}}{Ch{{f{B`}}}}d}{{A`{AAnn}}}}{{{f{BKj}}{Ch{{f{B`}}}}d}{{A`{AAnn}}}}{{{f{BBj}}{f{{BDj{El}}}}DB`}{{A`{Ojn}}}}{{{f{BOn}}{f{{l{Fb}}}}d}{{A`{{l{Lb}}n}}}}{BMnBBj}{{{f{BOn}}}{{l{An}}}}{DClBBj}{{{f{AB`}}}{{Ch{Jl}}}}{fc{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BBjBBj}{{{f{BNb}}}{{A`{Ojn}}}}{{{f{CBh}}{f{B`}}}{{A`{Abn}}}}{fEj}000000000000{{{f{DfD@j}}{f{{BDj{El}}}}}{{A`{dn}}}}`887{{{f{CEl}}c}{{C@h{c}}}C@f}{{{f{CFn}}c}{{CA`{c}}}C@f}{{{f{DfBLj}}BLj}b}``{{BFhJlcFh}BFh{{Ij{{Bf{BBj}}}}}}{{{f{BGf}}{f{BGf}}}Id}{{{f{BGf}}f}Id}10{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}g{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}g{}{}{}}{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}g{}{}{}}{{{f{DGl}}{Ch{{f{AMh}}}}{f{{l{An}}}}}{{A`{DGln}}}}{{{f{BGh}}Hb{Ch{{f{AMh}}}}ceg}{{A`{Hbn}}}{{Dn{Hb}{{Ad{Hb}}}}}{{Dn{Hb}{{Ad{AMf}}}}}{{Dn{AMf}{{Ad{Hb}}}}}}{{{f{BGh}}Hb{Ch{{f{AMh}}}}}{{A`{Hbn}}}}{{{f{CCn}}Hb{Ch{{f{AMh}}}}}{{A`{Hbn}}}}10`10{g{{A`{AN`e}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}{e{{A`{BGfc}}}{}{{Ib{}{{Cj{{A`{bc}}}}}}}}{e{{A`{BGfc}}}{}{{Ib{}{{Cj{{A`{{Ch{b}}c}}}}}}}}2{{AGdg}{{A`{ANbe}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}0{{AGde}{{A`{BGfc}}}{}{{Ib{}{{Cj{{A`{{Ch{b}}c}}}}}}}}{{AGde}{{A`{BGfc}}}{}{{Ib{}{{Cj{{A`{bc}}}}}}}}{B@n{{A`{eg}}}{}{{AN`{c}}ALf}{}}0{{B@nAGd}{{A`{eg}}}{}{{ANb{c}}ALf}{}}0{{ADnDd}{{A`{{l{c}}e}}}Dl{}}{{AE`{f{{l{c}}}}}{{A`{{l{c}}e}}}Dl{}}10{{AE`DdEl}{{A`{{l{c}}e}}}Dl{}}0{c{{A`{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{Jj{{A`{CJfn}}}}11{{{N`{{Bf{c}}e}}}{{A`{{N`{{AAb{c}}e}}}}}{}BLl}2222222222222{DGn{{A`{CJdBDd}}}}{{{f{D@j}}{f{B`}}}{{A`{Ojn}}}}{{}{{A`{c}}}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CD`{Ch{CNd}}}{{A`{{BKl{AFj}}n}}}}{{{f{BNb}}c}{{A`{Ojn}}}{{ABb{{f{El}}}{{Ad{{A`{Eln}}}}}}}}{{{f{BNb}}c}{{A`{Ojn}}}{{ABb{{f{{Bf{{f{El}}}}}}}{{Ad{{A`{Eln}}}}}}}}{{BBjc}{{A`{BBjn}}}{{Af{BBj}{{Ad{{A`{BBjn}}}}}}}}{{{f{BNb}}c}{{A`{Ojn}}}{{ABb{{f{Oj}}}{{Ad{{A`{Ojn}}}}}}}}{{DE`Gd}{{A`{Gdn}}}}{Bd{{A`{CGbn}}}}{Jl{{A`{CGdn}}}}{Nn{{A`{CGfn}}}}{c{{A`{{N`{c}}DH`}}}{}}{{AGd{Gj{{Cn{Cl}}}}{Ch{Id}}}{{A`{BGfn}}}}{{ce}{{A`{{N`{ce}}DH`}}}{}BLl}{{}{{A`{{N`{{BOl{c}}}}DH`}}}{}}{c{{A`{{N`{{BOl{e}}c}}DH`}}}BLl{}}10`{c{{A`{{DEl{{N`{c}}}}DH`}}}{}}{{ce}{{A`{{DEl{{N`{ce}}}}DH`}}}{}BLl}{{{f{BNh}}{f{Df{Gj{Bd}}}}}{{A`{bn}}}}{{{f{CAj}}{f{Df{Gj{Bd}}}}}{{A`{bn}}}}{{{f{BMd}}{f{Df{Gj{Bd}}}}}{{A`{bn}}}}{f{{A`{GlBC`}}}}000000000000{{{N`{ce}}}{{A`{c{N`{ce}}}}}{}BLl}{fAAl}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}{{f{B`}}}}`{{BLjBLj}BLj}{{{f{AHn}}}{{A`{AHnn}}}}{BMnBBj}{{BFh{Ch{{Gj{Ej}}}}BE`}BFh}{BN`BBj}{BBjBBj}{{{f{BKf}}}{{A`{Abn}}}}{{BFh{Ch{e}}BE`}BFh{{BAf{BLd}}Jf}{{Ij{{Bf{c}}}}}}5{{BFh{Ch{{Gj{Dd}}}}BE`}BFh}431{{BFhe}BFh{{BAf{BLd}}Jf}{{Ij{{Bf{c}}}}}}{{{N`{{AG`{c}}}}}{{A`{cb}}}In}{{{N`{ce}}}cJfBLl}{{{f{DfMj}}Jj}b}{{{f{DfCD`}}{f{DHb}}}b}8{{{f{DHd}}c{f{B`}}BGh}{{A`{AAnn}}}{{BG`{Dd}}}}0{{{C@l{c}}d}{{C@l{c}}}BL`}```{{BLnCE`}BLn}`{{{f{BGf}}}{{Ch{{f{Id}}}}}}0{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}Gd}cJf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{Mj}}}{{f{Jj}}}}{{{f{CMj}}ddDdd}{{A`{AAnn}}}}{{BBjdd{f{B`}}d}BBj}``3{{{f{BGf}}}{{f{{Bf{{Cn{Cl}}}}}}}}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}gJf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{BGf}}}DCb}{{BMnBd}BBj}{{BFhBd}BFh}{{BN`Bd}BBj}{{{f{AKj}}Bd}{{Ch{Aj}}}}{{BBjBd}BBj}{{{f{BKf}}Bd}{{Ch{Aj}}}}{{{f{DGb}}Bd}Mj}{{{f{BKf}}Bd}{{A`{Mjn}}}}``{{{f{DHf}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{DHf}}A@l{f{Df{Bf{Kf}}}}}{{A`{bn}}}}`{{{f{{N`{{AG`{c}}}}}}g}{{A`{eb}}}In{}{{ABb{{f{c}}}{{Ad{e}}}}}}{{}c{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{N`{ce}}}}}GdA@fBLl}{{{f{CLb}}}{{l{Nd}}}}{{{f{CLd}}}{{l{Nd}}}}{{{f{CBh}}}{{A`{{l{Nd}}n}}}}10{{{f{CCl}}}{{Ch{Jl}}}}{{{f{BGh}}}Hb}`{{{f{BGh}}}d}`{cCGj{{BAf{BBj}}}}{{CGlc}CGn{{BAf{BBj}}}}{{CH`c}CGn{{BAf{BBj}}}}```{{BLnBFh}BLn}{{CIbBBj}CIb}{{{C@l{c}}{f{{N`{{BDj{BAj}}}}}}{Ch{{f{{BDj{BAj}}}}}}d}{{A`{{C@l{c}}n}}}BL`}{{CC`{Ch{{DBn{Gd}}}}}CC`}{{{C@b{c}}{DBn{Gd}}}{{C@b{c}}}C@f}{{{CO`{c}}{DBn{Gd}}}{{CO`{c}}}BL`}{{CBld}CBl}{Gdc{}}0{{{CKl{c}}{Ch{{DBn{Gd}}}}}{{CKl{c}}}BL`}{{CD`Gd}CD`}{{CBl{Ch{CKd}}}CBl}{{CC`{Ch{CKd}}}CC`}{{BFhd}BFh}{{BKbCDj}BKb}1{{BFhBBj}BFh}{{BFhc}BFh{{Ij{{Bf{BBj}}}}}}{{{CNj{c}}{Ch{{Gj{Ej}}}}}{{CNj{c}}}BL`}{{{BNd{c}}{Ch{{Gj{Ej}}}}}{{BNd{c}}}BNf}{{{C@l{c}}{Ch{{Gj{Ej}}}}}{{C@l{c}}}BL`}{{CD`{Ch{{N`{{Bf{Dd}}}}}}}CD`}`4{{CBl{Ch{Dd}}}CBl}{{CDb{Ch{c}}}CDb{{BAf{CDf}}}}{{{CNl{c}}B@b}{{CNl{c}}}{}}{{{C@h{c}}B@b}{{C@h{c}}}C@f}{{{CNl{c}}{Ch{CEn}}}{{CNl{c}}}{}}{{CLh{Ch{CEn}}}CLh}{{{C@h{c}}{Ch{CEn}}}{{C@h{c}}}C@f}{{{CA`{c}}CG`}{{CA`{c}}}C@f}{{BFhc}BFh{{Ij{{Bf{BFh}}}}}}{{{CA`{c}}{Ch{Gd}}}{{CA`{c}}}C@f}{{{C@b{c}}{Ch{Ej}}}{{C@b{c}}}C@f}0{{CIbBBj}CIb}{{CIdBBj}CId}{{CBld}CBl}{{CDbd}CDb}{{{f{BNb}}El}{{A`{Ojn}}}}{{CBl{Ch{{N`{{BDj{El}}}}}}}CBl}{{CD`{Ch{{N`{{Gj{El}}}}}}}CD`}{{CBlCDd}CBl}{{CDbCDd}CDb}{{CBlBd}CBl}{{CDbBd}CDb}{{CLhCNd}CLh}{{BKd{Gj{BBj}}}{{A`{BBjn}}}}{{{C@b{c}}{Ch{Gd}}}{{C@b{c}}}C@f}{{{C@b{c}}{Ch{d}}}{{C@b{c}}}C@f}{{CIdBBjBBjBBj}CId}=={{CD`d}CD`}{{{CNj{c}}{Ch{{Gj{Ab}}}}}{{CNj{c}}}BL`}{{{C@l{c}}{Ch{{Gj{Ab}}}}}{{C@l{c}}}BL`}{{CIbBBjBBjBBj}CIb}4{{CIbBBj}CIb}{{CIdBBj}CId}{{CBld}CBl}{{CC`d}CC`}{{{CO`{c}}d}{{CO`{c}}}BL`}{{{CKl{c}}d}{{CKl{c}}}BL`}9{{{CNj{c}}{Ch{{Hf{Dd{N`{B`}}}}}}}{{CNj{c}}}BL`}{{{C@l{c}}{Ch{{Hf{Dd{N`{B`}}}}}}}{{C@l{c}}}BL`}{{CBl{Ch{Dd}}}CBl}{{CC`{Ch{Dd}}}CC`}{{CBl{Ch{Gd}}}CBl}{{CC`{Ch{{DBn{Gd}}}}}CC`}{{CD`{Ch{Gd}}}CD`}{{{CNn{c}}DHh}{{CNn{c}}}C@f}{{{CO`{c}}DHh}{{CO`{c}}}BL`}{{{C@b{c}}Ej}{{C@b{c}}}C@f}={{CD`d}CD`}{{BAj{DHj{DdDd}}}BAj}{{CIbBBj}CIb}{{CIdBBj}CId}010{{CBld}CBl}{{CDbd}CDb}3{{CKbc}CKb{{BAf{{Ch{Gd}}}}}}<{{CBlc}CBl{{BAf{{Ch{Gd}}}}}}{{CC`c}CC`{{BAf{{Ch{Gd}}}}}}{{CC`{Ch{Gd}}}CC`}{{{CNj{c}}{Ch{Gd}}}{{CNj{c}}}BL`}{{{BNd{c}}{Ch{Gd}}}{{BNd{c}}}BNf}{{{CKl{c}}{Ch{Gd}}}{{CKl{c}}}BL`}{{CD`{Ch{Gd}}}CD`}10:>{{CBl{Ch{CDh}}}CBl}{{CDb{Ch{CDh}}}CDb}{{BFhBLj}BFh}{{CD`CDb}CD`}{{{CKl{c}}{Ch{e}}}{{CKl{c}}}BL`{{BAf{CNd}}}}{{CD`{Ch{c}}}CD`{{BAf{CNd}}}}{{CKb{N`{{Bf{CNd}}}}}CKb}{{{CKl{c}}{Ch{{N`{BKn}}}}}{{CKl{c}}}BL`}{{{C@l{c}}{Ch{{N`{BKn}}}}}{{C@l{c}}}BL`}{{BFhd}BFh}{{{CNj{c}}{Ch{{Gj{Gd}}}}}{{CNj{c}}}BL`}{{{BNd{c}}{Ch{{Gj{Gd}}}}}{{BNd{c}}}BNf}{{{CO`{c}}{Ch{{Gj{Dd}}}}}{{CO`{c}}}BL`}{{{CKl{c}}{Ch{{N`{{Bf{Dd}}}}}}}{{CKl{c}}}BL`}{{{C@l{c}}{Ch{{Gj{Gd}}}}}{{C@l{c}}}BL`}{{CD`{Ch{{N`{{Gj{Gd}}}}}}}CD`}6{{CBl{Ch{Bd}}}CBl}{{{C@b{c}}Bd}{{C@b{c}}}C@f}{{CDb{Ch{Bd}}}CDb}{{{C@b{c}}CEd}{{C@b{c}}}C@f}{{CBld}CBl}{{CD`d}CD`}{{CKbd}CKb}2{{CC`d}CC`}{{{CKl{c}}d}{{CKl{c}}}BL`}3?{{{CA`{c}}{Ch{Gd}}}{{CA`{c}}}C@f}{{CKbc}CKb{{BAf{{Ch{DDj}}}}}}{{BFhc{Ch{Jl}}}BFh{{BAf{Dd}}}}{{CBl{Ch{DDj}}}CBl}{{CBlc}CBl{{BAf{{Ch{DDj}}}}}}{{CC`{Ch{DDj}}}CC`}{{CC`c}CC`{{BAf{{Ch{DDj}}}}}}{{{CNj{c}}{Ch{DDj}}}{{CNj{c}}}BL`}{{{BNd{c}}{Ch{DDj}}}{{BNd{c}}}BNf}{{{CKl{c}}{Ch{{f{DfDDj}}}}}{{CKl{c}}}BL`}{{{C@l{c}}{Ch{DDj}}}{{C@l{c}}}BL`}{{CD`{Ch{DDj}}}CD`}{{{f{BNb}}}{{A`{Ojn}}}}{{CD`Gd}CD`}{{CBl{Ch{{N`{{BDj{El}}}}}}}CBl}{{CC`{Ch{{N`{{BDj{El}}}}}}}CC`}{{{CO`{c}}{N`{{BDj{El}}}}}{{CO`{c}}}BL`}{{{CKl{c}}{N`{{BDj{El}}}}}{{CKl{c}}}BL`}{{CD`{Ch{{N`{{BDj{El}}}}}}}CD`}{{CBlc}{{A`{CBln}}}{{Dn{{BDj{El}}}{{Ad{{A`{{BDj{El}}n}}}}}}}}4{{{CO`{c}}{f{{BDj{El}}}}}{{CO`{c}}}BL`}{{{CKl{c}}{f{{BDj{El}}}}}{{CKl{c}}}BL`}3{{CIbBBj}CIb}{{CIdBBj}CId}{{CBlBd}CBl}{{{C@b{c}}Bd}{{C@b{c}}}C@f}{{CDbBd}CDb}{{BFhd}BFh}{{CBlGd}CBl}?0?{{{C@l{c}}{Ch{{Hf{GdGd}}}}}{{C@l{c}}}BL`}2{{CKbDEf}CKb}{{CBlDEf}CBl}{{CC`DEf}CC`}{{{CA`{c}}CI`}{{CA`{c}}}C@f}{{BKb{Ch{Dd}}}BKb}{{{C@b{c}}{Ch{Ej}}}{{C@b{c}}}C@f}{{CIbLd}CIb}{{CIb{Ch{Dd}}}CIb}{{CBld}CBl}{{CDbd}CDb}10<{{{f{BGf}}{Ch{Id}}}{{Cn{Cl}}}}{{BGf{Ch{Id}}}BGf}{{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}{Ch{Id}}}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}1{{CIdBBj}CId}{{CIbBBj}CIb}{BFhBFh}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}e{}{}{}}10{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}210213210210{{{f{Df{N`{AFj}}}}{f{{Bf{Bd}}}}}{{A`{GdBDf}}}}{{{f{CEl}}AAnc}{{A`{bn}}}C@f}{{{f{CFn}}AAnc}{{A`{bn}}}C@f}{{{f{DfAAn}}{f{ANf}}e{f{g}}Gd}{{A`{bn}}}{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}{DHlInJ`}}{{{f{Df}}c}{{A`{GdBDf}}}DFd}{{{f{Df{N`{AFj}}}}{f{{Bf{DHn}}}}}{{A`{GdBDf}}}}{{BBjc}BBj{{BAf{BBj}}}}{{{f{CLb}}}{{l{Kl}}}}{{{f{CLd}}}{{l{Kl}}}}{{{f{CBh}}}{{A`{{l{Kl}}n}}}}``{{{f{ALb}}{f{{l{Bl}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dl}````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Id}}}Aj}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{f{{BDj{BAj}}}}{f{{BDj{BAj}}}}}{{A`{bn}}}}{cc{}}{{}Gd}{{}DI`}{{}c{}}{{{Ch{{f{BKn}}}}{f{DIb}}{f{{BDj{BAj}}}}}{{A`{dn}}}}{{{f{DI`}}Aj{f{AGd}}}d}{{{Gj{{Hf{{f{CMb}}DId}}}}BAj{Ch{DIf}}}{{A`{{Cn{Cl}}n}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}6``{{{f{BH`}}c}Ab{{Dn{{Hf{Jl{f{{BHb{Jl}}}}}}}{{Ad{Ch}}}}InJ`}}{{{f{BH`}}c}Ab{{Dn{{Hf{Jl{f{{BHb{Jl}}}}}}}{{Ad{}}}}InJ`}}{{{f{{Bf{{AAb{Jl}}}}}}c}Ab{{Dn{{AAb{Jl}}}{{Ad{Ch}}}}InJ`}}{{{f{{Bf{{AAb{Jl}}}}}}c}Ab{{Dn{{AAb{Jl}}}{{Ad{}}}}InJ`}}{{{f{{Bf{c}}}}e{Ch{BIh}}}{{ALn{c}}}{BIjBIl}{{D`{}{{Cj{{Hf{JlJl}}}}}}Jh}}{{{f{{Bf{c}}}}{f{Id}}e{Ch{BIh}}}{{ALn{c}}}{BIjBIl}{{D`{}{{Cj{{Hf{JlJl}}}}}}Jh}}{{{f{{l{c}}}}JlJl}{{l{c}}}Dl}{{{f{{Gj{{AAb{Jl}}}}}}{f{{Bf{{Cn{Cl}}}}}}}d}{{{f{BIn}}{f{C`}}}Ab}{{BJ`BJ`}BJ`}0``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DlDl{{Dn{ff}{{Ad{}}}}}{{Dn{f}{{Ad{}}}}}{{Dn{f}{{Ad{}}}}}Dl}{{{l{c}}{l{e}}gik}{{l{m}}}DlDl{{Dn{}{{Ad{}}}}}{{Dn{}{{Ad{}}}}}{{Dn{}{{Ad{}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DlDlCl{{Af{ff}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DlDl{{ALd{ChCh}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}g}bDlDl{{Af{ChCh}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{An}}}DlDl{{Af{{f{DfEj}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DlDl{}{{Af{}{{Ad{g}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DlDl{ClALf}{{Af{ff}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DlDlCl{{Af{ff}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DlDlCl{{Af{}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DlDl{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DlDl{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DlDl{}{}{{Af{ChCh}{{Ad{{A`{{Ch{g}}i}}}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DlDlDl{{ALh{ChChCh}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DlDlClALj{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dl{}{{I`{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kDd}{{A`{{l{m}}i}}}DlDlClALj{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DlDlALj{{Af{ff}{{Ad{{A`{{Cn{Cl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DlDlDl{}{}{{Af{ChChCh}{{Ad{{A`{{Ch{i}}k}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{}{}{{Af{Ch}{{Ad{{A`{{Ch{e}}g}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{ClALf}ALj{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dl{}{{I`{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dl{{ALl{Ch}}}Dl}{{{f{{l{c}}}}e}{{l{g}}}DlALlDl}{{{f{{l{c}}}}g}{{l{i}}}DlCl{{Af{f}{{Ad{e}}}}}{{Dl{}{{I`{e}}}}}}{{{l{c}}g}{{l{i}}}DlCl{{Af{}{{Ad{e}}}}}{{Dl{}{{I`{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dl{ClALf}{{Af{f}{{Ad{e}}}}}{{Dl{}{{I`{e}}}}}}0``{{{f{DIh}}}{{l{Fb}}}}0{{{f{DIh}}{f{{l{Lb}}}}d}{{A`{Abn}}}}{{{f{DIh}}{f{{l{An}}}}d}{{A`{Abn}}}}{{{f{DIh}}}Ab}{{{f{DIh}}}{{A`{Abn}}}}1{{{f{DIh}}}{{A`{{l{Fb}}n}}}}{{{f{DIh}}}{{l{Cb}}}}{{{f{DIh}}{f{Ab}}}{{A`{Abn}}}}{{{f{DIh}}F`}{{A`{{l{Cb}}n}}}}{{{f{DIh}}Bd}{{A`{Abn}}}}5{{{f{DIh}}}{{A`{{l{Ah}}n}}}}01{{{f{DIj}}}{{f{{l{Cb}}}}}}`{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{CAfBBj}BBj}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}3{cc{}}{{}Gd}{{}c{}}{CAfBBj}7{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}4`````````````````````{{{f{DfDIl}}{f{{Bf{Bd}}}}ddd}{{A`{bn}}}}{{{f{DfDIl}}d}b}>>>>====;;;;::::9999{{{f{DIl}}}El}99998888{{{f{{Bf{Gd}}}}Gd{f{{BDj{El}}}}{Ch{Bd}}CDdd}{{A`{{Gj{DIl}}n}}}}8888{DIl{{A`{Abn}}}}7777666655559999```````````{{{f{BNl}}{Ch{{f{B`}}}}d}{{A`{{L`{KnKl}}n}}}}{{{f{BNl}}{Ch{{f{B`}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{BNl}}{Ch{{f{B`}}}}Lddd{Ch{{f{Dd}}}}{f{{l{An}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BNl}}{Ch{{f{B`}}}}Ldd{Ch{{f{Dd}}}}{f{{l{An}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BNl}}{Ch{{f{B`}}}}d}{{A`{{L`{LnLb}}n}}}}`{{{f{CLb}}}{{l{Nd}}}}{{{f{CLd}}}{{l{Nd}}}}{{{f{CLf}}}{{l{Lb}}}}`{{{f{DBl}}}{{l{Nd}}}}21{{{f{CLb}}}{{l{Bl}}}}{{{f{CLd}}}{{l{Bl}}}}{{{f{CLb}}}{{l{Kl}}}}{{{f{CLd}}}{{l{Kl}}}}55`46576{{{f{DBl}}}{{l{Kl}}}}16{{{f{CLb}}}{{l{O`}}}}{{{f{CLd}}}{{l{O`}}}}{{Dd{f{{Bf{{f{B`}}}}}}{f{B`}}}{{L`{KnKl}}}}{{Dd{f{{Bf{{f{B`}}}}}}{f{B`}}}{{L`{LnLb}}}}{{Dd{f{{Bf{{f{B`}}}}}}{f{B`}}Ld}{{L`{LfLb}}}}=<{{{f{DFh}}A@b}{{A`{Abn}}}}{{{f{DFh}}{f{Ab}}CCd}{{A`{Abn}}}}101010101010<>=`?>>`98````````{{fh}b}{{{f{BNl}}{Ch{{f{B`}}}}d}{{A`{{L`{KnKl}}n}}}}{{{f{BNl}}{Ch{{f{B`}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{BNl}}{Ch{{f{B`}}}}Lddd{Ch{{f{Dd}}}}{f{{l{An}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BNl}}{Ch{{f{B`}}}}Ldd{Ch{{f{Dd}}}}{f{{l{An}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{DIn}}}{{f{{l{An}}}}}}{{{f{BNl}}{Ch{{f{B`}}}}d}{{A`{{L`{LnLb}}n}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DJ`}}}DJ`}{{f{f{Dfc}}}b{}}{fb}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{f{DJ`}}{f{DJ`}}}d}{{f{f{c}}}d{}}00{{{f{DJ`}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{DJ`}}{f{Dfc}}}bADl}`{{}Gd}{{}c{}}{{{f{DJ`}}{f{B`}}}d}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}5````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{{DJb{c}}}}}{{DJb{c}}}{JfAl}}{{f{f{Dfc}}}b{}}{fb}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{cc{}}{{{f{B`}}}{{Ch{DJ`}}}}{{}Gd}{{}c{}}`{{{f{Df{DJb{c}}}}{f{B`}}}ChAl}{{{f{DfDJd}}{f{{Bf{Bd}}}}{Ch{Ld}}}{{Ch{c}}}{}}{{{f{Df{DJb{Lb}}}}{f{{Bf{Bd}}}}{Ch{Ld}}}{{Ch{Hb}}}}{{{f{Df{DJb{Kl}}}}{f{{Bf{Bd}}}}{Ch{Ld}}}{{Ch{Nn}}}}`{fc{}}{c{{A`{e}}}{}{}}{{c{Ch{Ld}}}{{A`{{DJh{}{{DJf{e}}}}n}}}{}{}}{{DJ`{Ch{Ld}}}{{A`{{DJb{Kl}}n}}}}{{DJ`{Ch{Ld}}}{{A`{{DJb{Lb}}n}}}}{{}{{A`{c}}}{}}{fAAl};````````{{fh}b}{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{CKd}}}CKd}{{f{f{Dfc}}}b{}}{fb}{{}CKd}{Gd{{f{c}}}{}}0{Gd{{f{Dfc}}}{}}0{Gdb}0{{{f{CKd}}{f{CKd}}}d}{{{f{DJj}}{f{DJj}}}d}{{f{f{c}}}d{}}00{{{f{CKd}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}0{{{f{B`}}}{{A`{DJj}}}}{{{f{B`}}g}{{A`{CKdn}}}{{Ij{B`}}}{{BAf{Ej}}}{{Ib{}{{Cj{{Hf{ce}}}}}}}}{{{f{CKd}}{f{Dfc}}}bADl}{{}Gd}0{{}c{}}0``{fc{}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{fAAl}044{{CKdGd}CKd}`````````````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{{Bf{Bd}}}}}{{Ch{DJl}}}}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{cc{}}=<{{{f{{Bf{Bd}}}}{f{Df{Gj{Bd}}}}}{{A`{{f{{Bf{Bd}}}}n}}}};:9=`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eAN`{}{{Ib{}{{Cj{c}}}}}}0{{AGde}ANb{}{{Ib{}{{Cj{c}}}}}}0{{{f{ANh}}}{{f{El}}}}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}{{Ch{{f{{Bf{c}}}}}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{AMl}}{f{AMl}}c}{{A`{AMln}}}AOh}{{{f{AOj}}{f{El}}}{{A`{Abn}}}}{{{f{AOj}}{f{El}}Fn}{{A`{Abn}}}}`{B@ne{}{{AN`{c}}ALf}}0{{B@nAGd}e{}{{ANb{c}}ALf}}0{{{AOd{B`}}}El}{{{f{AOj}}}{{f{El}}}}``{{AOh{f{{l{Fb}}}}{f{{l{Fb}}}}}{{A`{{l{Fb}}n}}}}{{{Gj{c}}AGd}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{Gj{c}}AGd}{{ALf{}{{ANj{e}}{ANl{c}}{ANn{g}}}}}{AO`{AOb{e}}}Jf{{H`{}{{Cj{e}}}}JhInJ`}}{{GdcAGd}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{GdAGd}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}Gd}{{Ch{c}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{AOj}}Gd}{{A`{Jjn}}}}{{{f{AOj}}Gd}Jj}{{}El}{{{f{BBd}}Gd}Jj}4{{BBfEl}{{A`{Mjn}}}}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}{{AGl{cgAGj}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}{{Ch{c}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{AMl}}{f{AMl}}}{{A`{{Hf{AMlAMl}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hf{{l{Ah}}{l{Ah}}}}n}}}}{{{f{El}}{f{El}}}{{A`{Eln}}}}`{{}c{}}0{g{{A`{AN`e}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}0{{AGdg}{{A`{ANbe}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}0{B@n{{A`{eg}}}{}{{AN`{c}}ALf}{}}0{{B@nAGd}{{A`{eg}}}{}{{ANb{c}}ALf}{}}0{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}Gd}cJf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}0{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}gJf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{Gdc{}}0{{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}{Ch{Id}}}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}```````````{{{f{AMl}}{f{AMl}}c}{{A`{AMln}}}AOh}{{AOh{f{{l{Fb}}}}{f{{l{Fb}}}}}{{A`{{l{Fb}}n}}}}=<`````````{{}b}0{{}d}`{{{f{{L`{LfLb}}}}{f{{l{An}}}}CK`{Gf{Hb}{{Ad{AMf}}}}{Gf{AMf}{{Ad{Hb}}}}{f{AMh}}{f{AMh}}}{{A`{{l{Lb}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{B`}}}}{Gf{Hb}{{Ad{AMf}}}}{Gf{AMf}{{Ad{Hb}}}}{f{AMh}}{f{AMh}}}{{A`{{l{Lb}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{B`}}}}{f{{l{An}}}}CK`}{{A`{{L`{LfLb}}n}}}}```{{c{Ch{Id}}}D@l{}}{{{D@n{Hb}}{D@n{Bd}}{Ch{Id}}}DA`}{{{D@n{Hb}}{D@n{Bd}}{Ch{Id}}}DAb}`{CMhBBj}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{CMhLd}BBj}3{{CMhBBjLd}BBj}{{CMhDd}BBj}555{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}8{cc{}}9{{}Gd}{{}c{}};;;;;;;;;;{{CMh{Ch{Dd}}BBjCK`}BBj}{{CMhBBj}BBj}={{CMh{f{B`}}}BBj}>;0>>>>>>>1{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}6{CMhBBj}0?0`{{{f{BJb}}{f{AAn}}{f{C`}}}{{A`{Abn}}}}{{{f{BJb}}}{{A`{{f{Dd}}n}}}}`{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}DJn}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{DJn{Ch{{f{AGd}}}}}{{A`{AEln}}}}{cc{}}{{}Gd}{{}c{}}{{{f{DJn}}}d}{{GdGd}DJn}{{{f{DfDJn}}{Cn{Cl}}}b}{{{f{DfDJn}}}b}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}7`{{{f{{l{c}}}}}GdAl}0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DK`}}}DK`}{{f{f{Dfc}}}b{}}{fb}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{f{DK`}}{f{DK`}}}d}{{{f{DK`}}{f{DfHl}}}{{A`{bHn}}}}0{cc{}}{{{f{DK`}}{f{Dfc}}}bADl}{{}Gd}{{}c{}}{fc{}}{fEj}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{f{{A`{GlBC`}}}}{fAAl}6````````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DKb}}}DKb}{{f{f{Dfc}}}b{}}{fb}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{f{DKb}}{f{DKb}}}d}{{{f{DKb}}{f{DfHl}}}{{A`{bHn}}}}0{cc{}}{{{f{DKb}}{f{Dfc}}}bADl}{{}Gd}{{}c{}}{fc{}}{fEj}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{f{{A`{GlBC`}}}}{fAAl}6{{MbMb}Mb}{{{f{{l{Fb}}}}Jl}{{A`{bn}}}}{{{f{{ALn{Jl}}}}Jl}{{A`{bn}}}}```{{{f{Ab}}CF`}Ab}{{{f{Ff}}{f{Ff}}d}{{A`{Ffn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}ChM`{{Dn{}{{Ad{}}}}E`}}{{{f{Ab}}{f{C`}}}Ab}0{{{f{Ab}}Dd}Ab}0`{{fh}b}{{{f{DKd}}}{{f{AGf}}}}{{{f{DfDKd}}}{{Cn{Cl}}}}{{{f{DfDKd}}}{{f{DfAGf}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DKd}}}DKd}{{f{f{Dfc}}}b{}}{fb}{{}DKd}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{f{DKd}}}{{f{AGd}}}}{{{f{DfDKd}}Gd}b}{{{f{DKd}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{}Gd}{{}c{}}{{{f{DKd}}}Gd}{GdDKd}{{{f{DfDKd}}}b}70{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}{{{f{DKd}}}{{Ch{{f{DKf}}}}}}8`{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DHb}}}DHb}{{f{f{Dfc}}}b{}}{fb}{{}DHb}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{f{{BEb{ElA@l}}}}}El}{{{f{DHb}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{DHb}}}Gd}{{{f{DHb}}}{{N`{{BDj{El}}}}}}{{{f{B`}}dd}El}{{{f{DBd}}Bd{Ch{Gd}}d{Ch{{f{{BDj{El}}}}}}GdGd{Ch{{f{CDf}}}}{Ch{Bd}}Bd{Ch{{f{CDh}}}}dd{f{Df{Ch{Gd}}}}d}{{A`{{Hf{{BDj{El}}GdGd}}n}}}}{{}Gd}{{}c{}}{fc{}}{c{{A`{e}}}{}{}}{{{f{DBd}}{f{CD`}}}{{A`{DHbn}}}}{{}{{A`{c}}}{}}{fAAl}5{{DHb{N`{{BDj{El}}}}}DHb}````{{{f{{l{c}}}}eAM`d}{{Gj{Jl}}}Dl{{D`{}{{Cj{Ch}}}}}}{{{f{{Bf{f}}}}cJle}{{Gj{Jl}}}{{D`{}{{Cj{Ch}}}}}{{Dn{fGdf}{{Ad{d}}}}}}``{{{f{DKh}}}{{f{Ab}}}}{{{f{CBh}}}{{A`{{l{Kl}}n}}}}{{{f{CBh}}}{{A`{{l{Nd}}n}}}}0{{{f{CBh}}}{{A`{{l{Bl}}n}}}}22112{{{f{CBh}}}{{A`{{l{O`}}n}}}}322{{{f{CBh}}{f{B`}}}{{A`{Abn}}}}{{{f{CBh}}Ld}{{A`{{l{Lb}}n}}}}1445`{{Gd{f{Df{Gj{d}}}}}b}```{{{f{AKh}}GdGd}AKh}0{{Gd{f{{Bf{Ff}}}}{f{DfFh}}}{{A`{{AMb{{l{Fb}}}}n}}}}{{{f{{Bf{Ff}}}}{f{{Bf{d}}}}{f{{Bf{d}}}}}{{A`{AMdn}}}}{{{f{{Bf{Ff}}}}{f{{Bf{d}}}}{f{{Bf{d}}}}}{{A`{{Kb{Hb}}n}}}}{{Dd{f{{Bf{Ff}}}}{f{{Bf{d}}}}{f{{Bf{d}}}}}{{A`{{l{Fd}}n}}}}{{Dd{f{{Bf{Ab}}}}}{{A`{{l{Fd}}n}}}}{{{f{Ab}}}{{A`{{Cn{Cl}}n}}}}{{{f{{Bf{Ab}}}}}{{A`{AMdn}}}}{{{f{{Bf{Ab}}}}}{{A`{{l{Fd}}n}}}}0```````````88```{{{f{BOj}}}{{f{{l{An}}}}}}{{{f{BOn}}}{{A`{{l{An}}n}}}}{{{f{BOn}}}{{l{An}}}}{{{f{BOn}}{f{{l{An}}}}}{{l{An}}}}{{{f{BOn}}{f{B`}}d}{{A`{{l{Bl}}n}}}}{{{f{BOn}}{f{{l{An}}}}dd}{{A`{{l{Bl}}n}}}}{{{f{BOn}}{f{B`}}}{{A`{{l{Bl}}n}}}}{{{f{BOn}}{f{B`}}d}{{A`{{l{Fb}}n}}}}{{{f{BOn}}{f{{l{An}}}}d}{{A`{{l{Fb}}n}}}}{{{f{BOn}}{f{{l{An}}}}Gd}{{A`{{l{An}}n}}}}{{{f{BOn}}{f{B`}}}{{A`{{l{Ah}}n}}}}{{{f{BOn}}{f{{l{An}}}}}{{A`{{l{Ah}}n}}}}{{{f{BOn}}{f{B`}}{f{El}}}{{A`{Abn}}}}5{{{f{BOn}}{f{{l{An}}}}dd}{{A`{{l{Fb}}n}}}}{{{f{BOn}}{f{B`}}}{{A`{{l{Fb}}n}}}}=<{{{f{{Bf{{f{{l{An}}}}}}}}{f{B`}}d}{{A`{{l{An}}n}}}}{{{f{BOn}}{f{B`}}{f{B`}}}{{A`{{l{An}}n}}}}0{{{f{BOn}}{f{B`}}{f{B`}}Gd}{{A`{{l{An}}n}}}}1{{{f{BOn}}{f{{l{An}}}}}{{l{Ah}}}}{{{f{BOn}}{f{{l{An}}}}Gd}{{A`{{l{j}}n}}}}0{{{f{{l{An}}}}{f{{l{An}}}}e}{{l{Ah}}}{{D`{}{{Cj{{f{B`}}}}}}}{{Dn{{f{B`}}{f{B`}}}{{Ad{c}}}}}}2{{{f{{l{An}}}}{f{{l{An}}}}Gded}{{A`{{l{j}}n}}}{{D`{}{{Cj{{f{B`}}}}}}}{{Dn{{f{B`}}{f{B`}}}{{Ad{c}}}}}}2{{{f{BOn}}{f{Ff}}}{{A`{{l{An}}n}}}}{{{f{{l{An}}}}{f{B`}}d}{{l{An}}}}{{{f{BOn}}}{{l{Fb}}}}0{{{f{BOn}}}{{l{An}}}}{{{f{BOn}}{f{Ff}}{f{Ff}}}{{A`{{l{An}}n}}}}4{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}505050{{{f{BOn}}{f{{l{An}}}}}{{l{An}}}}10{{{f{BOn}}{f{{l{Fb}}}}d}{{A`{{l{Lb}}n}}}}444````````{{eGdGd}{{DKj{Hb}}}{{Ij{B`}}}{{D`{}{{Cj{c}}}}}}{{eGdGd}{{Kb{Hb}}}{{Ij{{Bf{Bd}}}}}{{D`{}{{Cj{c}}}}}}``````````````{{fh}b}0{{{f{BKf}}}Aj}{{Dd{Gj{{Cn{Cl}}}}{f{AGd}}}{{A`{Abn}}}}{{Dd{Gj{{Cn{Cl}}}}{f{AGd}}{Ch{{f{{DHj{DdDd}}}}}}}{{A`{Abn}}}}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}{BhMh}}{{Abc}{}{BhMh}}{{AbAb}}`{{{f{DfAb}}{f{Ab}}}{{A`{{f{DfAb}}n}}}}{{{f{Ab}}}{{Ch{Gd}}}}0{{{f{BKf}}F`}{{l{Fb}}}}{{{f{BKf}}}{{A`{{l{Fb}}n}}}}`{{{f{Ab}}}{{A`{{f{{l{Cb}}}}n}}}}{{{f{Ab}}Gd}{{f{{Cn{Cl}}}}}}{{{f{BKf}}}{{f{AGf}}}}{{{f{DfBKf}}}{{f{DfAGf}}}}{{{f{Ab}}}{{l{Ah}}}}{{{f{DfBKf}}}{{f{Df{l{c}}}}}Dl}{{{f{BKf}}}{{f{{l{c}}}}}Dl}{{{f{Ab}}}{{f{BKf}}}}{{{f{Ab}}}{{f{Ab}}}}0{{{f{DfBKf}}}{{A`{Gdn}}}}{{{f{DfAb}}}{{A`{Gdn}}}}{{{f{Ab}}}{{A`{{f{{l{Bb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Fd}}}}n}}}}{{{f{BKf}}{f{Ab}}}{{A`{Abn}}}}00{{{f{Ab}}}{{A`{{f{{l{Bl}}}}n}}}}{f{{f{c}}}{}}000{{{f{Df}}}{{f{Dfc}}}{}}000{{{f{BKf}}}{{Ch{{Cn{Fl}}}}}}{{{f{BKf}}{f{El}}Fn}{{A`{Abn}}}}{{{f{Ab}}{f{El}}}{{A`{Abn}}}}0{{{f{Ab}}{f{El}}Fn}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{AMl}}n}}}}8{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Ab}}c}{{A`{Abn}}}Bj}{{{f{BKf}}}{{Gh{{Gb{{Cn{Cl}}}}{Gf{{f{{Cn{Cl}}}}}{{Ad{Gd}}}}}}}}{{{f{Ab}}}{{`{{D`{}{{Cj{Gd}}}}}}}}{{{f{BKf}}}{{f{{Gj{{Cn{Cl}}}}}}}}{{{f{DfBKf}}}{{f{Df{Gj{{Cn{Cl}}}}}}}}{{{f{DfAb}}}{{f{Df{Gj{{Cn{Cl}}}}}}}}{{{f{Ab}}}Ab}{{{f{Mb}}}Mb}1{{{f{BKf}}}{{N`{BKf}}}}{{f{f{Dfc}}}b{}}0{fb}0{{{f{DfAb}}}b}{{{f{Ab}}}{{A`{{f{{L`{KnKl}}}}n}}}}{{{f{Ab}}}{{A`{{f{{L`{LfLb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{L`{LjLh}}}}n}}}}{{}Ab}{Gd{{f{c}}}{}}00{{{f{Ab}}}f}1{Gd{{f{Dfc}}}{}}000{{{f{Ab}}c}{}{BhMh}}{{Abc}{}{BhMh}}{{{f{Ab}}{f{Ab}}}}{{AbAb}}{Gdb}000{{{f{BKf}}}Ab}{{{f{BKf}}}{{f{El}}}}{{{f{Ab}}}{{A`{{f{{L`{LlLb}}}}n}}}}{{{f{Mb}}{f{Mb}}}d}{{{f{Ab}}{f{Ab}}}d}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}{{{f{Ab}}c}{}BAh}{{{f{Ab}}{f{B`}}}{{A`{{l{Bl}}n}}}}:21{{{f{Ab}}{f{B`}}}};44{{f{f{c}}}d{}}00{{{f{Ab}}}Gd}{{{f{Ab}}}{{A`{Abn}}}}{{{f{DfAb}}{f{Ab}}}{{A`{{f{DfAb}}n}}}}{{{f{Ab}}JjGd}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{Eh}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Ef}}}}n}}}}{{{f{BKf}}}{{Eb{Oj}}}}{{{f{Ab}}AIb}{{A`{Abn}}}}{{{f{BKf}}{f{{l{Bl}}}}}{{A`{Abn}}}}{{{f{Mb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Ab}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{Ab}}}Ej}{cc{}}000{{{L`{LnLb}}}Ab}{DKlAb}{{{L`{LlLb}}}Ab}{{{l{c}}}AbDl}{{{L`{KnKl}}}Ab}{{{L`{LfLb}}}Ab}{{Dd{f{{Bf{Jj}}}}d}{{A`{Abn}}}}{{Dd{f{{Bf{Jj}}}}{f{El}}d}{{A`{Abn}}}}{{Dd{Cn{Cl}}}{{A`{Abn}}}}{{Dd{Gj{{Cn{Cl}}}}}{{A`{Abn}}}}{{Dd{Gj{{Cn{Cl}}}}{f{El}}}Ab}{cAb{{Ib{}{{Cj{Jl}}}}}}{cAb{{Ib{}{{Cj{{f{Kd}}}}}}}}{cAb{{Ib{}{{Cj{Kf}}}}}}{cAb{{Ib{}{{Cj{Ob}}}}}}{cAb{{Ib{}{{Cj{{Ch{Ob}}}}}}}}{cAb{{Ib{}{{Cj{{f{Kf}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Kf}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Nn}}}}}}}}{cAb{{Ib{}{{Cj{{f{Jl}}}}}}}}{cAb{{Ib{}{{Cj{Ej}}}}}}{cAb{{Ib{}{{Cj{{Ch{Ej}}}}}}}}{cAb{{Ib{}{{Cj{{f{B`}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{{f{B`}}}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Jl}}}}}}}}{cAb{{Ib{}{{Cj{{f{Nf}}}}}}}}{cAb{{Ib{}{{Cj{Nn}}}}}}{cAb{{Ib{}{{Cj{{f{d}}}}}}}}{cAb{{Ib{}{{Cj{d}}}}}}{cAb{{Ib{}{{Cj{{Ch{d}}}}}}}}{cAb{{Ib{}{{Cj{Nf}}}}}}{cAb{{Ib{}{{Cj{{Ch{Nf}}}}}}}}{cAb{{Ib{}{{Cj{{f{Nn}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Hb}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Bd}}}}}}}}{cAb{{Ib{}{{Cj{{f{Aj}}}}}}}}{cAb{{Ib{}{{Cj{Bd}}}}}}{cAb{{Ib{}{{Cj{Hb}}}}}}{cAb{{Ib{}{{Cj{{f{Hb}}}}}}}}{cAb{{Ib{}{{Cj{{f{Bd}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Of}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Kd}}}}}}}}{cAb{{Ib{}{{Cj{{f{Of}}}}}}}}{cAb{{Ib{}{{Cj{Kd}}}}}}{cAb{{Ib{}{{Cj{Of}}}}}}{cAb{{Ib{}{{Cj{Aj}}}}}}{cAb{{Ib{}{{Cj{{Ch{Aj}}}}}}}}{cAb{{Ib{}{{Cj{{f{Ob}}}}}}}}{{Dd{Gj{Aj}}}Ab}{{Dd{Gj{Kd}}}Ab}{{Dd{Gj{Kf}}}Ab}{{Dd{Gj{Jl}}}Ab}{{Dd{Gj{Of}}}Ab}{{Dd{Gj{Bd}}}Ab}{{Dd{Gj{Nl}}}Ab}{{Dd{Gj{Hb}}}Ab}{{Dd{Gj{Nn}}}Ab}{{Dd{Gj{Ob}}}Ab}{{Dd{Gj{Nf}}}Ab}{{DdGd{f{El}}}Ab}{{{f{Ab}}GdGd}Ab}{{{f{BKf}}Gd}{{A`{Jjn}}}}{{{f{Ab}}}Gd}{{{f{Ab}}}Jn}{{{f{Ab}}}Ab}{{{f{BKf}}}{{Ch{{Nb{Fl}}}}}}{{{f{BKf}}Gd}{{Ch{{f{K`}}}}}}{{{f{BKf}}GdGd}{{Ch{{f{K`}}}}}}{{{f{BKf}}Gd}Jj}{{{f{Ab}}{f{B`}}}}{{{f{Ab}}c}{}BAh}{{{f{Ab}}{f{Ab}}}}210{{{f{BKf}}}d}{{{f{Mb}}{f{Dfc}}}bADl}{{{f{Ab}}{Ch{Gd}}}Ab}{{{f{Ab}}}{{A`{{f{{l{O`}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Kl}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Lb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nd}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Fb}}}}n}}}}`{{{f{Ab}}}{{A`{{l{Ah}}n}}}}{{}Gd}000{{}c{}}000{{}Ff}{AbAAn}2{BFjAb}{AbAb}>{{{f{Ab}}}{{A`{{l{Bl}}n}}}}000{{{f{BKf}}}{{l{Bl}}}}0{{}d}0{{{f{Ab}}}Mb}{{{f{Ab}}}DKn}{{{f{Ab}}}{{`{{D`{}{{Cj{Ab}}}}}}}}{{{f{BKf}}}Gd}{{{f{Ab}}}Gd}{{{f{BKf}}Gd}Ab}{{{f{Ab}}}{{A`{{f{{l{Ah}}}}n}}}}{AbBBj}{{{f{Ab}}{f{B`}}}}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}BAh}210{{{f{Ab}}}{{A`{{Ch{c}}n}}}Mh}{{{f{BKf}}}{{A`{Mjn}}}}{{{f{BKf}}}{{Ch{Aj}}}}{{{f{Ab}}}Mj}1232{{AbAb}}{{Abc}{}{BhMh}}{{{f{Ab}}c}{}{BhMh}}8>={{{f{BKf}}}{{A`{Gdn}}}}{{{f{BKf}}}{{f{Dd}}}}{{Ddc}Ab{{Ij{{Bf{{f{B`}}}}}}}}{{Ddc}Ab{{Ij{{Bf{Kf}}}}}}{{Ddc}Ab{{Ij{{Bf{{Ch{Nn}}}}}}}}{{Ddc}Ab{{Ij{{Bf{{Ch{Of}}}}}}}}{{Ddc}Ab{{Ij{{Bf{{Ch{Hb}}}}}}}}{{Ddc}Ab{{Ij{{Bf{Nl}}}}}}{{Ddc}Ab{{Ij{{Bf{{Ch{Jl}}}}}}}}{{Ddc}Ab{{Ij{{Bf{{Ch{Bd}}}}}}}}{{Ddc}Ab{{Ij{{Bf{BB`}}}}}}{{Ddc}Ab{{Ij{{Bf{{Ch{d}}}}}}}}{{Dd{Nh{Kf}}}Ab}{{Ddc}Ab{{Ij{{Bf{{Ch{{Gj{Bd}}}}}}}}}}{{Ddc}Ab{{Ij{{Bf{{Ch{Aj}}}}}}}}{{Dd{Nh{Nn}}}Ab}{{Ddc}AbBFj}{{Ddc}Ab{{Ij{{Bf{{Ch{{f{{Bf{Bd}}}}}}}}}}}}{{Ddc}Ab{{Ij{{Bf{Jj}}}}}}{{Ddc}Ab{{Ij{{Bf{AMf}}}}}}{{Dd{Nh{Jl}}}Ab}{{Ddc}Ab{{Ij{{Bf{Hb}}}}}}{{Ddc}Ab{{Ij{{Bf{Nn}}}}}}{{Ddc}Ab{{Ij{{Bf{Ab}}}}}}{{Ddc}Ab{{Ij{{Bf{{f{{Bf{Bd}}}}}}}}}}{{Ddc}Ab{{Ij{{Bf{{Ch{Ab}}}}}}}}{{Ddc}Ab{{Ij{{Bf{{Ch{BBb}}}}}}}}{{Ddc}Ab{{Ij{{Bf{{Ch{Ej}}}}}}}}{{Ddc}Ab{{Ij{{Bf{Aj}}}}}}{{Ddc}Ab{{Ij{{Bf{{Ch{Kd}}}}}}}}{{Ddc}Ab{{Ij{{Bf{{Ch{BB`}}}}}}}}{{Ddc}Ab{{Ij{{Bf{{Ch{{Eb{B`}}}}}}}}}}{{Ddc}Ab{{Ij{{Bf{Ob}}}}}}{{Ddc}Ab{{Ij{{Bf{{Ch{Kf}}}}}}}}{{Ddc}Ab{{Ij{{Bf{Kd}}}}}}{{Ddc}Ab{{Ij{{Bf{{Ch{Nf}}}}}}}}{{Ddc}Ab{{Ij{{Bf{Nf}}}}}}{{Ddc}Ab{{Ij{{Bf{{Ch{AMf}}}}}}}}{{Dd{Nh{Hb}}}Ab}{{Ddc}Ab{{Ij{{Bf{Ej}}}}}}{{Ddc}Ab{{Ij{{Bf{{Eb{{Bf{Bd}}}}}}}}}}{{Dd{f{Ab}}}Ab}{{Ddc}Ab{{Ij{{Bf{{Ch{{f{B`}}}}}}}}}}{{Ddc}Ab{{Ij{{Bf{{Eb{B`}}}}}}}}{{Ddc}Ab{{Ij{{Bf{{Gj{Bd}}}}}}}}{{Ddc}Ab{{Ij{{Bf{AMj}}}}}}{{Ddc}Ab{{Ij{{Bf{d}}}}}}{{Ddc}Ab{{Ij{{Bf{BBb}}}}}}{{Ddc}Ab{{Ij{{Bf{Bd}}}}}}{{Ddc}Ab{{Ij{{Bf{{Ch{AMj}}}}}}}}{{Ddc}Ab{{Ij{{Bf{Of}}}}}}{{Ddc}Ab{{Ij{{Bf{{Ch{{Eb{{Bf{Bd}}}}}}}}}}}}{{Ddc}Ab{{Ij{{Bf{{Ch{Nl}}}}}}}}{{Ddc}Ab{{Ij{{Bf{Jl}}}}}}{{Ddc}Ab{{Ij{{Bf{{Ch{Ob}}}}}}}}{{Dd{f{El}}}Ab}{{{f{BKf}}GdGd}Ab}{{DdGd}Ab}{{{f{DfDKn}}}Ch}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}{f{B`}}}{{A`{{l{Bl}}n}}}}{{{f{Ab}}c}{}BAh}302{{{f{Ab}}{f{B`}}}}{{{f{Ab}}}{{A`{{f{ADh}}n}}}}{{{f{BKf}}}Gd}`{{{f{Ab}}}{{Cn{Jd}}}}{{{f{Ab}}}{{A`{Mjn}}}}{{{f{BKf}}AjA@`}{{A`{Mjn}}}}{{{f{BKf}}}Ab}{{{f{Ab}}c}{}{BhMh}}:{{Abc}{}{BhMh}}{{{f{DfBKf}}Dd}b}{{{f{DfAb}}Dd}{{f{DfAb}}}}{{{f{Ab}}{f{{Bf{B@f}}}}}{{A`{Abn}}}}05{MbMb}{{{f{BKf}}{f{Dn}}A@b}{{A`{Abn}}}}{{{f{Ab}}Ajdd{Ch{Kf}}}{{A`{Abn}}}}{{{f{Ab}}Gddd{Ch{Kf}}}{{A`{Abn}}}}{{{f{Ab}}Gd}Ab}{{{f{DfAb}}Mb}b}{{{f{BKf}}Hb}Ab}{{{f{DfBKf}}}b}{{{f{DfAb}}}b}{{{f{Ab}}{Ch{Kf}}}Ab}{{{f{DKn}}}{{Hf{Gd{Ch{Gd}}}}}}{{{f{BKf}}HbGd}Ab}{{{f{Ab}}HbGd}Ab}{{{f{Ab}}F`}{{A`{Abn}}}}{{{f{BKf}}F`}{{A`{Abn}}}}{{{f{BKf}}Hb}{{Hf{AbAb}}}}{{{f{Ab}}Hb}{{Hf{AbAb}}}}{{{f{BKf}}Bd}{{Ch{Aj}}}}{{{f{BKf}}Bd}{{A`{Mjn}}}}{{{f{Ab}}}{{A`{{f{{l{An}}}}n}}}}{{{f{Ab}}Gd}{{A`{{Eb{B`}}n}}}}{{{f{Ab}}{f{El}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{j}}}}n}}}}{{{f{Ab}}c}{}{BhMh}}{{AbAb}}{{Abc}{}{BhMh}}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}}{{A`{cn}}}Mh}{{{f{BKf}}}{{A`{Mjn}}}}{{{f{Ab}}}{{A`{Mjn}}}}{{{f{Ab}}{Ch{Gd}}}Ab}{{{f{BKf}}{f{{l{Fb}}}}}{{A`{Abn}}}}{{{f{Ab}}{f{{Bf{A@h}}}}Mb}Ab}{{{f{Ab}}{f{{Bf{A@h}}}}}Ab}{{{f{BKf}}{f{{Bf{Jl}}}}}{{A`{Abn}}}}{{{f{BKf}}{f{{Bf{Jl}}}}}Ab}{{{f{BKf}}{f{{l{Fb}}}}}Ab}{{{f{Ab}}{f{{Bf{Jl}}}}}Ab}{{{f{Ab}}}{{A`{{f{{L`{LnLb}}}}n}}}}{{{f{Ab}}GdB@b}{{Cn{Cl}}}}{{{f{Ab}}{Ch{{f{B`}}}}d}{{A`{AAnn}}}}{{{f{Ab}}}{{A`{Abn}}}}{fc{}}0{{{f{Ab}}}{{Eb{Ab}}}}{fEj}{{AbAb}{{A`{Abn}}}}{{{f{Ab}}}{{Ch{{f{{l{Cb}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Bb}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Fd}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Bl}}}}}}}}{{{f{Ab}}}{{Ch{{f{AMl}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{KnKl}}}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{LfLb}}}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{LjLh}}}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{LlLb}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Eh}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Ef}}}}}}}}{c{{A`{e}}}{}{}}00{{{Hf{{f{BAj}}{Cn{Cl}}}}}{{A`{Abn}}}}{{{Hf{{f{BAj}}{Gj{{Cn{Cl}}}}}}}{{A`{Abn}}}}{{{Hf{Dd{Cn{Cl}}}}}{{A`{Abn}}}}{{{Hf{Dd{Gj{{Cn{Cl}}}}}}}{{A`{Abn}}}}4{{{f{Ab}}}{{Ch{{f{{l{O`}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Kl}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Lb}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Nd}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Fb}}}}}}}}{{}{{A`{c}}}{}}000{{{f{Ab}}}{{Ch{{f{{l{Ah}}}}}}}}{{AbAb}{{A`{Abn}}}}{{Ddc}{{A`{Ab}}}{}}{{{f{Ab}}}{{Ch{{f{ADh}}}}}}{{{f{DfAb}}{Kh{c}}}dDl}{{{f{Ab}}}{{Ch{{f{{l{An}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{j}}}}}}}}5{{{f{Ab}}}{{Ch{{f{{L`{LnLb}}}}}}}}{f{{A`{GlBC`}}}}{{{f{Ab}}}{{Ch{{f{{l{Od}}}}}}}};{{{f{Ab}}}{{Ch{{f{{l{Nj}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Oh}}}}}}}}{fAAl}000{{{f{Ab}}}{{A`{{f{{l{Od}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Fb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nj}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Oh}}}}n}}}}{{{f{BKf}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{BKf}}}{{A`{{f{{l{c}}}}n}}}Dl}{{{f{BKf}}Bd}{{Ch{Aj}}}}{{{f{BKf}}Bd}{{A`{Mjn}}}}{{}c{}}000{{AbDd}Ab}{{{f{Ab}}c}Ab{BhMh}}{{{f{Ab}}{f{{l{Bl}}}}{f{Ab}}}{{A`{Abn}}}}``{{fh}b}{{{f{Ed}}}{{f{Ab}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Ed}}}Ed}{{f{f{Dfc}}}b{}}{fb}{{{f{Ed}}}Ab}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{cc{}}{{}Gd}{{}c{}}{{{DL`{Ab}}}Ed}{{{f{DfEd}}{f{Df{Cn{Cl}}}}}b}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}6{{{f{DfEd}}{f{Df{Cn{Cl}}}}e}c{}{{Dn{{f{Ed}}}{{Ad{c}}}}}}````{{{f{Ab}}{f{Ab}}c}{{A`{Abn}}}{{Af{{f{Ab}}{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{BLb{}{{Ad{c}}}}{f{Ab}}}c{}}{{{f{BLf}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bn}}}}{f{Ab}}}{{A`{Abn}}}}`210210210210``{{{f{CBj}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{G`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{CBj}}c}{{A`{Abn}}}Bj}{{{f{{l{G`}}}}c}{{A`{Abn}}}Bj}```{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{CMd}}}CMd}{{f{f{Dfc}}}b{}}{fb}{{}CMd}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{f{CMd}}{f{CMd}}}d}{{f{f{c}}}d{}}00{{{f{CMd}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{CMd}}{f{Dfc}}}bADl}{{}Gd}{{}c{}}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}4","D":"AEKnBFb","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",11836],[5,"StructType",1995,11837],[5,"ChunkedArray",17,11838],[6,"PolarsError",3584,11839],[6,"Result",11840],[5,"Series",11297,11841],[17,"Output"],[10,"FnMut",11842],[5,"ListType",1995,11837],[1,"f64"],[10,"PolarsNumericType",1995,11837],[5,"StringType",1995,11837],[1,"str"],[5,"BinaryType",1995,11837],[1,"u8"],[1,"slice"],[10,"Num",11843],[10,"ToPrimitive",11844],[5,"BooleanType",1995,11837],[10,"NumOpsDispatchInner",11782,11845],[6,"GroupsProxy",4231,11846],[5,"FixedSizeListType",1995,11837],[5,"ObjectType",1995,11837],[10,"PolarsObject",1547,11847],[6,"Option",11848],[17,"Item"],[10,"Array",11849],[5,"Box",11850],[10,"Iterator",11851],[5,"AmortizedListIter",11852],[5,"PlSmallStr",1995,11853],[0,"mut"],[17,"IsNested"],[5,"FalseT",1995,11837],[10,"PolarsDataType",1995,11837],[10,"Fn",11842],[10,"Copy",11854],[6,"Cow",11855],[5,"AmortSeries",11758,11856],[5,"Float64Type",1995,11837],[5,"Float32Type",1995,11837],[5,"String",11857],[6,"DataType",1995,11858],[5,"View",11859],[5,"SortOptions",1675,11860],[5,"UInt32Type",1995,11837],[5,"BinaryOffsetType",1995,11837],[6,"Column",3959,11861],[5,"SortMultipleOptions",1675,11860],[10,"PolarsIntegerType",1995,11837],[10,"MetadataTrait",1263,11862],[6,"CastOptions",1157,11863],[10,"NumOpsDispatchCheckedInner",11803,11864],[5,"Iter",11865],[1,"usize"],[1,"fn"],[5,"Map",11866],[5,"Vec",11867],[5,"CompactString",11868],[5,"MetadataProperties",1263,11869],[10,"DoubleEndedIterator",11870],[1,"i64"],[5,"OffsetsBuffer",11871],[1,"tuple"],[17,"HasViews"],[17,"IsObject"],[5,"Formatter",11872],[5,"Error",11872],[17,"Array"],[10,"IntoIterator",11873],[5,"Bitmap",11874],[10,"Borrow",11875],[10,"PolarsAsRef",11876],[10,"AsRef",11877],[10,"IntoParallelIterator",11878],[10,"Send",11854],[10,"Sync",11854],[10,"NoOption",11879],[10,"ExactSizeIterator",11880],[10,"Clone",11881],[10,"TrustedLen",11882],[6,"AnyValue",1995,11883],[1,"u32"],[5,"MetadataFlags",1263,11869],[10,"PolarsObjectSafe",1547,11847],[5,"BinaryArray",11884],[1,"f32"],[1,"u64"],[5,"Metadata",1263,11869],[5,"RwLockWriteGuard",11885],[5,"Int32Type",1995,11837],[5,"DateType",1995,11837],[5,"Logical",1995,11886],[5,"Int64Type",1995,11837],[6,"TimeUnit",1995,11887],[5,"DatetimeType",1995,11837],[5,"Int128Type",1995,11837],[5,"DecimalType",1995,11837],[5,"DurationType",1995,11837],[5,"TimeType",1995,11837],[10,"PolarsFloatType",1995,11837],[6,"IsSorted",11297,11888],[10,"PolarsIterator",1206,11889],[6,"ChunkedArrayLayout",17,11838],[10,"NumCast",11844],[5,"Scalar",4601,11890],[6,"MetadataReadGuard",1263,11891],[5,"IMMetadata",1263,11892],[5,"Arc",4601,11893],[5,"RwLockReadGuard",11885],[5,"Int8Type",1995,11837],[1,"i8"],[5,"Range",11894],[5,"UInt64Type",1995,11837],[1,"i128"],[1,"i32"],[5,"Int16Type",1995,11837],[1,"i16"],[5,"UInt16Type",1995,11837],[1,"u16"],[5,"UInt8Type",1995,11837],[5,"Field",1995,11895],[10,"ParallelIterator",11878],[10,"IndexedParallelIterator",11878],[6,"QuantileInterpolOptions",4601,11896],[5,"RollingOptionsFixedWindow",4601,11897],[10,"PolarsOpsNumericType",11898],[10,"Sized",11854],[5,"ChunkId",4601,11899],[17,"IsStruct"],[5,"RandomState",11900],[5,"BytesHash",11901],[5,"OwnedRepr",11902],[1,"array"],[5,"Dim",11903],[5,"ArrayBase",11904],[5,"ViewRepr",11904],[6,"Either",11905],[5,"TypeId",11906],[5,"DataFrame",3683,11907],[5,"NullableIdxSize",4601,11899],[10,"FnOnce",11842],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",851,11908],[5,"AnonymousListBuilder",879,11909],[5,"AnonymousOwnedListBuilder",879,11909],[5,"ListBooleanChunkedBuilder",879,11910],[5,"ListPrimitiveChunkedBuilder",879,11911],[10,"ListBuilderTrait",879,11912],[10,"ChunkedBuilder",879,11913],[5,"ListStringChunkedBuilder",879,11914],[5,"ListBinaryChunkedBuilder",879,11914],[5,"ListNullChunkedBuilder",879,11915],[5,"BinViewChunkedBuilder",879,11916],[10,"ViewType",11917],[5,"BooleanChunkedBuilder",879,11918],[5,"NullChunkedBuilder",879,11919],[5,"PrimitiveChunkedBuilder",879,11920],[5,"NullChunked",11921],[10,"NewChunkedArray",879,11913],[10,"Hasher",11922],[10,"ChunkedCollectInferIterExt",1186,11923],[10,"ChunkedCollectIterExt",1186,11923],[10,"Canonical",1200,11924],[10,"ChunkedCollectParIterExt",1202,11925],[10,"FromParIterWithDtype",1202,11925],[5,"BooleanArray",11926],[5,"BoolIterNoNull",1206,11889],[5,"FixedSizeListArray",11927],[5,"FixedSizeListIterNoNull",1206,11889],[5,"SomeIterator",1206,11889],[5,"MetadataEnv",1263,11928],[10,"MetadataCollectable",1263,11929],[5,"Iter",11930],[5,"IterNames",11930],[5,"File",11931],[5,"Mutex",11932],[6,"MetadataMerge",1263,11869],[5,"RwLock",11885],[5,"ObjectArray",1547,11847],[6,"ArrowDataType",1995,11933],[10,"Any",11906],[10,"Debug",11872],[5,"BitmapIter",11934],[6,"ZipValidity",11935],[5,"ObjectChunkedBuilder",1624,11936],[10,"AnonymousObjectBuilder",1647,11937],[5,"ObjectRegistry",1647,11937],[10,"ChunkAgg",1675,11938],[17,"FuncRet"],[10,"ChunkApply",1675,11938],[10,"ChunkApplyKernel",1675,11938],[10,"ChunkSort",1675,11938],[10,"ChunkUnique",1675,11938],[10,"ChunkCast",1675,11938],[6,"FillNullStrategy",1675,11938],[10,"ChunkCompareEq",11297,11938],[10,"ChunkExplode",1675,11938],[10,"ChunkFillNullValue",1675,11938],[10,"ChunkFilter",1675,11938],[10,"ChunkFull",1675,11938],[10,"ChunkFullNull",1675,11938],[10,"ChunkAnyValue",1675,11938],[10,"ChunkCompareIneq",1675,11938],[10,"IsFirstDistinct",1675,11938],[10,"IsLastDistinct",1675,11938],[10,"ChunkQuantile",1675,11938],[10,"ChunkExpandAtIndex",1675,11938],[10,"Reinterpret",1675,11938],[10,"ChunkReverse",1675,11938],[10,"ChunkRollApply",1675,11938],[10,"ChunkSet",1675,11938],[10,"ChunkShift",1675,11938],[10,"ChunkShiftFill",1675,11938],[10,"SlicedArray",1675,11939],[10,"ChunkVar",1675,11938],[10,"ChunkTake",1675,11938],[10,"ChunkTakeUnchecked",1675,11938],[10,"ChunkBytes",1675,11938],[10,"ChunkZip",1675,11938],[10,"BinaryFnMut",1884,11940],[10,"StaticArray",1995,11941],[10,"TernaryFnMut",1884,11940],[10,"Error",11942],[10,"UnaryFnMut",1884,11940],[5,"PrimitiveArray",11943],[6,"SearchSortedSide",1925,11944],[5,"NoNull",4601,11945],[5,"RowsEncoded",11946],[5,"NaiveDateTime",11947],[6,"Tz",11948],[5,"NaiveTime",11949],[5,"CategoricalChunked",1995,11950],[5,"CategoricalChunkedBuilder",1995,11951],[10,"ArrayFromIter",1995,11952],[10,"ArrayFromIterDtype",1995,11952],[5,"OsStr",11953],[5,"Path",11954],[10,"AsRefDataType",1995,11858],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",11955],[10,"From",11877],[5,"BinaryViewArrayGeneric",11917],[6,"RevMapping",1995,11956],[10,"CategoricalMergeOperation",1995,11957],[10,"LogicalType",1995,11886],[6,"CategoricalOrdering",1995,11956],[5,"OwnedObject",1995,11883],[6,"UnknownKind",1995,11858],[5,"CompatLevel",1995,11858],[5,"Dimension",1995,11958],[6,"ReshapeDimension",1995,11958],[5,"CategoricalType",1995,11837],[6,"ArrowTimeUnit",1995],[6,"Ordering",11959],[10,"ArrayCollectIterExt",1995,11952],[5,"GlobalRevMapMerger",1995,11957],[1,"char"],[10,"FromIterator",11873],[10,"Into",11877],[10,"NumericNative",1995,11837],[5,"ArrowField",4601],[6,"IntegerType",11960],[6,"PrimitiveType",11961],[5,"TimeDelta",11962],[5,"NaiveDate",11963],[10,"GetAnyValue",1995,11883],[10,"IntoScalar",1995,11964],[5,"CatIter",1995,11950],[6,"Expr",4601,11965],[1,"u128"],[6,"PhysicalType",11960],[6,"ToCompactStringError",11868],[5,"Arguments",11872],[5,"StringCacheHolder",3545,11966],[5,"EnumChunkedBuilder",3564,11967],[5,"ErrString",3584,11839],[6,"PolarsWarning",3584,11968],[5,"Error",11969],[6,"Error",11970],[5,"Utf8Error",11971],[5,"TryReserveError",11972],[6,"ParquetError",11973],[5,"Error",11974],[10,"Display",11872],[5,"Schema",11975],[10,"IntoColumn",3959,11861],[6,"NullStrategy",3683,11907],[6,"UniqueKeepStrategy",3683,11907],[5,"HashSet",11976],[5,"Row",4489,11977],[5,"GroupBy",4231,11978],[5,"DynamicGroupOptions",4601,11979],[5,"RangeInclusive",11894],[5,"RangeFrom",11894],[5,"RangeTo",11894],[5,"RangeToInclusive",11894],[5,"RangeFull",11894],[5,"RecordBatchIter",3683,11907],[5,"PhysRecordBatchIter",3683,11907],[5,"LazyFrame",4601,11980],[10,"IntoSeries",11297,11981],[5,"RollingGroupOptions",4601,11979],[10,"RangeBounds",11894],[10,"IntoVec",4601,11945],[6,"IndexOrder",4601,11982],[5,"RecordBatchT",11983],[5,"StructArray",4601,11984],[5,"Duration",4601,11985],[5,"ScalarColumn",3959,11986],[6,"BitRepr",11297,11888],[5,"UnpivotArgsIR",4202,11987],[5,"GroupsIdx",4231,11846],[5,"UnitVec",11988],[6,"GroupByMethod",4231,11978],[5,"SlicedGroups",4231,11846],[5,"GroupsProxyParIter",4231,11846],[10,"UnindexedConsumer",11989],[6,"GroupsIndicator",4231,11846],[6,"IRAggExpr",11990],[10,"IntoGroupsProxy",4231,11991],[5,"Copied",11992],[5,"Zip",11993],[5,"GroupsProxyIter",4231,11846],[6,"RollingFnParams",4601,11994],[10,"IsFloat",11995],[10,"NativeType",11996],[10,"AggList",4473,11997],[10,"TakeExtremum",4473,11998],[10,"PhysicalAggExpr",4486,11999],[6,"AnyValueBuffer",4489,12000],[6,"AnyValueBufferTrusted",4489,12000],[5,"Node",12001],[6,"IR",12002],[5,"Arena",12001],[6,"AExpr",11990],[10,"JoinDispatch",4601,12003],[5,"JoinArgs",4601,12004],[5,"StructNameSpace",4601,12005],[10,"SeriesTrait",11297,11888],[10,"DfTake",4601,12006],[10,"DataFrameOps",4601,12007],[5,"CsvReader",4601,12008],[10,"PhysicalIoExpr",12009],[10,"MmapBytesReader",12010],[10,"LhsNumOps",11782,11845],[6,"Selector",4601,12011],[10,"NumOpsDispatch",11782,11845],[5,"LazyGroupBy",4601,11980],[5,"OptFlags",4601,12012],[10,"Allocator",12013],[5,"JoinBuilder",4601,11980],[10,"AnonymousScan",4601,12014],[5,"ScanArgsAnonymous",4601,12015],[10,"FunctionOutputField",4601,12016],[5,"SpecialEq",4601,12016],[6,"VisitRecursion",12017],[6,"FunctionExpr",4601,12018],[10,"ArgAgg",4601,12019],[5,"ArrayNameSpace",4601,12020],[5,"ListNameSpace",4601,12021],[5,"FieldsMapper",4601,12022],[5,"IpcStreamReader",4601,12023],[10,"Read",12024],[10,"ColumnsUdf",4601,12016],[10,"AsBinary",4601,12025],[10,"StringMethods",10214,12026],[5,"BorrowedFd",12027],[10,"AsFd",12027],[10,"AsList",4601,12028],[10,"AsRawFd",12029],[6,"AggExpr",4601,11965],[10,"SeriesSealed",4601,12030],[10,"AsString",4601,12031],[20,"MaybeUninit",12032],[10,"StringNameSpaceImpl",4601,12033],[5,"OwnedBatchedCsvReader",4601,12034],[5,"CsvWriter",4601,12035],[5,"BatchedWriter",12035],[10,"Write",12024],[5,"IpcWriter",4601,12036],[5,"BatchedWriter",12036],[5,"ParquetReader",4601,12037],[5,"BatchedParquetReader",4601,12038],[5,"ParquetWriter",4601,12039],[5,"BatchedWriter",12040],[5,"BatchedCsvReader",4601,12034],[5,"BinaryNameSpace",10119,12041],[6,"Operator",4601,11965],[10,"RenameAliasFn",4601,12016],[5,"UserDefinedFunction",4601,12042],[10,"ColumnBinaryUdf",4601,12016],[5,"InProcessQuery",4601,12043],[5,"HashMap",12044],[5,"CategoricalNameSpace",4601,12045],[10,"RoundSeries",4601,12046],[10,"TemporalMethods",11182,12047],[10,"NumOpsDispatchChecked",11803,11864],[5,"LazyCsvReader",4601,12048],[5,"ScanArgsIpc",4601,12049],[5,"LazyJsonLineReader",4601,12050],[5,"ScanArgsParquet",4601,12051],[5,"RollingOptionsDynamicWindow",4601,12052],[5,"Bounds",4601,12053],[6,"ClosedWindow",4601,12054],[6,"Label",4601,12054],[6,"StartBy",4601,12054],[5,"Window",4601,12055],[5,"CsvReadOptions",4601,12056],[5,"CsvParseOptions",4601,12056],[6,"CsvEncoding",4601,12056],[6,"CommentPrefix",4601,12056],[6,"NullValues",4601,12056],[6,"JoinCoalesce",4601,12004],[6,"JoinType",4601,12004],[5,"CsvWriterOptions",4601,12057],[6,"JoinValidation",4601,12004],[5,"SerializeOptions",4601,12057],[6,"QuoteStyle",4601,12057],[5,"AsOfOptions",4601,12058],[5,"IpcScanOptions",4601,12059],[6,"AsofStrategy",4601,12058],[5,"IpcWriterOptions",4601,12036],[6,"IpcCompression",4601,12036],[6,"InterpolationMethod",4601,12060],[5,"JsonWriterOptions",4601,12061],[6,"ClosedInterval",4601,12062],[6,"RankMethod",4601,12063],[5,"ParquetOptions",4601,12064],[5,"RankOptions",4601,12063],[6,"ParallelStrategy",4601,12064],[5,"ParquetWriteOptions",4601,12065],[6,"ParquetCompression",4601,12065],[5,"GzipLevel",4601,12065],[5,"BrotliLevel",4601,12065],[5,"ZstdLevel",4601,12065],[6,"DslPlan",4601,12066],[5,"When",4601,12067],[5,"Then",4601,12067],[5,"ChainedWhen",4601,12067],[5,"ChainedThen",4601,12067],[6,"Excluded",4601,11965],[6,"BooleanFunction",4601,12068],[6,"CategoricalFunction",4601,12069],[6,"TemporalFunction",4601,12070],[6,"PowFunction",4601,12071],[6,"StringFunction",4601,12072],[6,"StructFunction",4601,12073],[5,"StatisticsOptions",4601,12074],[5,"DatetimeArgs",4601,12075],[5,"DurationArgs",4601,12075],[5,"RollingCovOptions",4601,12076],[5,"StrptimeOptions",4601,12076],[5,"JoinOptions",4601,12076],[6,"WindowType",4601,12076],[6,"WindowMapping",4601,12076],[6,"NestedType",4601,12076],[5,"UnpivotArgsDSL",4601,12076],[5,"FileMetadata",4601,12077],[6,"LiteralValue",4601,12078],[5,"AnonymousScanOptions",4601,12079],[5,"UnionArgs",4601,12079],[5,"RollingVarParams",4601,11994],[5,"RollingQuantileParams",4601,11994],[6,"NonExistent",4601,12080],[10,"LazyFileListReader",4601,12081],[5,"CloudOptions",10350,12082],[10,"Ord",11959],[6,"ColumnOrder",12083],[10,"BinaryNameSpaceImpl",4601,12084],[5,"JsonLineReader",4601,12085],[10,"CrossJoin",4601,12086],[10,"ExprEvalExtension",4601,12087],[10,"DateMethods",10214,12088],[10,"DatetimeMethods",10214,12089],[10,"DurationMethods",10214,12090],[5,"IpcStreamWriterOption",4601,12023],[10,"BinaryUdfOutputField",4601,12016],[10,"Default",12091],[5,"CStr",12092],[5,"ParquetStatistics",4601],[5,"ColumnChunkMetadata",12093],[6,"NullBehavior",11809,12094],[5,"Weak",11893],[5,"DateLikeNameSpace",10745,12095],[10,"SeriesMethods",4601,12096],[10,"Scalar",12097],[10,"PartialEq",11959],[10,"ListNameSpaceExtension",4601,12098],[10,"Command",12099],[5,"PathBuf",11954],[10,"SerReader",4601,12100],[10,"SerWriter",4601,12100],[5,"IpcReader",4601,12059],[5,"IpcStreamWriter",4601,12023],[5,"JsonWriter",4601,12061],[5,"JsonReader",4601,12061],[10,"UdfSchema",4601,12101],[6,"ArrayFunction",12102],[6,"BinaryFunction",12103],[6,"ListFunction",12104],[6,"RangeFunction",12105],[5,"MutableStatistics",12106],[5,"CString",12107],[1,"never"],[5,"OsString",11953],[10,"ToOwned",11855],[5,"GrowableStruct",12108],[5,"MutableStructArray",12109],[10,"SchemaExt",4601,12110],[10,"FromData",10739,12111],[5,"Buffer",12112],[10,"FromDataUtf8",10739,12111],[10,"FromDataBinary",10739,12111],[5,"ListArray",12113],[6,"Ambiguous",4601,12080],[10,"NamedFromOwned",4601,12114],[10,"DataFrameJoinOps",4601,12115],[5,"FunctionOptions",12079],[10,"PartialOrd",11959],[6,"Context",12066],[5,"BoundsIter",4601,12055],[6,"ReaderBytes",12010],[10,"PolarsTemporalGroupby",4601,11979],[10,"Hash",11922],[10,"SeriesJoin",4601,12116],[10,"TimeMethods",10214,12117],[5,"NonZero",12118],[10,"IntoListNameSpace",4601,12098],[5,"StructValueIter",12119],[17,"DataType"],[10,"SchemaNamesAndDtypes",4601,12110],[10,"AsofJoinBy",4601,12120],[10,"ListNameSpaceImpl",4601,12121],[5,"ExprNameNameSpace",4601,12122],[5,"KeyValue",12123],[10,"IntoLazy",4601,11980],[10,"Literal",4601,12078],[5,"Null",4601,12078],[10,"CloneToUninit",11881],[5,"SuperTypeOptions",12124],[5,"RowIndex",12125],[10,"ChunkAggSeries",4601,12126],[10,"QuantileAggSeries",4601,12127],[10,"IndexToUsize",4601,12128],[10,"NamedFrom",4601,12114],[6,"RowGroupFetcher",12038],[6,"ScanSources",12129],[5,"SplitNChars",4601,12130],[5,"AnonymousScanArgs",4601,12014],[5,"Pin",12131],[5,"Request",11942],[10,"SeriesRank",4601,12063],[5,"BorrowedCursor",12132],[10,"VarInt",12133],[5,"IoSliceMut",12024],[10,"SeriesOpsTime",10214,12134],[10,"PolarsRound",4601,12135],[10,"ChunkedSet",4601,11898],[5,"SchemaDescriptor",12136],[6,"SeekFrom",12024],[10,"VarAggSeries",4601,12137],[5,"StringNameSpace",12138],[10,"TakeChunked",4601,12006],[5,"IRPlan",12002],[10,"ToDummies",4601,12139],[10,"PolarsTruncate",4601,12140],[5,"FileMetaData",12123],[5,"AllocError",12013],[5,"SchemaInferenceResult",11149,12141],[10,"PolarsUpsample",4601,12142],[10,"VecHash",4601,12143],[6,"JsonFormat",4601,12061],[5,"BTreeMap",12144],[10,"WriteDataFrameToFile",12100],[5,"IoSlice",12024],[6,"PrefilterMaskSetting",10029,12038],[5,"RowGroupMetadata",12145],[5,"MemSlice",12146],[6,"Filter",12147],[10,"ArrayNameSpace",10100,12148],[10,"AsArray",10100,12149],[6,"Buffer",10136,12150],[10,"AsString",10280,12026],[6,"Pattern",10280,12151],[5,"DatetimeInfer",10319,12152],[10,"StrpTimeParser",10319,12152],[17,"Error"],[10,"TryFromWithUnit",10319,12152],[6,"CloudType",10350,12082],[6,"SupportedCompression",10409,12153],[5,"AnonymousBuilder",10800,12154],[6,"RollingFunction",11042,12155],[6,"RollingFunctionBy",11073,12156],[5,"MutableNullArray",11118,12157],[5,"MutableBitmap",12158],[10,"AsSeries",11182,12047],[5,"Utf8Array",12159],[5,"_SerdeSeries",11861],[5,"SeriesIter",11297,12160],[5,"Rc",12161],[8,"FillNullLimit",1675],[10,"InitHashMaps",1995],[10,"InitHashMaps2",1995],[5,"TrueT",1995],[8,"PolarsResult",3584],[15,"IO",10009],[15,"Context",10009],[15,"Count",10003],[15,"Slice",10004],[8,"ChunkJoinOptIds",4601],[10,"ListFromIter",4601],[15,"Quantile",9885],[15,"Min",9885],[15,"Max",9885],[15,"IsBetween",10995],[15,"Any",10995],[15,"All",10995],[15,"GroupBy",9895],[15,"Union",9895],[15,"Sort",9895],[15,"Scan",9895],[15,"ExtContext",9895],[15,"DataFrameScan",9895],[15,"IR",9895],[15,"Select",9895],[15,"HStack",9895],[15,"MapFunction",9895],[15,"Cache",9895],[15,"Filter",9895],[15,"Distinct",9895],[15,"Slice",9895],[15,"Sink",9895],[15,"Join",9895],[15,"HConcat",9895],[15,"SortBy",9946],[15,"Filter",9946],[15,"Cast",9946],[15,"Sort",9946],[15,"Gather",9946],[15,"RenameAlias",9946],[15,"Ternary",9946],[15,"Function",9946],[15,"Window",9946],[15,"AnonymousFunction",9946],[15,"Slice",9946],[15,"BinaryExpr",9946],[15,"Round",10998],[15,"RoundSF",10998],[15,"Clip",10998],[15,"BackwardFill",10998],[15,"ForwardFill",10998],[15,"Random",10998],[15,"GatherEvery",10998],[15,"ValueCounts",10998],[15,"Rank",10998],[15,"ReplaceStrict",10998],[15,"CumCount",10998],[15,"CumSum",10998],[15,"CumProd",10998],[15,"CumMin",10998],[15,"CumMax",10998],[15,"Range",10006],[15,"ConcatHorizontal",11020],[15,"ConcatVertical",11020],[15,"ExtractGroups",11020],[15,"SplitExact",11020],[15,"Contains",11020],[15,"Find",11020],[15,"Replace",11020],[15,"DatetimeFunction",11034],[5,"Utf8Field",10136],[5,"CategoricalField",10136],[5,"DatetimeField",10136],[15,"Datetime",10210],[10,"Utf8FromIter",11293],[10,"BinaryFromIter",11293]],"r":[[1,12162],[2,12162],[3,12162],[4,12162],[6,11966],[7,12162],[8,12162],[9,12162],[13,12162],[14,12162],[16,11966],[17,11838],[18,11838],[19,11838],[24,12163],[116,11838],[140,11838],[141,11838],[169,11838],[171,11838],[226,11838],[279,11838],[425,11838],[471,11838],[576,11838],[579,11838],[720,11838],[851,11908],[879,11909],[880,11909],[881,11916],[882,11916],[883,11918],[884,11913],[885,11914],[886,11910],[887,11912],[888,11915],[889,11911],[890,11914],[891,11913],[892,11919],[893,11920],[894,11916],[1031,11913],[1047,11912],[1075,11913],[1140,11909],[1141,11909],[1142,11914],[1143,11910],[1144,11912],[1145,11915],[1146,11911],[1147,11914],[1155,11912],[1157,11863],[1186,11923],[1187,11923],[1200,11924],[1202,11925],[1203,11925],[1206,11889],[1207,11889],[1208,11889],[1209,11889],[1245,11889],[1261,12164],[1262,12164],[1268,11892],[1273,11869],[1274,11929],[1275,11928],[1276,11869],[1277,11869],[1278,11869],[1279,11891],[1280,11862],[1547,11847],[1548,11847],[1549,11847],[1550,11847],[1562,11847],[1593,11847],[1594,12165],[1624,11936],[1647,11937],[1648,11937],[1649,11937],[1650,11937],[1662,11937],[1663,11937],[1664,11937],[1667,11937],[1669,11937],[1676,11938],[1677,11938],[1678,11938],[1679,11938],[1680,11938],[1681,11938],[1682,11938],[1683,11938],[1684,11938],[1685,11938],[1686,11938],[1687,11938],[1688,11938],[1689,11938],[1690,11938],[1691,11938],[1692,11938],[1693,11938],[1694,11938],[1695,11938],[1696,11938],[1697,11938],[1698,11938],[1699,11938],[1700,11938],[1701,11938],[1702,11938],[1703,11938],[1706,11938],[1707,11938],[1717,11938],[1718,11939],[1720,11860],[1721,11860],[1735,11938],[1780,11938],[1783,11938],[1792,11938],[1795,11938],[1839,11938],[1845,11938],[1882,11938],[1884,11940],[1888,11940],[1889,11940],[1890,11940],[1891,11940],[1892,11940],[1893,11940],[1894,11940],[1895,11940],[1896,11940],[1897,11940],[1898,11940],[1899,11940],[1900,11940],[1901,11940],[1902,11940],[1903,11940],[1904,11940],[1905,11940],[1906,11940],[1907,11940],[1908,11940],[1909,11940],[1910,11940],[1911,11940],[1912,11940],[1913,11940],[1914,11940],[1915,11940],[1916,11940],[1917,11940],[1918,11940],[1919,11940],[1920,12166],[1921,12166],[1922,12167],[1923,12167],[1924,12167],[1928,11944],[1930,11944],[1949,11944],[1955,11939],[1956,12168],[1957,12168],[1958,12168],[1959,12168],[1962,12169],[1963,12170],[1964,12170],[1965,12170],[1966,12170],[1967,12170],[1968,12170],[1969,12170],[1970,12170],[1971,11939],[1972,11860],[1973,11860],[1984,12171],[1985,12172],[1986,12172],[1987,12172],[1988,12171],[1989,12171],[1990,12173],[1991,12171],[1992,12172],[1993,12172],[1994,12172],[1996,11883],[2000,11837],[2001,11952],[2002,11952],[2003,11952],[2004,11933],[2006,11858],[2010,11837],[2012,11837],[2013,11837],[2015,11837],[2020,11837],[2021,11837],[2022,11950],[2025,11950],[2026,11951],[2027,11957],[2028,11956],[2030,11837],[2031,11858],[2032,11858],[2033,11858],[2034,11858],[2039,12174],[2040,11837],[2043,12175],[2045,11837],[2050,12176],[2051,11837],[2053,11958],[2057,12177],[2058,11837],[2065,11837],[2066,11895],[2067,11895],[2070,11837],[2076,11837],[2077,11837],[2081,11837],[2082,11837],[2083,11883],[2085,11957],[2089,12178],[2090,12128],[2091,12178],[2092,12178],[2094,12179],[2095,12178],[2097,11837],[2098,11837],[2102,11837],[2103,11837],[2107,11837],[2108,11837],[2112,11837],[2113,11837],[2117,11837],[2118,11837],[2120,11964],[2131,11837],[2132,11837],[2134,11886],[2135,11886],[2147,11837],[2150,11837],[2152,11837],[2153,11883],[2157,12179],[2158,12179],[2159,12178],[2160,12179],[2161,12179],[2162,12179],[2163,11853],[2164,11837],[2165,11837],[2166,11837],[2167,11837],[2169,11958],[2170,11956],[2173,11941],[2177,11837],[2179,11837],[2184,11837],[2189,12180],[2190,11837],[2191,11887],[2192,11858],[2195,11837],[2199,11837],[2200,11837],[2204,11837],[2205,11837],[2209,11837],[2210,11837],[2214,11837],[2215,11837],[2219,11858],[2402,11957],[2415,11886],[2547,11858],[2725,11886],[3127,11957],[3128,11957],[3132,11858],[3522,11950],[3523,11950],[3524,11951],[3525,11957],[3526,11956],[3528,11957],[3532,11956],[3533,11957],[3535,11957],[3536,11957],[3537,11950],[3538,11950],[3539,11956],[3544,11956],[3545,11966],[3551,11966],[3554,11966],[3562,11966],[3564,11967],[3590,11839],[3597,11839],[3598,11839],[3599,11968],[3615,11839],[3628,11839],[3644,11968],[3651,11839],[3653,11839],[3654,11839],[3655,11839],[3656,11839],[3657,11968],[3658,11839],[3680,12181],[3681,12181],[3682,12181],[3684,11907],[3689,11907],[3690,11907],[3692,11907],[3693,11907],[3734,11907],[3771,11907],[3803,11907],[3873,11907],[3959,11861],[3960,11861],[3962,11986],[4202,11987],[4231,11846],[4234,11978],[4235,11978],[4237,11846],[4238,11846],[4239,11846],[4240,11846],[4241,11846],[4242,11846],[4245,11846],[4247,11991],[4259,11846],[4268,11978],[4339,11978],[4349,11978],[4473,11997],[4474,11998],[4475,11998],[4476,11998],[4477,11998],[4478,11998],[4479,11998],[4480,11998],[4481,11998],[4482,11998],[4486,11999],[4491,12000],[4492,12000],[4512,11977],[4546,11977],[4567,11977],[4581,11977],[4582,11977],[4583,11977],[4599,12182],[4600,12183],[4604,11965],[4611,12012],[4613,12080],[4616,12014],[4617,12014],[4618,12079],[4624,11883],[4625,11893],[4626,12019],[4629,11908],[4634,11837],[4635,11952],[4637,11952],[4638,11952],[4639,12020],[4640,11849],[4641,11933],[4643,12184],[4645,12025],[4646,12028],[4648,12058],[4649,11858],[4650,12031],[4652,12058],[4653,12120],[4654,12058],[4657,12185],[4663,12034],[4664,12038],[4669,11837],[4670,11916],[4673,12084],[4675,11837],[4676,11837],[4678,11837],[4679,12016],[4686,11837],[4687,11918],[4688,12068],[4689,11837],[4690,11846],[4693,12053],[4694,12055],[4696,12065],[4705,11950],[4709,11950],[4710,11951],[4711,12069],[4712,11957],[4713,12045],[4714,11956],[4716,11837],[4720,12067],[4721,12067],[4722,11938],[4723,12126],[4724,11938],[4725,11938],[4726,11938],[4727,11938],[4728,11938],[4729,11938],[4730,11938],[4731,11938],[4732,11938],[4733,11938],[4734,11938],[4735,11938],[4736,11938],[4737,11899],[4738,12004],[4739,11938],[4740,11938],[4741,11938],[4742,11938],[4743,11938],[4744,11938],[4745,11938],[4746,11938],[4747,11938],[4748,11938],[4749,11938],[4750,11938],[4751,11838],[4752,11913],[4753,11923],[4754,11923],[4755,11898],[4757,12062],[4758,12054],[4761,11861],[4763,12016],[4767,12016],[4769,12056],[4770,11858],[4782,12086],[4783,12056],[4784,12056],[4785,12056],[4786,12008],[4787,12035],[4788,12057],[4795,11858],[4796,11858],[4797,11907],[4798,12115],[4799,12007],[4803,11858],[4811,12174],[4812,12088],[4814,11837],[4818,12075],[4819,12175],[4821,12089],[4823,11837],[4830,12176],[4831,11837],[4833,12006],[4836,11958],[4841,12066],[4845,11985],[4851,12075],[4852,12177],[4853,12090],[4854,11837],[4855,11979],[4866,11965],[4870,11965],[4871,12087],[4872,12122],[4881,12185],[4882,12185],[4883,11837],[4884,11895],[4888,11895],[4889,12022],[4890,12122],[4891,12077],[4892,12186],[4894,11938],[4895,11938],[4905,11837],[4913,11837],[4914,11837],[4919,11837],[4920,11837],[4928,12111],[4929,12111],[4930,12111],[4934,12018],[4935,12016],[4939,11883],[4941,12016],[4943,11957],[4944,11978],[4946,11978],[4948,11846],[4949,11846],[4950,11846],[4951,11846],[4952,11846],[4953,11846],[4958,12065],[4968,12178],[4969,12185],[4975,12128],[4976,12178],[4977,11846],[4978,11899],[4979,12178],[4982,12043],[4984,11982],[4985,12128],[4987,12179],[4988,12178],[4990,12004],[4993,11837],[4994,11837],[4999,11837],[5000,11837],[5005,11837],[5006,11837],[5011,11837],[5012,11837],[5017,11837],[5018,11837],[5022,12060],[5024,11861],[5025,11991],[5026,11980],[5027,12098],[5028,11964],[5029,11981],[5030,11945],[5032,12036],[5033,12059],[5034,12059],[5035,12023],[5036,12023],[5037,12023],[5038,12036],[5039,12036],[5042,11938],[5046,11938],[5061,12004],[5062,11980],[5063,12004],[5064,12003],[5065,12076],[5067,12004],[5068,12004],[5071,12061],[5072,12085],[5074,12061],[5075,12061],[5076,12061],[5080,12054],[5082,12187],[5084,12187],[5085,12187],[5091,12048],[5092,12081],[5093,11980],[5094,11980],[5095,12050],[5102,12004],[5107,11845],[5113,11914],[5114,11910],[5115,11912],[5116,11837],[5118,12188],[5119,12021],[5120,12098],[5121,12121],[5122,11911],[5123,11914],[5124,11837],[5125,12078],[5127,12078],[5129,11886],[5132,11886],[5181,12078],[5186,12114],[5187,12114],[5199,12076],[5201,11913],[5203,11945],[5204,12080],[5215,12078],[5223,12056],[5224,11899],[5225,11899],[5226,11845],[5227,11864],[5228,11837],[5231,11837],[5233,11837],[5238,11965],[5239,12012],[5248,12034],[5249,11883],[5251,12189],[5254,12064],[5255,12065],[5256,12064],[5257,12037],[5259,12065],[5260,12039],[5263,12179],[5264,12179],[5265,12178],[5266,12179],[5267,12179],[5268,12179],[5269,11853],[5271,11837],[5272,11839],[5273,11837],[5274,11837],[5275,11889],[5276,11837],[5277,11847],[5278,11839],[5279,12135],[5280,11979],[5281,12140],[5283,12142],[5285,12071],[5288,11920],[5292,12127],[5293,11896],[5295,12057],[5304,12063],[5305,12063],[5306,11938],[5308,12016],[5316,11958],[5317,11956],[5327,12076],[5330,11994],[5331,11979],[5332,12052],[5333,11897],[5334,11994],[5335,12190],[5336,11994],[5341,12046],[5342,12191],[5350,11890],[5354,12015],[5355,12049],[5356,12051],[5357,12110],[5358,12110],[5361,12110],[5362,12110],[5363,11944],[5367,12011],[5369,12100],[5370,12100],[5371,12057],[5372,11841],[5375,12116],[5376,12096],[5377,12134],[5378,12063],[5379,12030],[5380,11888],[5393,11939],[5394,11846],[5400,11860],[5401,11860],[5402,12016],[5407,12130],[5409,12054],[5411,11941],[5412,12074],[5420,11966],[5422,11837],[5423,11916],[5425,12072],[5426,12026],[5427,12033],[5429,11837],[5436,12076],[5440,11984],[5441,12163],[5444,12073],[5445,12005],[5447,11837],[5457,12006],[5459,12070],[5460,12047],[5462,12067],[5470,12180],[5471,12117],[5473,11837],[5474,11887],[5475,11858],[5479,12139],[5493,11837],[5500,11837],[5501,11837],[5506,11837],[5507,11837],[5512,11837],[5513,11837],[5518,11837],[5519,11837],[5520,12192],[5521,12101],[5525,12079],[5527,11907],[5530,11858],[5531,12076],[5532,11987],[5535,12042],[5545,12137],[5546,12143],[5550,12067],[5552,12055],[5555,12076],[5556,12076],[5566,12065],[5660,12193],[5664,12194],[5665,12193],[5677,12195],[5688,11978],[5690,12196],[5693,12197],[5705,12197],[5716,12198],[5722,12199],[5725,12200],[5738,12201],[5743,12201],[5746,11938],[5756,12202],[5781,12203],[5785,12204],[5789,12205],[5797,12199],[5799,12067],[6063,12206],[6071,11957],[6076,12204],[6087,12199],[6101,12207],[6104,12208],[6106,12208],[6108,12208],[6393,12209],[6401,12197],[6405,12210],[6406,12196],[6408,12211],[6421,12196],[6430,12192],[6434,12211],[6436,12212],[6439,12211],[6440,12211],[6441,12212],[6442,12212],[6451,12188],[6452,12213],[6458,12214],[6459,12214],[6460,11858],[6466,12215],[6468,12197],[6469,12215],[6471,12215],[6473,12215],[6475,12197],[6476,12215],[6480,12162],[6482,12200],[6483,12202],[6484,12075],[6486,12200],[6487,12200],[6488,12172],[6489,12172],[6490,12172],[6555,12188],[6556,12003],[6817,12106],[6819,12162],[6821,12216],[6966,12217],[6967,12199],[6976,12196],[6977,12196],[6979,12075],[6987,11985],[6988,11985],[6989,12110],[7253,12189],[7254,12189],[7255,12189],[7261,11978],[7282,11938],[7319,12199],[7323,12188],[7327,11938],[7332,12218],[7436,11978],[7440,12197],[7444,12212],[7673,11938],[7683,12199],[7685,11938],[7710,12189],[7720,12185],[7732,12054],[7733,12054],[7814,12219],[7825,12220],[7826,12221],[7827,12221],[7829,12222],[7841,12196],[7844,12128],[7845,12141],[7980,12200],[7981,12200],[7983,12223],[7984,12060],[7986,12223],[7987,12224],[8139,12062],[8141,12189],[8149,12225],[8155,12226],[8158,12227],[8167,12204],[8170,12204],[8177,12213],[8212,12199],[8227,12199],[8236,12078],[8284,11957],[8285,11957],[8290,12198],[8301,12199],[8304,12199],[8312,12228],[8313,12185],[8314,12204],[8325,12204],[8331,12204],[8341,11858],[8350,12204],[8371,12202],[8409,12202],[8420,12229],[8421,12230],[8469,12231],[8493,12204],[8498,12199],[8499,12188],[8532,12185],[8550,11839],[8551,11839],[8552,11839],[8553,11839],[8558,12115],[8567,12204],[8598,12197],[8605,12061],[8609,12232],[8610,12233],[8612,12234],[8619,12234],[8620,12234],[8622,12221],[8624,12189],[8717,12206],[8721,11938],[8734,12207],[8786,11938],[8806,12130],[8808,12130],[8826,12219],[8836,12202],[8837,12235],[8839,12235],[8841,12235],[8843,12235],[8845,12235],[8860,12204],[8885,12067],[8889,12200],[9475,12199],[9500,12188],[9663,12067],[9875,12236],[9883,11938],[10032,12038],[10035,12038],[10039,12228],[10044,12237],[10046,12238],[10051,11997],[10052,11998],[10053,11998],[10054,11998],[10055,11998],[10056,11998],[10057,11998],[10058,11998],[10059,11998],[10060,11998],[10064,11940],[10068,11940],[10069,11940],[10070,11940],[10071,11940],[10072,11940],[10073,11940],[10074,11940],[10075,11940],[10076,11940],[10077,11940],[10078,11940],[10079,11940],[10080,11940],[10081,11940],[10082,11940],[10083,11940],[10084,11940],[10085,11940],[10086,11940],[10087,11940],[10088,11940],[10089,11940],[10090,11940],[10091,11940],[10092,11940],[10093,11940],[10094,11940],[10095,11940],[10096,11940],[10097,11940],[10098,11940],[10099,11940],[10100,12148],[10101,12149],[10119,12041],[10137,12150],[10139,12150],[10142,12150],[10156,12150],[10188,12150],[10213,12045],[10214,12088],[10215,12089],[10216,12090],[10217,12052],[10218,12134],[10219,12026],[10220,12117],[10273,12239],[10280,12026],[10286,12151],[10287,12026],[10310,12026],[10319,12152],[10321,12152],[10322,12152],[10333,12152],[10352,12082],[10353,12082],[10389,12240],[10402,12082],[10403,12082],[10410,12153],[10422,12153],[10428,11883],[10432,11837],[10433,11952],[10434,11952],[10435,11952],[10436,11933],[10438,11858],[10442,11837],[10444,11837],[10445,11837],[10447,11837],[10452,11837],[10453,11837],[10454,11950],[10457,11950],[10458,11951],[10459,11957],[10460,11956],[10462,11837],[10463,11858],[10464,11858],[10465,11858],[10466,11858],[10471,12174],[10472,11837],[10475,12175],[10477,11837],[10482,12176],[10483,11837],[10485,11958],[10489,12177],[10490,11837],[10495,11837],[10496,11895],[10497,11895],[10500,11837],[10506,11837],[10507,11837],[10511,11837],[10512,11837],[10513,11883],[10515,11957],[10519,12178],[10520,12128],[10521,12178],[10522,12178],[10524,12179],[10525,12178],[10527,11837],[10528,11837],[10532,11837],[10533,11837],[10537,11837],[10538,11837],[10542,11837],[10543,11837],[10547,11837],[10548,11837],[10550,11964],[10561,11837],[10562,11837],[10564,11886],[10565,11886],[10577,11837],[10580,11837],[10582,11837],[10583,11883],[10587,12179],[10588,12179],[10589,12178],[10590,12179],[10591,12179],[10592,12179],[10593,11853],[10594,11837],[10595,11837],[10596,11837],[10597,11837],[10599,11958],[10600,11956],[10603,11941],[10607,11837],[10609,11837],[10614,11837],[10619,12180],[10620,11837],[10621,11887],[10622,11858],[10625,11837],[10629,11837],[10630,11837],[10634,11837],[10635,11837],[10639,11837],[10640,11837],[10644,11837],[10645,11837],[10649,11858],[10662,11957],[10665,11886],[10670,11858],[10673,11886],[10688,11957],[10689,11957],[10690,11858],[10708,11950],[10709,11950],[10710,11951],[10711,11957],[10712,11956],[10714,11957],[10718,11956],[10719,11957],[10721,11957],[10722,11957],[10723,11950],[10724,11950],[10725,11956],[10730,11956],[10731,11966],[10732,11966],[10733,11966],[10734,11966],[10735,11967],[10736,12221],[10737,12221],[10738,12221],[10739,12111],[10740,12111],[10741,12111],[10745,12095],[10797,11999],[10800,12154],[10820,12166],[10821,12166],[10836,12068],[10839,12069],[10878,12018],[10921,12071],[10953,12072],[10961,12073],[10966,12070],[10991,12018],[10992,12018],[10993,12018],[10994,12018],[11036,12069],[11040,12071],[11046,12155],[11077,12156],[11104,12167],[11105,12167],[11106,12167],[11107,12060],[11110,12060],[11111,12224],[11112,12241],[11113,12242],[11114,12242],[11115,12242],[11116,12242],[11117,12242],[11118,12157],[11149,12141],[11160,12141],[11165,12141],[11166,12141],[11179,11944],[11180,11944],[11181,11944],[11182,12047],[11183,12047],[11204,11939],[11205,12168],[11206,12168],[11207,12168],[11208,12168],[11211,12169],[11212,12170],[11213,12170],[11214,12170],[11215,12170],[11216,12170],[11217,12170],[11218,12170],[11219,12170],[11220,11939],[11221,11860],[11222,11860],[11233,12031],[11234,12130],[11235,12033],[11254,12219],[11262,12130],[11264,12130],[11267,12219],[11273,12235],[11275,12235],[11277,12235],[11279,12235],[11281,12235],[11287,12042],[11293,12243],[11294,12243],[11298,11888],[11299,11938],[11301,11981],[11302,11888],[11306,11841],[11307,12160],[11308,12160],[11309,11888],[11320,11841],[11326,11841],[11515,11841],[11636,11841],[11758,11856],[11759,11856],[11782,11845],[11783,11845],[11784,11845],[11786,11845],[11790,11845],[11803,11864],[11804,11864],[11811,12094]],"b":[[29,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[30,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[31,"impl-Add-for-ChunkedArray%3CT%3E"],[32,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[33,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[34,"impl-Add-for-%26ChunkedArray%3CT%3E"],[35,"impl-Add-for-ChunkedArray%3CStringType%3E"],[36,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[37,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[38,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[39,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[40,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[42,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[43,"impl-AggList-for-ChunkedArray%3CStructType%3E"],[44,"impl-AggList-for-ChunkedArray%3CT%3E"],[45,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[46,"impl-AggList-for-ChunkedArray%3CListType%3E"],[47,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[48,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[49,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[52,"impl-ChunkedArray%3CListType%3E"],[53,"impl-ChunkedArray%3CFixedSizeListType%3E"],[54,"impl-ChunkedArray%3CListType%3E"],[55,"impl-ChunkedArray%3CFixedSizeListType%3E"],[59,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[60,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[61,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[62,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[63,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[64,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[66,"impl-ChunkedArray%3CFixedSizeListType%3E"],[67,"impl-ChunkedArray%3CListType%3E"],[69,"impl-ChunkedArray%3CFloat64Type%3E"],[70,"impl-ChunkedArray%3CFloat32Type%3E"],[73,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[74,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[75,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[76,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[77,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[78,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[79,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[80,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[81,"impl-ChunkedArray%3CT%3E"],[82,"impl-ChunkedArray%3CBinaryType%3E"],[83,"impl-ChunkedArray%3CStringType%3E"],[85,"impl-ChunkedArray%3CFixedSizeListType%3E"],[86,"impl-ChunkedArray%3CListType%3E"],[87,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[88,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[89,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[90,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[91,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[92,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[93,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[94,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[95,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[96,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[97,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[98,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[100,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[101,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[102,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[103,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[104,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[105,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[106,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[107,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[108,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[109,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[110,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[111,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[112,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[113,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[114,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[115,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[118,"impl-ChunkedArray%3CStringType%3E"],[119,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[123,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[124,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[126,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[127,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[128,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[129,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[130,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[131,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[132,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[133,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[134,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[144,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[145,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[146,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[147,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[148,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[149,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[150,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[151,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[152,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[153,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[154,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[155,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[156,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[157,"impl-ChunkedArray%3CStructType%3E"],[158,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[161,"impl-ChunkedArray%3CT%3E"],[162,"impl-Container-for-ChunkedArray%3CT%3E"],[182,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[183,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[184,"impl-Div-for-%26ChunkedArray%3CT%3E"],[185,"impl-Div-for-ChunkedArray%3CT%3E"],[192,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[193,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[194,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[195,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[196,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[197,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[198,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[199,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[200,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[201,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[202,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[203,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[204,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[205,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[206,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[207,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[208,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[209,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[210,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[211,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[212,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[213,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[217,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[218,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[219,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[220,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[221,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[222,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[223,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[227,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[228,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[229,"impl-Debug-for-ChunkedArray%3CT%3E"],[230,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[231,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[232,"impl-Debug-for-ChunkedArray%3CListType%3E"],[233,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[235,"impl-ChunkedArray%3CListType%3E"],[236,"impl-ChunkedArray%3CFixedSizeListType%3E"],[245,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[246,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[247,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[248,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[249,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[250,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[251,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[252,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[253,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[254,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[255,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[256,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[257,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[258,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[259,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[260,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[261,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[262,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[263,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[264,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[265,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[266,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[267,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[268,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[269,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[270,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[271,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[272,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[273,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[274,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[275,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[276,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[277,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[278,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[280,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[281,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[282,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[283,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[284,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[285,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[286,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[287,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[290,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[291,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[292,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[293,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[294,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[295,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[296,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[297,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[298,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[299,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[300,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[301,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[304,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[305,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[306,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[307,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[308,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[309,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[310,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[311,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[312,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[313,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[314,"impl-ChunkFullNull-for-ChunkedArray%3CStructType%3E"],[315,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[316,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[317,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[318,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[319,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[320,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[322,"impl-ChunkedArray%3CListType%3E"],[323,"impl-ChunkedArray%3CFixedSizeListType%3E"],[325,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[326,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[327,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[328,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[329,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[330,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[331,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[332,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[333,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[334,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[335,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[336,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[337,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[338,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[339,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[340,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[341,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[342,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[343,"impl-ChunkedArray%3CFixedSizeListType%3E"],[344,"impl-ChunkedArray%3CListType%3E"],[348,"impl-ChunkedArray%3CListType%3E"],[349,"impl-ChunkedArray%3CFixedSizeListType%3E"],[357,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[358,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[359,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[360,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[361,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[362,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[363,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[364,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[365,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[366,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[367,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[368,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[370,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[371,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[372,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[373,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[374,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[375,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[376,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[377,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[378,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[379,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[380,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[381,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[382,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[383,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[389,"impl-ChunkedArray%3CFixedSizeListType%3E"],[390,"impl-ChunkedArray%3CListType%3E"],[400,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[401,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[402,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[403,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[404,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[405,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[406,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[407,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[409,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[410,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[430,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[435,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[436,"impl-Container-for-ChunkedArray%3CT%3E"],[437,"impl-ChunkedArray%3CT%3E"],[442,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[443,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[444,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[445,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[446,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[447,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[448,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[449,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[450,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[451,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[452,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[453,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[454,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[455,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[456,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[457,"impl-ChunkedArray%3CBooleanType%3E"],[458,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[459,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[460,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[461,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[462,"impl-ChunkedArray%3CBooleanType%3E"],[463,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[464,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[465,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[466,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[467,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[468,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[469,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[477,"impl-ChunkedArray%3CBooleanType%3E"],[478,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[480,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[481,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[482,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[483,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[484,"impl-ChunkedArray%3CBooleanType%3E"],[485,"impl-ChunkedArray%3CT%3E"],[486,"impl-Mul-for-ChunkedArray%3CT%3E"],[487,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[488,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[489,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[492,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[493,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[494,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[496,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[497,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[498,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[499,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[500,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[501,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[502,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[503,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[504,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[505,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[506,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[507,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[508,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[509,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[510,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[511,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[512,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[513,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[514,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[515,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[516,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[517,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[518,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[519,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[520,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[521,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[522,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[523,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[524,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[525,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[526,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[527,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[528,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[529,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[530,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[531,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[532,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[533,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[534,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[535,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[536,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[537,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[539,"impl-ChunkExpandAtIndex%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[540,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[541,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[542,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[543,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[544,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[545,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[546,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[547,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[553,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[554,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[555,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[556,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[557,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[558,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[559,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[560,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[561,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[562,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[563,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[564,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[565,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[566,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[567,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[568,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[569,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[570,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[571,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[572,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[573,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[574,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[577,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[578,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[580,"impl-ChunkedArray%3CListType%3E"],[581,"impl-ChunkedArray%3CStringType%3E"],[582,"impl-ChunkedArray%3CStringType%3E"],[583,"impl-ChunkedArray%3CListType%3E"],[586,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[587,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[588,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[589,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[590,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[591,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[598,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[599,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[600,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[601,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[602,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[603,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[604,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[605,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[606,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[607,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[608,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[609,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[610,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[611,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[612,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[613,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[614,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[615,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[616,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[617,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[618,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[619,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[620,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[621,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[622,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[623,"impl-Rem-for-ChunkedArray%3CT%3E"],[626,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[627,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[628,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[629,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[630,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[631,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[632,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[633,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[638,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-%26mut+ChunkedArray%3CT%3E"],[639,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[640,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[641,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[642,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[643,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[644,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[645,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[646,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[647,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[648,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[649,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[650,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[651,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[652,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[658,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[659,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[660,"impl-ChunkShift%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[661,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[662,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[663,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[664,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[665,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[666,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[667,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[668,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[669,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[670,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[671,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[672,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[673,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[674,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[676,"impl-Container-for-ChunkedArray%3CT%3E"],[677,"impl-ChunkedArray%3CT%3E"],[678,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[679,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[680,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[681,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[682,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[683,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[684,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[685,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[686,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[687,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[688,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[689,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[690,"impl-Container-for-ChunkedArray%3CT%3E"],[691,"impl-ChunkedArray%3CT%3E"],[693,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[694,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[695,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[697,"impl-Sub-for-ChunkedArray%3CT%3E"],[698,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[699,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[700,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[702,"impl-ChunkedArray%3CBooleanType%3E"],[703,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[704,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[705,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[706,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[708,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[709,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[712,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[713,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStructType%3E"],[714,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[715,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[716,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[717,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[718,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[719,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStructType%3E"],[724,"impl-ChunkedArray%3CFixedSizeListType%3E"],[725,"impl-ChunkedArray%3CListType%3E"],[726,"impl-ChunkedArray%3CListType%3E"],[727,"impl-ChunkedArray%3CT%3E"],[732,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[733,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[734,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[735,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[736,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[737,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[739,"impl-ChunkedArray%3CFixedSizeListType%3E"],[740,"impl-ChunkedArray%3CListType%3E"],[754,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[755,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[756,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[757,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[758,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[764,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[765,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[766,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[767,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[768,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[769,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[770,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[771,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[772,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[773,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[774,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[775,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[776,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[777,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[778,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[779,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[780,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[781,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[782,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[783,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[784,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[785,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[786,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[787,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[788,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[789,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[790,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[791,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[792,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[793,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[794,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[795,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[796,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[797,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[798,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[810,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[811,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[812,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[813,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[814,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[815,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[816,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[817,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[818,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[819,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[820,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[821,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[822,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[823,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[824,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[825,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[826,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[827,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[828,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[829,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[830,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[831,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[832,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[833,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[834,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[835,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[836,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[837,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[838,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[839,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[840,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[841,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[842,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[843,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[844,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[845,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[849,"impl-ChunkZip%3CT%3E-for-ChunkedArray%3CT%3E"],[850,"impl-ChunkZip%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[1026,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1027,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[1301,"impl-MetadataProperties"],[1302,"impl-Flags-for-MetadataProperties"],[1303,"impl-Flags-for-MetadataFlags"],[1304,"impl-MetadataFlags"],[1367,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1368,"impl-Metadata%3CT%3E"],[1393,"impl-UpperHex-for-MetadataProperties"],[1394,"impl-Debug-for-MetadataProperties"],[1395,"impl-Binary-for-MetadataProperties"],[1396,"impl-LowerHex-for-MetadataProperties"],[1397,"impl-Octal-for-MetadataProperties"],[1398,"impl-LowerHex-for-MetadataFlags"],[1399,"impl-UpperHex-for-MetadataFlags"],[1400,"impl-Octal-for-MetadataFlags"],[1401,"impl-Binary-for-MetadataFlags"],[1402,"impl-Debug-for-MetadataFlags"],[1412,"impl-Flags-for-MetadataProperties"],[1413,"impl-MetadataProperties"],[1414,"impl-Flags-for-MetadataFlags"],[1415,"impl-MetadataFlags"],[1426,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1427,"impl-Metadata%3CT%3E"],[1470,"impl-Metadata%3CT%3E"],[1471,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1475,"impl-Metadata%3CT%3E"],[1476,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1553,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1554,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1589,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1590,"impl-ObjectArray%3CT%3E"],[1605,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1606,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1616,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1617,"impl-ObjectArray%3CT%3E"],[1618,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1619,"impl-ObjectArray%3CT%3E"],[1621,"impl-Array-for-ObjectArray%3CT%3E"],[1622,"impl-ObjectArray%3CT%3E"],[1625,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1626,"impl-ObjectChunkedBuilder%3CT%3E"],[1628,"impl-ObjectChunkedBuilder%3CT%3E"],[1629,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[2297,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[2298,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[2299,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[2300,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[2406,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2407,"impl-Logical%3CDurationType,+Int64Type%3E"],[2409,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2410,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2411,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2412,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2413,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2714,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2715,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2716,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2717,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2718,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2730,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2731,"impl-PartialEq-for-DataType"],[2740,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[2741,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2742,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2743,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2744,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[2745,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2784,"impl-Debug-for-PlSmallStr"],[2785,"impl-Display-for-PlSmallStr"],[2789,"impl-Debug-for-AnyValue%3C\'a%3E"],[2790,"impl-Display-for-AnyValue%3C\'_%3E"],[2792,"impl-Display-for-DataType"],[2793,"impl-Debug-for-DataType"],[2797,"impl-Display-for-ReshapeDimension"],[2798,"impl-Debug-for-ReshapeDimension"],[2799,"impl-Debug-for-TimeUnit"],[2800,"impl-Display-for-TimeUnit"],[2804,"impl-From%3CCompactString%3E-for-PlSmallStr"],[2805,"impl-From%3C%26str%3E-for-PlSmallStr"],[2806,"impl-From%3CString%3E-for-PlSmallStr"],[2807,"impl-From%3C%26String%3E-for-PlSmallStr"],[2810,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2811,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2826,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2827,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2828,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2829,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2830,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2833,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2834,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2835,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2837,"impl-From%3C%26ArrowField%3E-for-Field"],[2838,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2864,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2866,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2873,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[2874,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[2875,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[2876,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[2877,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[2878,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[2879,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[2880,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[2900,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2901,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2902,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2903,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2904,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2907,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2908,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2909,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2910,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2911,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2949,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2950,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[2951,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2952,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[2953,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2954,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3067,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[3068,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[3069,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[3070,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[3071,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[3121,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3122,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3123,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3124,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3125,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3126,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3162,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3163,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3164,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3165,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3166,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3167,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3168,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3169,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3178,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3179,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3180,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3181,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3182,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3183,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3186,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[3187,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[3209,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[3210,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[3216,"impl-Logical%3CDurationType,+Int64Type%3E"],[3217,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3224,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3225,"impl-Logical%3CTimeType,+Int64Type%3E"],[3226,"impl-Logical%3CDateType,+Int32Type%3E"],[3242,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3243,"impl-Logical%3CDurationType,+Int64Type%3E"],[3296,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3297,"impl-Logical%3CDateType,+Int32Type%3E"],[3298,"impl-Logical%3CTimeType,+Int64Type%3E"],[3304,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[3305,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[3630,"impl-Debug-for-ErrString"],[3631,"impl-Display-for-ErrString"],[3632,"impl-Debug-for-PolarsError"],[3633,"impl-Display-for-PolarsError"],[3637,"impl-From%3CError%3E-for-PolarsError"],[3638,"impl-From%3CError%3E-for-PolarsError"],[3639,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3640,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3641,"impl-From%3CParquetError%3E-for-PolarsError"],[3642,"impl-From%3CError%3E-for-PolarsError"],[3780,"impl-Display-for-DataFrame"],[3781,"impl-Debug-for-DataFrame"],[3787,"impl-FromIterator%3CSeries%3E-for-DataFrame"],[3788,"impl-FromIterator%3CColumn%3E-for-DataFrame"],[3814,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3815,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3816,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3817,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3818,"impl-Index%3Cusize%3E-for-DataFrame"],[3819,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3820,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3821,"impl-Index%3C%26str%3E-for-DataFrame"],[3840,"impl-Container-for-DataFrame"],[3841,"impl-DataFrame"],[3849,"impl-Container-for-DataFrame"],[3850,"impl-DataFrame"],[3894,"impl-DataFrame"],[3895,"impl-Container-for-DataFrame"],[3899,"impl-DataFrame"],[3900,"impl-Container-for-DataFrame"],[3924,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26Schema%3CArrowField%3E)%3E-for-DataFrame"],[3925,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3966,"impl-Add-for-Column"],[3967,"impl-Add-for-%26Column"],[3968,"impl-Add%3CT%3E-for-Column"],[3969,"impl-Add%3CT%3E-for-%26Column"],[3992,"impl-Column"],[3993,"impl-BitAnd-for-Column"],[3994,"impl-BitAnd-for-%26Column"],[3995,"impl-BitOr-for-Column"],[3996,"impl-BitOr-for-%26Column"],[3997,"impl-BitXor-for-Column"],[3998,"impl-BitXor-for-%26Column"],[4026,"impl-Div-for-%26Column"],[4027,"impl-Div%3CT%3E-for-%26Column"],[4028,"impl-Div-for-Column"],[4029,"impl-Div%3CT%3E-for-Column"],[4054,"impl-From%3CSeries%3E-for-Column"],[4055,"impl-From%3CScalarColumn%3E-for-Column"],[4101,"impl-Mul-for-%26Column"],[4102,"impl-Mul-for-Column"],[4103,"impl-Mul%3CT%3E-for-Column"],[4104,"impl-Mul%3CT%3E-for-%26Column"],[4119,"impl-Rem%3CT%3E-for-Column"],[4120,"impl-Rem%3CT%3E-for-%26Column"],[4121,"impl-Rem-for-%26Column"],[4122,"impl-Rem-for-Column"],[4143,"impl-Sub%3CT%3E-for-%26Column"],[4144,"impl-Sub-for-Column"],[4145,"impl-Sub-for-%26Column"],[4146,"impl-Sub%3CT%3E-for-Column"],[4347,"impl-Display-for-GroupByMethod"],[4348,"impl-Debug-for-GroupByMethod"],[4354,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[4355,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[4356,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[4390,"impl-IntoIterator-for-%26GroupsIdx"],[4391,"impl-IntoIterator-for-GroupsIdx"],[4393,"impl-IntoParallelIterator-for-GroupsIdx"],[4394,"impl-IntoParallelIterator-for-%26GroupsIdx"],[5749,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[5750,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[5754,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[5755,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[5783,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[5784,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[5807,"impl-OptFlags"],[5808,"impl-Flags-for-OptFlags"],[6533,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[6534,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[6535,"impl-Default-for-SpecialEq%3CArc%3Cdyn+ColumnBinaryUdf%3E%3E"],[6545,"impl-Default-for-Arc%3Cstr%3E"],[6546,"impl-Default-for-Arc%3CT%3E"],[6547,"impl-Default-for-Arc%3CCStr%3E"],[6548,"impl-Default-for-Arc%3C%5BT%5D%3E"],[7030,"impl-PartialEq-for-Expr"],[7031,"impl-Expr"],[7034,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[7035,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[7054,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[7055,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[7056,"impl-PartialEq-for-Arc%3CT,+A%3E"],[7061,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[7062,"impl-PartialEq-for-StructArray"],[7341,"impl-Debug-for-Duration"],[7342,"impl-Display-for-Duration"],[7357,"impl-Display-for-JoinType"],[7358,"impl-Debug-for-JoinType"],[7360,"impl-Display-for-JoinValidation"],[7361,"impl-Debug-for-JoinValidation"],[7381,"impl-Display-for-Expr"],[7382,"impl-Debug-for-Expr"],[7384,"impl-Display-for-Operator"],[7385,"impl-Debug-for-Operator"],[7387,"impl-Display-for-BooleanFunction"],[7388,"impl-Debug-for-BooleanFunction"],[7389,"impl-Debug-for-CategoricalFunction"],[7390,"impl-Display-for-CategoricalFunction"],[7391,"impl-Display-for-TemporalFunction"],[7392,"impl-Debug-for-TemporalFunction"],[7393,"impl-Display-for-PowFunction"],[7394,"impl-Debug-for-PowFunction"],[7395,"impl-Debug-for-StringFunction"],[7396,"impl-Display-for-StringFunction"],[7397,"impl-Debug-for-StructFunction"],[7398,"impl-Display-for-StructFunction"],[7400,"impl-Debug-for-FunctionExpr"],[7401,"impl-Display-for-FunctionExpr"],[7414,"impl-LowerHex-for-OptFlags"],[7415,"impl-Octal-for-OptFlags"],[7416,"impl-Binary-for-OptFlags"],[7417,"impl-UpperHex-for-OptFlags"],[7418,"impl-Debug-for-OptFlags"],[7421,"impl-Display-for-Arc%3CT,+A%3E"],[7422,"impl-Pointer-for-Arc%3CT,+A%3E"],[7423,"impl-Debug-for-Arc%3CT,+A%3E"],[7454,"impl-From%3CDslPlan%3E-for-LazyFrame"],[7455,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[7533,"impl-From%3Cu32%3E-for-Expr"],[7534,"impl-From%3Cu64%3E-for-Expr"],[7535,"impl-From%3Cbool%3E-for-Expr"],[7536,"impl-From%3Ci16%3E-for-Expr"],[7537,"impl-From%3Ci8%3E-for-Expr"],[7538,"impl-From%3Ci32%3E-for-Expr"],[7539,"impl-From%3Cf32%3E-for-Expr"],[7540,"impl-From%3Cu16%3E-for-Expr"],[7541,"impl-From%3Cu8%3E-for-Expr"],[7542,"impl-From%3CAggExpr%3E-for-Expr"],[7543,"impl-From%3Cf64%3E-for-Expr"],[7544,"impl-From%3C%26str%3E-for-Expr"],[7546,"impl-From%3Ci64%3E-for-Expr"],[7549,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7550,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7551,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7552,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7553,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7554,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7555,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7556,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7558,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7559,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7569,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[7570,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[7571,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[7572,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[7585,"impl-From%3CPlSmallStr%3E-for-Selector"],[7586,"impl-From%3CExpr%3E-for-Selector"],[7587,"impl-From%3C%26str%3E-for-Selector"],[7588,"impl-From%3CString%3E-for-Selector"],[7593,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[7594,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[7595,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[7596,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[7597,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[7598,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[7601,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[7602,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[7603,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[7604,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[7605,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[7606,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[7607,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[7608,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[7609,"impl-From%3CCompactString%3E-for-Arc%3Cstr%3E"],[7610,"impl-From%3CT%3E-for-Arc%3CT%3E"],[7616,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[7617,"impl-From%3CMutableStructArray%3E-for-StructArray"],[7619,"impl-From%3Ci16%3E-for-Scalar"],[7620,"impl-From%3Ci8%3E-for-Scalar"],[7621,"impl-From%3Ci64%3E-for-Scalar"],[7623,"impl-From%3Cu64%3E-for-Scalar"],[7624,"impl-From%3Ci32%3E-for-Scalar"],[7625,"impl-From%3Cu16%3E-for-Scalar"],[7626,"impl-From%3Cf64%3E-for-Scalar"],[7627,"impl-From%3Cu32%3E-for-Scalar"],[7628,"impl-From%3Cf32%3E-for-Scalar"],[7629,"impl-From%3Cu8%3E-for-Scalar"],[7638,"impl-OptFlags"],[7639,"impl-Flags-for-OptFlags"],[7644,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7645,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7653,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7654,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7667,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7668,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[8775,"impl-Array-for-StructArray"],[8776,"impl-StructArray"],[8782,"impl-Array-for-StructArray"],[8783,"impl-StructArray"],[9048,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[9049,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[9053,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[9054,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[9503,"impl-Array-for-StructArray"],[9504,"impl-StructArray"],[9757,"impl-LazyCsvReader"],[9758,"impl-LazyFileListReader-for-LazyCsvReader"],[9759,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9760,"impl-LazyJsonLineReader"],[9801,"impl-LazyCsvReader"],[9802,"impl-LazyFileListReader-for-LazyCsvReader"],[9803,"impl-LazyJsonLineReader"],[9804,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9847,"impl-Array-for-StructArray"],[9848,"impl-StructArray"],[10339,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[10340,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[10345,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[10346,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[11060,"impl-Display-for-RollingFunction"],[11061,"impl-Debug-for-RollingFunction"],[11091,"impl-Display-for-RollingFunctionBy"],[11092,"impl-Debug-for-RollingFunctionBy"],[11316,"impl-Add-for-%26Series"],[11317,"impl-Add%3CT%3E-for-%26Series"],[11318,"impl-Add%3CT%3E-for-Series"],[11319,"impl-Add-for-Series"],[11335,"impl-AsSeries-for-Series"],[11336,"impl-SeriesSealed-for-Series"],[11389,"impl-Div%3CT%3E-for-%26Series"],[11390,"impl-Div%3CT%3E-for-Series"],[11391,"impl-Div-for-%26Series"],[11392,"impl-Div-for-Series"],[11403,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[11404,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[11405,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[11407,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[11408,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[11409,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[11425,"impl-Debug-for-Series"],[11426,"impl-Display-for-Series"],[11432,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[11433,"impl-From%3C_SerdeSeries%3E-for-Series"],[11434,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[11435,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[11436,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[11437,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[11443,"impl-FromIterator%3Cu32%3E-for-Series"],[11444,"impl-FromIterator%3C%26f32%3E-for-Series"],[11445,"impl-FromIterator%3Cu64%3E-for-Series"],[11446,"impl-FromIterator%3Ci16%3E-for-Series"],[11447,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[11448,"impl-FromIterator%3C%26u64%3E-for-Series"],[11449,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[11450,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[11451,"impl-FromIterator%3C%26u32%3E-for-Series"],[11452,"impl-FromIterator%3CString%3E-for-Series"],[11453,"impl-FromIterator%3COption%3CString%3E%3E-for-Series"],[11454,"impl-FromIterator%3C%26str%3E-for-Series"],[11455,"impl-FromIterator%3COption%3C%26str%3E%3E-for-Series"],[11456,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[11457,"impl-FromIterator%3C%26i8%3E-for-Series"],[11458,"impl-FromIterator%3Ci32%3E-for-Series"],[11459,"impl-FromIterator%3C%26bool%3E-for-Series"],[11460,"impl-FromIterator%3Cbool%3E-for-Series"],[11461,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[11462,"impl-FromIterator%3Ci8%3E-for-Series"],[11463,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[11464,"impl-FromIterator%3C%26i32%3E-for-Series"],[11465,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[11466,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[11467,"impl-FromIterator%3C%26f64%3E-for-Series"],[11468,"impl-FromIterator%3Cu8%3E-for-Series"],[11469,"impl-FromIterator%3Ci64%3E-for-Series"],[11470,"impl-FromIterator%3C%26i64%3E-for-Series"],[11471,"impl-FromIterator%3C%26u8%3E-for-Series"],[11472,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[11473,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[11474,"impl-FromIterator%3C%26u16%3E-for-Series"],[11475,"impl-FromIterator%3Cf32%3E-for-Series"],[11476,"impl-FromIterator%3Cu16%3E-for-Series"],[11477,"impl-FromIterator%3Cf64%3E-for-Series"],[11478,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[11479,"impl-FromIterator%3C%26i16%3E-for-Series"],[11480,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[11481,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[11482,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[11483,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[11484,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[11485,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[11486,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[11487,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[11488,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[11489,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[11490,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[11501,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[11502,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[11503,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[11504,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[11505,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[11506,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[11547,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[11548,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[11549,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[11550,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[11551,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[11552,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[11561,"impl-Mul-for-Series"],[11562,"impl-Mul%3CT%3E-for-Series"],[11563,"impl-Mul%3CT%3E-for-%26Series"],[11564,"impl-Mul-for-%26Series"],[11569,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[11570,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[11571,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[11572,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[11573,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[11574,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[11575,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[11576,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[11577,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[11578,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[11579,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[11580,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[11581,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[11582,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[11583,"impl-NamedFrom%3CT,+T%3E-for-Series"],[11584,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[11585,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[11586,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[11587,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[11588,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[11589,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[11590,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[11591,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[11592,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[11593,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[11594,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[11595,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[11596,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[11597,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[11598,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[11599,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[11600,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[11601,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[11602,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[11603,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[11604,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[11605,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[11606,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[11607,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[11608,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[11609,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[11610,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[11611,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[11612,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[11613,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[11614,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[11615,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[11616,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[11617,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[11618,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[11619,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[11620,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[11621,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[11627,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[11628,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[11629,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[11631,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[11632,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[11633,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[11641,"impl-Rem%3CT%3E-for-%26Series"],[11642,"impl-Rem-for-%26Series"],[11643,"impl-Rem%3CT%3E-for-Series"],[11672,"impl-Sub%3CT%3E-for-%26Series"],[11673,"impl-Sub-for-Series"],[11674,"impl-Sub%3CT%3E-for-Series"],[11675,"impl-Sub-for-%26Series"],[11710,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"],[11711,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[11712,"impl-TryFrom%3C(PlSmallStr,+Box%3Cdyn+Array%3E)%3E-for-Series"],[11713,"impl-TryFrom%3C(PlSmallStr,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAAwAEAAAAKwQ9xAzETYRNxE4ETkROhE/EUIRRxFIEW4R","e":"OzAAAAEAACwiiAQCAAAABQABAAgAAAALAAIAEAAAABIAAAAUAB4APAAFAEYAAQBJAAsAWAAHAGEAAgBlAAYAbgAAAHAABAB2ABUAjQAAAI8AAACRABAAowAAAKYAAwCrAAIAsgANAMEAFQDZAAgA4wAKAO8AAADxAAEA9QAdABkBFQAxARMARwEVAF8BAQBjAQEAZgEaAIMBAgCLAREAngEDAKUBAgCqAQIArgEHALsBHQDeAQYA5wEIAPEBNQAqAhUAQQICAEUCBABLAgUAVQIAAFcCGgBzAgcAfwIRAJMCEAClAgAApwIMALUCDgDHAgEAygIAAM0CAADQAgAA0gIBANkCAADdAgYA5QIAAOcCAgDrAg0A+gIAAPwCKAAnAwIAKwMjAFIDNQCKAwgAlwMRAKwDXAAWBBIANAQHAD0ESQCKBA4AmgQBAJ0EGQC4BAAAuwQOAM0EAgDTBAIA2AQcAPYECQABBQoAFwUBAB4FDQAtBQ8AQQUSAFYFAABYBQkAZAUDAGoFAQBuBQ0AhQUAAIcFAACPBQcAmAUHAK0FAQCxBQAAtAUDALwFBQDDBQQAzwULAOIFBADpBQ0A+QUGAAMGBwAMBgEAEAYXACkGBwAyBgAANAYAADYGAAA4BgEAPQYQAE8GAABRBgAAUwYDAFgGAgBcBgAAXgYIAGgGAABqBgUAcgYBAHUGAAB3BgEAegYDAH8GAwCEBgIAiAYDAI4GAACRBgAAmgYAAJ8GAACiBgEApwYBAKoGAACtBgEAtgYAALwGAwDIBgYA0gYQAOUGBQDtBggA+AYDAP0GAQABBwAAAwcBAAkHBQASBwIAHAcBACgHAAAqBwEALQcAADAHAAAyBwAANgcAADgHAAA9BwwATAcCAFsHAABdBwcAZgcBAGkHAABtBwAAbwcDAHQHAQB3BwUAgwcWAJsHAQCfBwQApQcDAKwHBwDBBwMAxgcIANAHBADXBwIA2wcFAOMHAADlBw4A+AcBAPwHAAD+BwAAAwgBAAYIAAAICAAACggGABIIAAAUCAAAFwgBABsIAAAdCAEAIAgAACIIAgAmCA0ANQgAADcIAQA6CAAAPAgBAD8IAABBCAEARAgAAEYIAQBJCAMAUAgAAFQIAQBYCAAAWwgAAF0IAABfCAMAZAgAAGcICABxCAIAdggDAHsIAAB9CAIAgggAAIQIAgCICAEAjggDAJMIAQCWCAAAmAgBAJsIAACdCAEAoAgAAKIIAQClCAAApwgBAKoIAACsCAAArwgnANgIGADyCAMA9whuAGkJgADrCQkA9gmjAJsKBQCjCjkA3goVAPUKAwD7CgEACwsEABILAgAWCwEAGwsAADELAAAzCwAANQsAADoLBwBFCwAASAsCAEwLBQBTCwYAWwsFAGILAABkCxwAhgsPAJgLLwDJCwAA+AsJAAMMAAAFDAAABwwCAAsMAwAQDAEAFQwAABcMBwAgDAAAIwwCACgMAwAtDAAAMAwOAEEMAABEDA8AVQwAAFgMCwBlDBAAdwwCAHsMAAB9DA4AjQwAAJUMAACXDAEAnQwRALEMAACzDAMAuQwjAN8MAQDkDGwAUg01AIkNAQCMDTsAyQ0BAMwNCADWDQAA2A0BANsNBADhDQEA5g0AAOgNAgDsDQoA+A0AAPoNBAABDgQABw4EAA0OEgAhDhEANQ4GAD0OAwBEDgUASw4YAGcOAABqDgsAeA4DAIIOFQCaDg8Aqw4AALQOAQC4DgIAvA4AAL4OAADDDgMA1Q4AANwOAADeDgAA4A4BAOcODAD6DgIAAQ8AAAUPAQAKDwAAEQ8BABQPAAAhDwEAJQ8AACwPAAA1DwEAOA8BAD0PAgBGDwAASA8EAFAPBgBZDwoAZQ8AAGgPAQBtDwQAeg8AAHwPBgCODwIAkw8BAJYPEACpDx0AyQ8LANcPAQDaDwYA5A8JAPAPAwD1DwgA/w8CAAQQDQAUEAsAIRAUADgQAAA7EAIAPxAiAGMQBwBsEA4AfBACAIAQCgCMEAEAjxADAJQQAwCZEAkApBAHAK0QAQCwEBwAzhAoAPgQBgADEQIACBEAAAoRAAAMEQIAEREAABURBwAlEQ0ANBEBADsRAwBAEQEARBECAEkRAABLESAAbxEMAH4RBQCFEQcAjhEjALQRDgDEEQ4A1BEAANYRAADYEQMA3xEGAOkRDgD6EQYAAxIAAAYSCAAQEgEAFBIEABoSBQAhEgAAJhIJADESAQA1EgQAOxIBAD4SCgBKEgAATRIAAE8SCQBaEgAAYBIJAGsSBQB1EgAAeBIAAIESAgCIEgAAixIBAJESCACbEgAAnRIAAJ8SAAChEhEAthIHAL8SAQDCEgUAzBIEANQSAgDYEgEA3xIDAOQSAQDnEgkA8hIAAPUSAwD6EgYAAxMCAAgTAAALEwAADRMCABITAgAWEwUAHRMEACMTAwAqEwIAMBMAADITAQA2EwAAOBMEAD8TDwBQEwAAUxMBAFYTAwBcEwIAYhMhAIYTAACIEwEAjBMAAI4TAQCSEwAAlBMBAJgTAACaEwUAoxMCAKgTAACrEwAArhMAALATAgC0EwIAuBMLAMYTBwDPEwAA0RMAANUTAQDZEwAA2xMAAN0TAQDgEwEA4xMBAOgTAADqEwwA+hMFAAEUBwALFAIADxQGABoUAQAdFAAAHxQBACIUBAAoFAMALRQCADEUAAAzFAQAORQAADsUBgBDFAQASRQBAEwUAQBPFAEAUhQBAFUUAABXFAAAWRQAAFwUAgBhFAMAZhQHAHAUAgB3FAAAeRQGAIEUAwCHFAAAiRQAAIwUAACOFAMAkxQCAJcUAACZFAIAnRQAAJ8UBwCoFAcAshQSAMYUAgDKFBUA4xQBAOYUDwD4FAAA+hQBAP4UDAAMFQAADhUCABMVAQAXFQEAHBUIACYVAwAuFQYANhUJAEIVAwBHFQgAURUAAFMVAgBYFQIAXxUFAGYVEgB7FQAAfRUBAIEVAACDFQEAhxUAAIkVAQCNFQAAjxUEAJYVAwCbFQEAnhUBAKQVCgCwFQAAsxUGALwVAgDAFV4AIBYFACsWAAAtFgAAMBYGADkWAABAFgAAQhYAAEYWAABIFgAATBYFAFYWAABaFgAAYRYAAGUWAABxFgIAdRYIAH8WAACBFgEAhBYCAIsWAQCOFgQAlBYBAJwWCgCpFgAAqxYAAK4WAACxFgEAtBYAALYW9wCvFwIAsxcBALYXAAC4FwIAvhcAAMIXAADGFwAAyBcAAMoXAADQFwAA0hcBANUXAADfF08AMBgLAD0YuQD4GAEA/hgCAAQZAgAKGQoAGRkEAB8ZAAAlGQAAJxkAADEZAQA1GQAANxkAAD0ZAABCGQEAVBkAAFkZAgBfGQAAYRkFAGkZKACWGQIBmxoAAKAaAQCjGgMAqhoAAKwaAwC0GggAvhpkACQbDQA3GwEAPBsBAD8bAABDGwAARRsAAEcbAgBLGywAeRsXAJIbDACiG60AVBwAAFscAABdHAEAYBwAAGIcAABmHAAAahwAAGwcAABwHAAAcxwAAHYcAAB9HAAAgBwCAIccBgCPHAEAkhwAAJQcAwCcHAAAnhwAAKAcAQClHGkAEx0AAB8dAQBEHQAATB0AAE8dAABuHQsAex0AAH4dBwCHHQEAjx0AAJIdAwCcHQAAoh0DALEdAAC6HQAAwR0BAMQdAgDIHQYA1R0AANgdAADaHQAA3R0BAOYdAQDrHQIA8R0FAPgdAgD8HQEAAB4CAAQeAAAGHgAACB4AAA0eAAATHgAAFh4BABkeAwAeHgAAIB4BACYeBAAuHgEAMh4AAD0eAAA/HkAAgx4DAIseAACNHgAAjx4EAJYeAACYHgAAmh4BAJ0eAACgHgEApR4AAKgefwAqHwAALx8CADMfAQCzHwEAtx8AALkfBgDDHwUAyh8DAM8fAgDUHwAA1h8BANkfAADbHwEA3x8BAOYfAADtHwAA7x8BAPMfAgD3HwMA/R8CAAIgAAAEIAAACyABAA4gAgAYIAAAGiABAB0gAAAhIAIAJyABAC8gAwA1IAEAOSACAD0gAwBDIA4AVyAAAF0gAQBkIAAAZyAFAHAgAAB4IAIAhSAAAI8gAACWIAAAmCABAJsgAACeIAAAoyAAAKUgAACnIAAArCAAALAgAACyIAIAuSAGAMYgCADUIAAA1iAAANogAADgIAAA4iAEAOsgAQDuIAEA8SAAAPQgCAD/IAEAAiEAAAUhAQAJIQAADSEAABYhAAAZIQEAICEBACYhAQApIQQANCECADwhAQBDIQIARyECAFIhAABUIQQAWiEFAGEhAABnIQMAbCEAAG4hAgB0IQAAdiEAAIIhAACFIQEAiCEBAIshAwCRIQUAmCEEAJ4hAACjIQAAqSEAAK8hAQC1IQAAuSEAALshAAC9IQEA4CEAAOUhAADtIQMA8iEFAPohAQAEIgAACCIEAA4iBAAWIgAAGCIBABsiAQAeIgEAIiIAACQiAAAmIgMALSIAADYiAAA4IgAAOiIAAEAiAwBIIgAASiIAAEwiAABOIgEAUyIAAFUiAABbIgIAXyICAGMiBwBsIgAAbiIAAHIiAAB4IgAAeyIAAIEiAACFIgoAkiICAJciAACaIgIApSIBALYiAAC4IgAAuyICAL8iAwDEIgIAyCIAAMsiAADPIl4AMCMOAEIjAQBHIwoAUyMAAFUjAQBYI44A6CN7AGckAABpJAMAdCQAAHckDwCIJHoABCUAAAwlAAARJQAAEyUAABUlAAAbJQUAIiUBACYlAQAqJQAALiUAADQlAQA3JQAAOSV7ALslAwDEJQAAxyUAAMklAADNJQEA0SUBANQlAADcJQAA4CUBAOYlAADsJQAA9iUAAP0lAQAIJgMADyYBAB8mAQAkJgAAJiYAAC4mAQAxJgEANyYAAEQmAABLJgAATSYAAFAmAABYJgAAXSYAAGkmAABsJgEAbyYAAHEmAQB4JgAAeiYBAH8mFACVJgEAmyYBAJ4mDQCtJgQAsyYwAOYmAADoJgAA6iYBAO0mAQDwJgYA+CY/ADonAQA9JwgASCcFAE8nCQBaJwEAXScAAGEnAABjJwMAaCcBAGsnBQB1JxIAiScBAIwnAgCRJwAAlScWAK0nFwDJJwQA0icTAOcnBgD+JwAADCgCACIoAAApKAgANigAADgoDABGKAIASigSAF4oAQBhKA8AcigZAI4oAACQKAIAlSgKAKEoAQCkKAYArCgDALEoAgC1KAAAuCgGAMAoBADHKAIAyygFANMoAADVKA4A6CgBAOwoAADuKAAA8ygBAPYoAAD4KAAA+igEAAApAAACKQAABSkBAAkpAAALKQEADikAABApAgAUKQ0AIykAACUpAQAoKQAAKikBAC0pAAAvKQEAMikAADQpAQA3KQMAPikAAEIpAQBGKQAASSkAAEspAABNKQMAUikAAFUpCABfKQIAZCkDAGkpAABrKQIAcCkAAHIpAgB2KQEAfCkDAIEpAQCEKQAAhikBAIkpAACLKQEAjikAAJApAQCTKQAAlSkBAJgpAACaKQAAnSkSALEpBwC7KQAAvikRANEpCADbKQEA3ikIAOgpAADqKQEA8CkBAPMpBAD8KQEABSoCAAsqAAANKgAAFyoAACYqAwAuKgoAOioAADwqCABHKu8AOCsBADsrGgBXKwEAWisQAG0rEgCBKwAAgysXAJwrAQCgKwAAoisLAK8rAgC2KwAAxisDAM0rBwDiKwUA6isAAPMrAAD1KwEA/CsGAAQsAAAKLAoAHiwFACUsAAAnLAMALCwFADUsBAA7LAEAPywAAEUsBABOLAIAUiwKAGAsAgBkLAAAaCwCAGwsAwB0LBEAiSwBAIwsAQCQLAEAlSwCAKEsAwCpLAUAsSwBALQsMADoLAAA6iwAAO4sAQDxLAEA9SwAAPssAQD+LAMABi0EABItAgAWLQAAGC0AABstAQAeLQEAIS0AACUtAAAqLQMALy0AADItDwBDLSMAaS0BAG0tAQBwLQAAci0AAHUtAQB6LQIAfy0BAIItAACFLQIAiy0BAI4tAACQLQAAki0AAJYtAACZLQMAoi0AAKotAACsLQEAry0BALwtBwDILQQAzi0BANQtAADWLQAA2y0DAOUtAADoLQMA7S0AAPAtCwD9LQAA/y0AAAEuBAAHLhYAIC4BACQuDwA1LgEAOC4EAA=="}],["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCCHCQQQQQQIFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNCCNNNNNNNNNNNNNCNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPNNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCPTTTTFPPTTFKFFGFGKPTTTPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIKKNNNNNNMNNNNCNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNCHNNNNNNNMNNNNNNNNNMMNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRRPPPPPPPPPNMMMMMMMNMCNNNMMNNNNNNNMMNMCMMCNNCMMCMMMMNNNNNNMMNNNNNNMMMMNMNMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHHKFFNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNNCHHHHHHHPGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGPFFJJGPPPFPFPPPPIFPFPPFPPPPFFIPPPPPPPIFPPPIFKPFRRRSIIIPKKPIFPPPIFPPPIFPPPIFPPPIFPKRRRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIIFKKKKRGGPPKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNMNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNHNNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNNFFFKGPFPPPGNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNFNNNNNNNNNNNNNNNNNGPPPPGFHHHPPPPPPFPPPPPPGIGPPPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHNQQQQHHNNNNNNNNNNOOOOJJJEEEEEEEGPPNNNNNNNNNHNHHHHHNNHHHHHNNNNNPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGKPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNONNONNNNOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFFKSHHHNNNNNNNNNNNNNNNNOONNNNHNNNNNNNNNNNNNNNNNGFEKIFIEEPFFFKGKFEEEEEPPPEPTTPPPKKKPFPPIIGKEEEPIIIPPEPEEEKEEPPPKKPEPGPPIFEKPPPFGEEIEPKGPPGGFFFPPEPPEEPKFPEPEEPKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHEONNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNHNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOONNONMMNNNNNNNNNNNNNCNNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNNOONNNNNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNHRTIKKIHNMNMNMNMNMNMNMNPPGEPPKGGPPPFFIKPNNNNNNNNNNCNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMNMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNNNNMNNNNNNNMMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNMNNNMNNMNNNNNNNMNNNNNMNNNNMNNNNNNNNNNNNNNNNNMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFINNNNNNNNNNNNNNNNNNNNNNKKKRMMNNCMMNNMMNNMMNNMMNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNNTTKKKKKFFFFFNNNHHHHHHHNNNHHEHNNNNNNNNNNNNNNNNNNMNNNNNNNNNHHNNNHHNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNOCNNNNNNNNNNNNNNNNNNNMNNNNNNHHHHNNNNNNNNNNNNNNNNNNNMNNNNMNMHMNNNNNNHENNNMHHHMHNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_dtype_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","scalar","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","_sum_as_f64","add","","","","add_to","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","","apply_in_place","apply_into_string_amortized","apply_kernel","apply_kernel_cast","apply_mut","","","apply_nonnull_values_generic","apply_to_inner","apply_to_slice","apply_values","apply_views","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitor","bitxor","borrow","","borrow_mut","","boxed_metadata_dyn","builder","cast","cast_and_apply_in_place","cast_unchecked","cast_with_options","checked_div","checked_div_num","chunk_lengths","","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","concat_compact","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","","deref_mut","","div","","","","divide","drop","","","drop_nulls","dtype","equal","","equal_missing","","extend","fill_null_with_values","filter","first","first_non_null","float","fmt","","for_each","for_each_amortized","from","","","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_iter","","","from_iter_options","from_iter_trusted_length","","from_iter_values","from_iterator_par","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","group_tuples","group_tuples_perfect","gt","","gt_eq","","has_nulls","head","init","","init_rand","inner_dtype","interior_mut_metadata","into","","into_column","into_decimal","into_decimal_unchecked","into_iter","into_no_null_iter","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","join_compact","last","last_non_null","layout","legacy_div","","legacy_div_scalar","","legacy_div_scalar_lhs","","len","","lhs_div","lhs_rem","lhs_sub","limit","lt","","lt_eq","","max","","max_reduce","mean","","median","median_reduce","merge_metadata","metadata","","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","","min_max","min_reduce","mmap_slice","","mul","","","","multiply","n_chunks","n_unique","name","new","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not_equal","","not_equal_missing","","null_count","object","ops","par_iter","","par_iter_indexed","","prod_reduce","prune_empty_chunks","quantile","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","rem","","","","remainder","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","","sort","sort_with","split_at","","std","std_reduce","sub","","","","subtract","sum","","sum_reduce","tail","take","","take_unchecked","","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","","true_div_scalar","","true_div_scalar_lhs","","try_apply_amortized","try_apply_amortized_generic","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","","try_from_chunk_iter","try_into","","try_zip_and_apply_amortized","type_id","","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","vzip","","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","","wrapping_add","","wrapping_add_scalar","","wrapping_floor_div","","wrapping_floor_div_scalar","","wrapping_floor_div_scalar_lhs","","wrapping_mod","","wrapping_mod_scalar","","wrapping_mod_scalar_lhs","","wrapping_mul","","wrapping_mul_scalar","","wrapping_neg","","wrapping_sub","","wrapping_sub_scalar","","wrapping_sub_scalar_lhs","","wrapping_trunc_div","","wrapping_trunc_div_scalar","","wrapping_trunc_div_scalar_lhs","","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","","","","append_null","","","","","append_option","","append_value","","","","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","deref","","","","deref_mut","","","","drop","","","","finish","","","","","","","","from","","","","from_iter_options","from_iter_values","from_slice","from_slice_options","init","","","","into","","","","list","new","","","","shrink_to_fit","","","","to_owned","","","","try_from","","","","try_into","","","","type_id","","","","vzip","","","","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","","append_iter","","append_iter_values","append_null","","","","","","","","append_opt_array","append_opt_series","","append_opt_slice","append_series","","","","","","","","append_slice","append_trusted_len_iter","","append_values_iter","","borrow","","","","","","","borrow_mut","","","","","","","builder","default","","deref","","","","","","","deref_mut","","","","","","","drop","","","","","","","fast_explode","","","","","field","","","","","finish","","","","from","","","","","","","get_list_builder","init","","","","","","","inner_array","","","","","into","","","","","","","new","","","","","","","new_with_values_type","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","vzip","","","","","","","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","","borrow_mut","","deref","","deref_mut","","drop","","from","","init","","into","","into_iter","","new","next","","next_back","","par","size_hint","","try_from","","try_into","","type_id","","vzip","","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","","","","","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","","","","","borrow_mut","","","","","","","boxed_upcast","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","collect_cheap_metadata","","complement","","contains","","default","","","","deref","","","","","","","","deref_mut","","","","","","","difference","","disabled","distinct_count","","","distinct_count_opt","drop","","","","","","","empty","","enabled","eq","","experimental_enabled","extend","","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","","","","","","","","","","","","from","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","get_distinct_count","get_fast_explode_list","","get_flags","","","get_max_value","get_min_value","get_mut","get_sorted_flag","init","","","","","","","insert","","intersection","","intersects","","into","","","","","","","into_iter","","is_all","","is_empty","","","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","","iter_names","","log","logfile","max_value","","","max_value_opt","merge","min_value","","","min_value_opt","new","not","","read","remove","","set","","set_distinct_count","set_fast_explode_list","","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","","sorted","sorted_opt","sub","","sub_assign","","symmetric_difference","","take","to_owned","","","","","toggle","","try_from","","","","","","","try_into","","","","","","","try_read","try_write","type_id","","","","","","","union","","upcast","vzip","","","","","","","with_cheap_metadata","","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","equal","fmt","from","","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","","iter","","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","","to_owned","try_arr_from_iter","","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","","validity","value","value_unchecked","","values_iter","","vzip","with_validity","","with_validity_typed","ObjectChunkedBuilder","append_null","","append_option","append_value","","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompareEq","ChunkCompareIneq","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","","Max","MaxBound","Mean","Min","MinBound","None","One","Some","Zero","__clone_box","_sum_as_f64","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_elementwise","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","default","","deref","","deref_mut","","descending","","drop","","eq","","equivalent","","","","","","fmt","","from","","","","hash","","init","","into","","maintain_order","","multithreaded","","new","","nulls_last","","slice_typed","slice_typed_unchecked","to_owned","","try_from","","try_into","","type_id","","vzip","","with_maintain_order","","with_multithreaded","","with_nulls_last","","with_nulls_last_multi","with_order_descending","","with_order_descending_multi","with_order_reversed","","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Dimension","Duration","","DurationType","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","Infer","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","ReshapeDimension","RevMapping","Second","Specified","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_can_fast_explode","add","","","","","","","","","","add_to","","","","","","","","","","","agg_list","","","","","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","","","","","apply_amortized","apply_amortized_generic","apply_as_ints","","apply_kernel","","","apply_kernel_cast","","","apply_mut","","apply_to_inner","apply_to_slice","","","","","apply_values","","","","","apply_views","arg_sort","","","","arg_sort_multiple","","","","arg_unique","","","","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_binary","as_borrowed","as_ref","","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","","bitor","","bitxor","","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","boxed","call_categorical_merge_operation","cast","","","cast_leaf","cast_unchecked","","","","","cast_with_options","","","","","","","categorical","checked_div","","","","","","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cmp","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","contains_categoricals","contains_objects","contains_views","create_enum_dtype","default","","","","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","div","divide","","","","","","","","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dtype","","","","","enum_","eq","","","","","","","","","","","eq_missing","equal","","","","","","equal_missing","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","explode_and_offsets","field","fill_null_with_values","","filter","","","finish","fmt","","","","","","","","","","","","","","","","","","","for_each_amortized","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_arrow","from_iter","","","","","","","","","from_iter_options","","","","from_iter_trusted_length","","","","","","","","","","from_iter_values","","","","from_par_iter","","","","","","","from_par_iter_with_dtype","from_slice","","","","from_slice_options","","","","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","","","","","","","full_null","","","","","","","full_null_with_dtype","get","","","get_any_value","","","","","","","","","get_any_value_unchecked","","","","","","","","","get_as_series","get_dtype","","","","","","","","","","","","","","","","","","","","","","","","get_inner","get_object","get_object_unchecked","get_or_infer","get_or_infer_with","get_str","get_unchecked","","get_values_size","","","group_tuples","","","","","","gt","","","","","gt_eq","","","","","hash","","","","","","","","hash_impl","idx","implode","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner_dtype","","","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","into_decimal","into_decimal_unchecked","into_iter","","","","","","into_scalar","into_series","","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_date","is_decimal","is_enum","is_float","","is_integer","","is_known","is_list","is_logical","is_nan","is_nested","","is_nested_null","","is_null","","is_numeric","","is_object","is_ord","is_primitive","is_signed_integer","","is_string","is_struct","is_temporal","is_unsigned_integer","","is_view","iter","iter_offsets","last","leaf_dtype","lt","","","","","lt_eq","","","","","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max","max_reduce","","","mean","median","","median_reduce","","merge_dtypes","min","min_reduce","","","mmap_slice","mul","multiply","","","","","","","","n_unique","","name","","new","","","","","","","","","","","","","","","","new_dimension","new_empty","new_from_index","","","","","","new_from_vec","new_from_vec_and_validity","new_logical","newest","not","","not_equal","","","","","","not_equal_missing","","","","","","offsets","oldest","par_iter","","par_iter_indexed","","partial_cmp","","","physical","precision","","quantile","","quantile_reduce","","rand_bernoulli","remainder","","","","","","","","reverse","","","","","","revmap","scale","","scatter_single","","","scatter_with","","","set","","","set_fast_explode","set_inner_dtype","set_name","shift","","","","","","shift_and_fill","","","","","","sort","","","","sort_with","","","","std_reduce","","str_value","strict_cast","string_cache","sub","subtract","","","","","","","","sum","sum_reduce","","take_unchecked","","","","to_arrow","","","to_arrow_field","to_ascii","to_decimal","to_fixed_size_list","to_logical","to_logical_type","to_ndarray","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_scale","","to_string","","","","to_string_unchecked","tot_eq","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_strict_cast","try_to_arrow","try_to_compact_string","","","","try_zip_and_apply_amortized","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","underlying_physical_type","unique","","","","value","value_unchecked","value_within_range","values_iter","var_reduce","","vec_hash","","","","","","","","","","","","","","","","vec_hash_combine","","","","","","","","","","","","","","","","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","with_capacity","","","with_nullable_idx","with_validity_typed","zero_sum","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","_with_fast_unique","append","","append_null","append_value","arg_sort","borrow","","","","borrow_mut","","","","call_categorical_merge_operation","cast_with_options","clone","clone_into","clone_to_uninit","default","deref","","","","deref_mut","","","","drain_iter_and_finish","drop","","","","dtype","equal","","","equal_missing","","","finish","","","from","","","","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","","","gt_eq","","","init","","","","into","","","","into_column","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","","","lt_eq","","","make_categoricals_compatible","make_list_categoricals_compatible","max_reduce","merge_map","min_reduce","n_unique","name","new","","next","not_equal","","","not_equal_missing","","","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","","","","try_into","","","","type_id","","","","unique","uses_lexical_ordering","value_counts","vzip","","","","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","","borrow","","borrow_mut","","build_local","clone","","clone_into","","clone_to_uninit","","default","","deref","","deref_mut","","drop","","eq","find","fmt","","from","","get","get_categories","get_optional","init","","into","","is_global","is_local","len","same_src","to_owned","","try_from","","try_into","","type_id","","vzip","","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","EnumChunkedBuilder","append_enum","append_null","append_str","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","","borrow_mut","","constants","deref","","","deref_mut","","drop","","feature_gated","fmt","","","from","","","get_warning_function","init","","into","","map_err","new_static","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","","try_into","","try_to_compact_string","type_id","","vzip","","error","","msg","","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","","","_add_columns","_add_series","_apply_columns","_apply_columns_par","_filter_seq","_new_no_checks_impl","_select_impl","_select_impl_unchecked","_select_with_schema_impl","_slice_and_realloc","_to_metadata","add","","","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","","","","","borrow_mut","","","","","chunk_lengths","clear","clone","","","clone_into","","","clone_to_uninit","","","column","","columns","default","","deref","","","","","deref_mut","","","","","div","","","drop","","","","","","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","","equals","equals_missing","equivalent","","","estimated_size","explode","","explode_impl","extend","fields","fill_null","filter","fmt","","","","from","","","","","from_iter","","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_column_names_str","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","","","","","","","","init","","","","","insert_column","into","","","","","into_iter","","is_duplicated","is_empty","is_unique","iter","iter_chunks","","iter_chunks_physical","len","materialized_column_iter","max_horizontal","mean_horizontal","min_horizontal","mul","","","n_chunks","","new","new_no_checks","new_no_length_checks","new_with_broadcast","new_with_broadcast_no_checks","next","","null_count","par_materialized_column_iter","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rem","","","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_columns","select_physical","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size","size_hint","","slice","","slice_par","sort","sort_in_place","split_at","","split_chunks","split_chunks_by_n","sub","","","sum_horizontal","tail","take","take_columns","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","","","to_string","transpose","transpose_impl","try_apply","try_apply_at_idx","try_from","","","","","","","try_from_rows_iter_and_schema","try_get_column_index","try_into","","","","","try_to_compact_string","type_id","","","","","unique","unique_impl","unique_stable","vstack","vstack_mut","vstack_mut_unchecked","vzip","","","","","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","Column","IntoColumn","Scalar","ScalarColumn","Series","__clone_box","","add","","","","agg_first","agg_last","agg_list","agg_max","agg_mean","agg_median","agg_min","agg_n_unique","agg_quantile","agg_sum","agg_var","append","arg_sort","as_materialized_series","","as_scalar_column","as_series","as_single_value_series","binary","binary_offset","bit_repr","bitand","","","bitor","","bitxor","","bool","borrow","","borrow_mut","","cast","","cast_unchecked","","cast_with_options","","categorical","clear","clone","","clone_into","","clone_to_uninit","","decimal","default","deref","","deref_mut","","div","","","","divide","drop","","drop_nulls","dtype","","eq","equal","equal_missing","equals","equals_missing","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","","from","","","","from_single_value_series","full_null","gather_every","get","get_data_ptr","get_flags","get_metadata","get_object","get_unchecked","gt","gt_eq","has_nulls","","head","i16","i32","i64","i8","idx","init","","into","","into_column","","","into_frame","into_materialized_series","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_sorted_flag","lazy_as_materialized_series","len","","list","lt","lt_eq","max_reduce","min_reduce","mul","","","","name","","new","","new_empty","","new_from_index","new_scalar","not_equal","not_equal_missing","null_count","phys_iter","product","rechunk","rem","","","","rename","","reshape_list","resize","reverse","sample_frac","sample_n","scalar","set_sorted_flag","shift","shrink_to_fit","shuffle","slice","sort","split_at","str","strict_cast","","sub","","","","tail","take","take_materialized_series","","take_slice","take_slice_unchecked","take_unchecked","to_owned","","to_physical_repr","to_series","try_binary","try_binary_offset","try_bool","try_categorical","try_decimal","try_f32","try_f64","try_from","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","try_list","try_str","try_u16","try_u32","try_u64","try_u8","type_id","","u16","u32","u64","u8","unique","unique_stable","unit_scalar_from_series","vec_hash","vec_hash_combine","vzip","","with_name","wrapping_trunc_div_scalar","zip_with","zip_with_same_type","UnpivotArgsIR","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","index","init","into","on","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","","SlicedGroups","Std","Sum","Var","__clone_box","","","","agg_list","aggregations","all","apply","as_list_chunked","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","count","default","","deref","","","","","","","","","deref_mut","","","","","","","","df","drive_unindexed","drop","","","","","","","","","eq","","equivalent","","","","","","expr","first","","","first_mut","fmt","","","","","fmt_group_by_column","from","","","","","","","","","","","","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","","groups","idx_mut","init","","","","","","","","into","","","","","","","","into_idx","into_iter","","","into_par_iter","","","is_empty","","is_sorted_flag","iter","","keys","keys_sliced","last","len","","max","mean","median","min","n_unique","new","","next","nth","par_apply","par_iter","","quantile","select","slice","sort","","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","","","","to_string","try_from","","","","","","","","try_into","","","","","","","","try_to_compact_string","type_id","","","","","","","","unroll","unwrap_idx","unwrap_slice","var","vzip","","","","","","","","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","","AnyValueBuffer","AnyValueBufferTrusted","Boolean","","Float32","","Float64","","Int32","","Int64","","Null","","Row","String","","UInt32","","UInt64","","__clone_box","","","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","coerce_dtype","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","","fmt","from","","","","","infer_schema","init","","","into","","","into_series","","new","","","reset","","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","IdxHash","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","","borrow_mut","","default","deref","","deref_mut","","drop","","finish","fmt","from","","hash","","idx","init","","into","","populate_multiple_key_hashmap","try_from","","try_into","","type_id","","vec_hash","","vec_hash_combine","","vzip","","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","Column","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","EMPTY","EMPTY_REF","Earliest","Err","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoColumn","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","Midpoint","NamedFrom","NamedFromOwned","Nearest","NewChunkedArray","NoData","NonExistent","Null","","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","Ok","OutOfBounds","Physical","PlSmallStr","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","Quantile","QuantileAggSeries","QuantileInterpolOptions","Raise","","RevMapping","RollingFnParams","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SQLInterface","SQLSyntax","Scalar","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","UnpivotArgsIR","Var","VarAggSeries","VecHash","__clone_box","","","","","","","","","","","","allocator","as_fd","as_ptr","as_raw_fd","as_ref","","","","","as_str","assume_init","","borrow","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","","","","","","","","","","","","clone_into","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","cmp","","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","","context","context_trace","convert_inner_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","","","","","","","","","default_arrays","deref","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","description","df","downcast","downcast_unchecked","downgrade","drop","","","","","","","","","","","","","","","dtype","","eq","","","","","","","","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","","extract","finish","flush","fmt","","","","","","","","","","","","","","","","","fn_params","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_data_default","from_data_unchecked_default","","from_iter","","","","","","","","","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_static","from_str","","from_string","from_vec","ge","get_mut","get_mut_unchecked","get_unchecked","gt","hash","","","","","","idx","increment_strong_count","increment_strong_count_in","indexes_to_usizes","init","","","","","","","","","","","","","","inner","inner_mut","interpol","into","","","","","","","","","","","","","","into_column","into_inner","into_raw","into_raw_with_allocator","into_series","into_string","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","iter_names_and_dtypes","le","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_reduce","","median_reduce","metadata","min_periods","min_reduce","","name","ne","negative_to_usize","new","","","new_cyclic","new_cyclic_in","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","","","partial_cmp","","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_reduce","","provide","ptr_eq","quantile_reduce","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_reduce","store","string_cache","strong_count","sum_reduce","","to_opt","to_owned","","","","","","","","","","","","to_string","","","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_to_compact_string","","","try_unwrap","type_id","","","","","","","","","","","","","","unwrap_or_clone","utf8","var_reduce","vzip","","","","","","","","","","","","","","weak_count","weights","window_size","with_metadata","wrap_msg","write","write_char","write_fmt","write_str","write_vectored","error","","msg","","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","dtype","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","","set_global_random_seed","Scalar","__clone_box","as_any_value","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","fmt","from","","","","","","","","","","","init","into","into_column","into_series","is_nan","is_null","new","reduce","to_owned","try_from","try_into","type_id","update","value","vzip","mean_reduce","DataType","IS_ARROW","Schema","SchemaExt","SchemaNamesAndDtypes","SchemaRef","ensure_matching_schema","from","from_arrow_schema","","get_field","","iter_fields","","iter_names_and_dtypes","","to_arrow","","to_supertype","","try_get_field","","Ascending","","BitRepr","ChunkCompareEq","Descending","","IntoSeries","IsSorted","","Large","Not","","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","","_sum_as_f64","","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","","","","amortized_iter","append","arg_sort","","arg_unique","","arithmetic","array_ref","as_any","as_any_mut","","as_list","as_mut","as_ref","","as_single_ptr","","","binary","binary_offset","bitand","","bitor","","bitxor","","bool","borrow","","","","borrow_mut","","","","boxed_metadata","","cast","","cast_unchecked","cast_with_options","categorical","checked_div","","","checked_div_num","chunk_lengths","","chunks","chunks_mut","","clear","clone","","clone_inner","clone_into","","clone_to_uninit","","compute_len","decimal","default","deref","","","","","deref_mut","","","","div","","","","dot","drop","","","","drop_nulls","","dtype","","eq","","equal","","","equal_missing","","","equals","equals_missing","equivalent","","","estimated_size","explode","extend","extend_constant","f32","f64","field","","fill_null","filter","fmt","","","fmt_list","from","","","","","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_iter","","","","","","","","","","","","","","","","","","","","","","","","","from_vec","","","","","","","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","","get_object","","get_object_chunked_unchecked","","get_unchecked","","gt","","","gt_eq","","","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","","","","into","","","","into_column","into_frame","into_iter","into_series","","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","","","is_sorted_flag","iter","iter_chunks","len","","limit","","list","lt","","","lt_eq","","","max","max_reduce","","mean","","mean_reduce","median","","median_reduce","","min","min_reduce","","mul","","","","n_chunks","","","n_unique","","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_null","next","not_equal","","","not_equal_missing","","","null","null_count","ops","phys_iter","product","quantile_reduce","","rechunk","rem","","","rename","","reshape_list","reverse","","rolling_map","","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","","","shuffle","size_hint","slice","","sort","sort_with","","split_at","","std","","std_reduce","","str","str_value","strict_cast","sub","","","","sum","sum_reduce","","","tail","take","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","to_arrow","to_float","to_owned","","to_physical_repr","to_string","try_add_owned","try_binary","try_binary_offset","try_bool","try_categorical","try_decimal","try_f32","try_f64","try_from","","","","","","","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","","","try_list","try_mul_owned","try_new","try_null","try_set_metadata","try_str","try_sub_owned","try_to_compact_string","try_u16","try_u32","try_u64","try_u8","type_id","","","","u16","u32","u64","u8","unique","","unique_stable","unpack","var","","var_reduce","","vzip","","","","with_name","wrapping_trunc_div_scalar","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","add","add_to","","","checked","div","divide","","","mul","multiply","","","rem","remainder","","","sub","subtract","","","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","","","checked_div_num","","","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ALLOW_IMPLODE_LIST","ALLOW_PRIMITIVE_TO_STRING","Container","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","SuperTypeFlags","SuperTypeOptions","TrustMyLength","Wrap","__clone_box","","","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all","allow_implode_list","allow_primitive_to_string","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","binary_concatenate_validities","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","borrow_mut","","","","","chunk_lengths","clone","","","clone_into","","","clone_to_uninit","","","coalesce_nulls","coalesce_nulls_columns","collect_reversed","collect_trusted","complement","concat_df","concat_df_unchecked","contains","default","","deref","","","","","","","deref_mut","","","","","","difference","drop","","","","","dtypes_to_schema","dtypes_to_supertype","empty","eq","","","equivalent","","","","","","","","","extend","flags","flatten","fmt","","","","","","from","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","","","from_iter_trusted_length","","","from_name","from_par_iter","from_trusted_len_iter_rev","","get_supertype","get_supertype_with_options","get_time_units","handle_casting_failures","hash","","","init","","","","","insert","intersection","intersects","into","","","","","into_inner","into_iter","","into_vec","","is_all","is_empty","iter","iter_chunks","iter_names","len","materialize_dyn_int","n_chunks","new","","new_repeat_n","next","next_back","not","operation_exceeded_idxsize_msg","rayon","remove","set","size_hint","slice","slice_slice","split","split_and_flatten","split_at","split_df_as_ref","sub","sub_assign","symmetric_difference","to_owned","","","toggle","trust_my_length","try_from","","","","","try_get_supertype","try_into","","","","","type_id","","","","","union","vzip","","","","","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[40,"polars_core::chunked_array"],[445,"polars_core::chunked_array::arithmetic"],[473,"polars_core::chunked_array::builder"],[581,"polars_core::chunked_array::builder::list"],[735,"polars_core::chunked_array::cast"],[764,"polars_core::chunked_array::collect"],[778,"polars_core::chunked_array::float"],[780,"polars_core::chunked_array::from_iterator_par"],[784,"polars_core::chunked_array::iterator"],[821,"polars_core::chunked_array::iterator::par"],[823,"polars_core::chunked_array::metadata"],[1109,"polars_core::chunked_array::object"],[1186,"polars_core::chunked_array::object::builder"],[1209,"polars_core::chunked_array::object::registry"],[1237,"polars_core::chunked_array::ops"],[1366,"polars_core::chunked_array::ops::arity"],[1402,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1404,"polars_core::chunked_array::ops::gather"],[1407,"polars_core::chunked_array::ops::search_sorted"],[1437,"polars_core::chunked_array::ops::sort"],[1444,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1445,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[1453,"polars_core::chunked_array::ops::sort::options"],[1530,"polars_core::chunked_array::temporal"],[1531,"polars_core::chunked_array::temporal::conversion"],[1534,"polars_core::config"],[1538,"polars_core::datatypes"],[3059,"polars_core::datatypes::categorical"],[3201,"polars_core::datatypes::categorical::revmap"],[3255,"polars_core::datatypes::categorical::string_cache"],[3274,"polars_core::datatypes::enum_"],[3292,"polars_core::datatypes::revmap"],[3298,"polars_core::datatypes::string_cache"],[3302,"polars_core::error"],[3369,"polars_core::error::PolarsError"],[3373,"polars_core::error::constants"],[3376,"polars_core::export"],[3383,"polars_core::fmt"],[3414,"polars_core::frame"],[3698,"polars_core::frame::column"],[3930,"polars_core::frame::explode"],[3959,"polars_core::frame::group_by"],[4198,"polars_core::frame::group_by::GroupByMethod"],[4199,"polars_core::frame::group_by::GroupsProxy"],[4201,"polars_core::frame::group_by::aggregations"],[4214,"polars_core::frame::group_by::expr"],[4217,"polars_core::frame::row"],[4314,"polars_core::functions"],[4316,"polars_core::hashing"],[4364,"polars_core::prelude"],[4994,"polars_core::prelude::PolarsError"],[4998,"polars_core::prelude::default_arrays"],[5004,"polars_core::prelude::list"],[5027,"polars_core::prelude::null"],[5058,"polars_core::prelude::revmap"],[5064,"polars_core::prelude::slice"],[5067,"polars_core::prelude::string_cache"],[5071,"polars_core::prelude::utf8"],[5075,"polars_core::random"],[5076,"polars_core::scalar"],[5116,"polars_core::scalar::reduce"],[5117,"polars_core::schema"],[5139,"polars_core::series"],[5579,"polars_core::series::amortized_iter"],[5603,"polars_core::series::arithmetic"],[5628,"polars_core::series::arithmetic::checked"],[5636,"polars_core::series::ops"],[5663,"polars_core::utils"],[5874,"polars_core::utils::flatten"],[5879,"dyn_clone::sealed"],[5880,"num_traits"],[5881,"num_traits::cast"],[5882,"polars_error"],[5883,"polars_core::series::arithmetic::borrowed"],[5884,"polars_core::frame::group_by::proxy"],[5885,"core::option"],[5886,"core::iter::traits::iterator"],[5887,"polars_utils::pl_str"],[5888,"core::ops::function"],[5889,"core::marker"],[5890,"alloc::string"],[5891,"polars_core::datatypes::dtype"],[5892,"polars_arrow::array::binview::view"],[5893,"polars_core::datatypes::aliases"],[5894,"polars_core::chunked_array::metadata::md_trait"],[5895,"alloc::boxed"],[5896,"polars_core::series::arithmetic::borrowed::checked"],[5897,"polars_arrow::array"],[5898,"alloc::vec"],[5899,"compact_str"],[5900,"core::iter::traits::double_ended"],[5901,"core::fmt"],[5902,"core::iter::traits::collect"],[5903,"polars_arrow::bitmap::immutable"],[5904,"rayon::iter"],[5905,"polars_arrow::trusted_len"],[5906,"polars_core::datatypes::any_value"],[5907,"polars_utils::index"],[5908,"std::sync::rwlock"],[5909,"polars_core::chunked_array::logical::decimal"],[5910,"core::iter::traits::exact_size"],[5911,"polars_core::series::series_trait"],[5912,"core::slice::iter"],[5913,"core::iter::adapters::map"],[5914,"core::convert"],[5915,"polars_core::chunked_array::metadata::guard"],[5916,"polars_core::chunked_array::metadata::interior_mutable"],[5917,"alloc::sync"],[5918,"core::ops::range"],[5919,"polars_core::datatypes::field"],[5920,"polars_arrow::legacy::kernels::rolling::no_nulls"],[5921,"polars_core::chunked_array::ops::rolling_window"],[5922,"polars_utils::aliases"],[5923,"polars_utils::hashing"],[5924,"ndarray::aliases"],[5925,"either"],[5926,"core::result"],[5927,"core::any"],[5928,"polars_core::chunked_array::arithmetic::numeric"],[5929,"polars_core::chunked_array::builder::string"],[5930,"polars_arrow::array::binview"],[5931,"polars_core::chunked_array::builder::boolean"],[5932,"polars_core::chunked_array::builder::null"],[5933,"polars_core::chunked_array::builder::primitive"],[5934,"core::clone"],[5935,"polars_core::chunked_array::builder::list::anonymous"],[5936,"polars_core::chunked_array::builder::list::boolean"],[5937,"polars_core::chunked_array::builder::list::primitive"],[5938,"polars_core::chunked_array::builder::list::binary"],[5939,"polars_core::chunked_array::builder::list::null"],[5940,"core::hash"],[5941,"polars_arrow::array::boolean"],[5942,"polars_core::chunked_array::metadata::env"],[5943,"polars_core::chunked_array::metadata::collect"],[5944,"bitflags::iter"],[5945,"std::fs"],[5946,"std::sync::mutex"],[5947,"polars_arrow::datatypes"],[5948,"polars_arrow::bitmap::utils::iterator"],[5949,"polars_arrow::bitmap::utils::zip_validity"],[5950,"polars_arrow::offset"],[5951,"polars_arrow::array::static_array"],[5952,"core::error"],[5953,"polars_arrow::array::primitive"],[5954,"polars_arrow::legacy::array::slice"],[5955,"polars_row::row"],[5956,"polars_arrow::array::binary"],[5957,"chrono::naive::datetime"],[5958,"alloc::borrow"],[5959,"polars_arrow::array::static_array_collect"],[5960,"bytemuck::zeroable"],[5961,"polars_core::chunked_array::logical::categorical"],[5962,"polars_core::chunked_array::logical::categorical::merge"],[5963,"polars_core::chunked_array::logical"],[5964,"polars_core::datatypes::reshape"],[5965,"polars_core::datatypes::time_unit"],[5966,"core::cmp"],[5967,"polars_arrow::datatypes::physical_type"],[5968,"polars_arrow::types"],[5969,"core::borrow"],[5970,"polars_arrow::pushable"],[5971,"polars_core::datatypes::into_scalar"],[5972,"polars_core::chunked_array::logical::categorical::builder"],[5973,"polars_core::chunked_array::logical::categorical::revmap"],[5974,"polars_core::chunked_array::logical::categorical::string_cache"],[5975,"polars_core::chunked_array::logical::enum_"],[5976,"polars_error::warning"],[5977,"polars_arrow::datatypes::schema"],[5978,"polars_core::series::from"],[5979,"polars_core::chunked_array::ndarray"],[5980,"polars_arrow::record_batch"],[5981,"polars_arrow::array::struct_"],[5982,"polars_core::frame::column::scalar"],[5983,"polars_core::series::iterator"],[5984,"polars_utils::idx_vec"],[5985,"rayon::iter::plumbing"],[5986,"polars_core::frame::group_by::into_groups"],[5987,"core::iter::adapters::copied"],[5988,"core::iter::adapters::zip"],[5989,"polars_arrow::legacy::kernels::rolling"],[5990,"polars_utils::float"],[5991,"polars_arrow::types::native"],[5992,"polars_core::frame::group_by::aggregations::agg_list"],[5993,"polars_core::frame::row::av_buffer"],[5994,"polars_core::hashing::identity"],[5995,"hashbrown::map"],[5996,"polars_core::hashing::vector_hasher"],[5997,"core::alloc"],[5998,"std::os::fd::owned"],[5999,"std::os::fd::raw"],[6000,"std::ffi::os_str"],[6001,"std::path"],[6002,"core::mem::maybe_uninit"],[6003,"polars_arrow::legacy::kernels::time"],[6004,"core::ffi::c_str"],[6005,"core::default"],[6006,"polars_arrow::scalar"],[6007,"std::io::error"],[6008,"simdutf8::basic"],[6009,"alloc::collections"],[6010,"regex::error"],[6011,"alloc::ffi::c_str"],[6012,"polars_arrow::legacy::array::default_arrays"],[6013,"polars_arrow::buffer::immutable"],[6014,"polars_arrow::array::list"],[6015,"polars_core::named_from"],[6016,"polars_core::chunked_array::ops::aggregate"],[6017,"polars_core::chunked_array::ops::aggregate::quantile"],[6018,"polars_arrow::legacy::index"],[6019,"core::pin"],[6020,"core::io::borrowed_buf"],[6021,"std::io"],[6022,"polars_core::chunked_array::ops::aggregate::var"],[6023,"alloc::collections::btree::map"],[6024,"polars_arrow::legacy::array::list"],[6025,"polars_arrow::legacy::array::null"],[6026,"polars_arrow::bitmap::mutable"],[6027,"polars_arrow::array::utf8"],[6028,"polars_schema::schema"],[6029,"alloc::rc"],[6030,"polars_core::utils::supertype"],[6031,"polars_arrow::legacy::utils"],[6032,"polars_arrow::legacy::trusted_len::rev"],[6033,"core::iter::sources::repeat"],[6034,"core::iter::adapters::take"],[6035,"polars_core::chunked_array::object::extension"],[6036,"polars_error::constants"],[6037,"polars_core::frame::horizontal"],[6038,"polars_arrow::legacy::prelude"],[6039,"polars_arrow::legacy::array"],[6040,"polars_arrow::legacy::array::utf8"],[6041,"polars_core::utils::any_value"],[6042,"polars_core::utils::schema"],[6043,"polars_core::utils::series"]],"i":"```````````````````````````````````````````Kl000l00000000000000000000000000000000000`000000001010``0000000000000`0`00000001010000000100000000000`000000100000000000`000000000000000000000000000000001000010000000000000000000`0000000000000000000000000000`0000000000000000000000000000000000000000000000000000000``000000000000000000000000000000000000000000000000000000000`00000000000000000000010010010000000100000000000000000000000000000000000000000000`A@`00000000000000000000000000````````A@dA@hA@jA@lA@b432140043143214321432143214321432143214321044AA`AAb5436543AAd00076547654`7654365476547654765476547654````````AAf0AAhAAjAAl0AAn43AB`ABb4ABd47734376215044212176215047621504476762150476215047621504215432154376037621504`7621504215437621504762150447621504762150476215047621504`Fd000000000000000000000000000``ABhABj1000101000`ABl``ABnAC````ACdACf101010101010101011010`1010101010``ADdInGb0Ib`3Lb22````````42110Ld4ACh43434343434344334343215604321560431150431504315043ACj054542654332671543267154541F`7774378265652652657777777266666555554378265656655656565775077773543782656565654378265656576577776565220777707773653656577577777757765656533726565437826543782653343782656534378265113````ADh00000If1111`111111110011111111111111111111``111111101111111110Ih2222222222`AEf000000000000000000000````AEj00AEl0000000```00`0`10000AG`````````````````````````````0AFf``AGbAHb33333CEf4044AFb4AFh055AFj0AFl`88AFn00999999977AGd0`AGhAGj`<<`AGlAGn`AH`0<<????AHdAHf>><<AHh==:AHjAGb0:2AHlAHnAI`0`0AIbAId`AFj0AIfAFbAIhAIjAIlAG`000AFl61`AIn`AJhAJdAJ``````````````````````````````````````AJl00`0`000000000000000000`00000`````AJn0````````````EdEj101010101010101010101011100010110010101010101010221010101010101010010010````````AMl`C```````HnDnADj`1``2`0210```21````2`````100`1`2100``0`10`2120```0040210``210```BCd`4CEhCEj````ANb``8``654``654``654``654``4`777444BCf765``4``5AOlANd1010A`:98`:9`:``;3;```````````B@h``35`=;:`;`9:99```90`;:9``;:9``;:9``;:9``9:9`99AJb0=0AMhAMj>AMl>AMnMjAN`<9ANfANhLnMhANjANlMdM`ClCnANnAO`DjDdAObAnAOdAOfAOhAOjADjAOlE`JdGf0D`00El00HnjJbLnMhMdM`ClCnDjDdAnE`?>=AEhGf0220020D`El344AKnAL`43243232664325643253432AKf54305436ALb0ALd06HnDnMjALfAJb><<<<<<AMhCElBnjJbIdAMj;AMl;AMn;AN`ANbANdANfANhLnMhANjANlMdM`ClCnANnAO`DjDdAObAnAOdAOfAOhAOjADjAOlAMhCElBnjJbIdAMjHnAMlDnAMnMjAN`ANbANdANfANhLnMhANjANlMdM`ClCnANnAO`DjDdAObAnAOdAOfAOhAOjADjAOlDn`AMf0Hn2E`GfD`ElAKf6Jd54321`JbLnMhMdM`ClCnAMhAMj?AMlDnAMnMjAN`ANbANdANfANhLnMhANjANlMdM`ClCnANnAO`DjDdAObAnAOdAOfAOhAOjADjAOlAMhAMjHnAMlDnAMnMjAN`ANbANdANfANhLnMhANjANlMdM`ClCnANnAO`DjDdAObAnAOdAOfAOhAOjADjAOlAMhAMjHnAMlDnAMnMjAN`ANbANdANfANhLnMhANjANlMdM`ClCnANnAO`DjDdAObAnAOdAOfAOhAOjADjAOlAN`MjB@`0002Dn00`HnAMl27AMh0CElBnjJbIdAMj879AMn<=ANbANdANfANhLnMhANjANlMdM`ClCnANnAO`DjDdAObAnAOdAOfAOhAOjADjAOlAMh0CElBnjJbIdAMjHnAMlDnAMnMjAN`ANbANdANfANhLnMhANjANlMdM`ClCnANnAO`DjDdAObAnAOdAOfAOhAOjADjAOlJdjJbLnMhMdM`ClCnAMhCElBn:9IdAMjHnAMlDnAMnMjAN`ANbANdANfANhLnMhANjANlMdM`ClCnANnAO`DjDdAObAnAOdAOfAOhAOjADjAOlAMfJdHnMj0`1AMlDn0AMn3AN`ANbANd;:7E`GfD`0El0321100;;;999888777:::666555444???>>>3AMh3121AEhAMd6431AMj??=<<;>:9988ADjAOl95CElBnjJbId7Hn00000AMlDn000AMnMj00AN`ANbANd0ANfANhLnMhANjANlMdM`ClCnANnAO`DjDdAObAnAOdAOfAOhAOjADj00AOlDnE`00GfD`0El0AEh32104432211AKf01432154433225432143214AJb00654312065431260AN`ANbJdAMf0:98756100:98756:C`jJbIdANfANhLnMhANjANlMdM`ClCnANnAO`DjDdAObAnAOdAOfAOhAOjE`AEh0ANb0HnBAfAJb5D`AKf7Gf2El2813300133006AMlDnMj:ANdADjAOl<<4AMhCElBnjJbIdAMjHn=<AMn<AN`ANb=ANfANhLnMhANjANlMdM`ClCnANnAO`DjDdAObAnAOdAOfAOhAOjADjAOlE`Dn3AMhCElBnjJbIdAMjHnAMl9AMnMjAN`ANbANdANfANhLnMhANjANlMdM`ClCnANnAO`DjDdAObAnAOdAOfAOhAOjADjAOlAMhBAh0E`GfD`ElAKfAEhBAjJd8HnDn0010000101000010=1010100001000010=AJb:019887798877``1AMl::98:AKnAL`10`<<;:<6jJbLnMhMdM`ClCnD`ElMj0CEhCEjBBn55554444AEh04AN`ANb02E`Gf:9AKf555AMhAMn3343==<<43==<<404=4=Hn7ANd3Jd4AKnAL`108jJbLnMhMdM`ClCnE`GfD`ElAKfAEh`JdAMh65465465477Mj87654387654376547654AKnAL`Hn0`5jJbLnMhMdM`ClCnGf0ElD`011Dn?ANd102ADjE`10AMhAMjHnAMl7AMnMjAN`ANb:ANfANhLnMhANjANlMdM`ClCnANnAO`DjDdAObAnAOdAOfAOhAOjADjAOlDn2JdAMhHn3ANbANdEl3E`0ALb0ALd0B@`00078CElBnjJbIdAMj=AMlDnAMnMjAN`0ANbANdANfANhLnMhANjANlMdM`ClCnANnAO`DjDdAObAnAOdAOfAOhAOjADjAOlAMhCElBnjJbIdAMjHnAMlDnAMnMjAN`ANbANdANfANhLnMhANjANlMdM`ClCnANnAO`DjDdAObAnAOdAOfAOhAOjADjAOlHnDn10ANbANdE`AMhCElBnjJbIdAMj;AMl;AMnMjAN`=<ANfANhLnMhANjANlMdM`ClCnANnAO`DjDdAObAnAOdAOfAOhAOjADjAOl1GfD`ElAEhAJb0Dn1AKnAL`7BB`BBbB@dBBdBBfBBhBBjBBlBAh:9?>AKf>Gf:98765432<;D`El3AEhAMhCElBnjJbIdAMjHnAMlDnAMnMjAN`ANbANdANfANhLnMhANjANlMdM`ClCnANnAO`DjDdAObAnAOdAOfAOhAOjADjAOlCEhCEjBBnEfAJbHnE``````BCd`BCf10`AMb00BC`10010BChBCb32103`3333021032103221033333333AMd3132144444444444444321432144244444444444``41444312444444443`244`444443214321432144443214`6565`565656656565656565656565656666565666665656565656`BCn0000`00`0000000`0`BD`0000000000000000`8787`````BDdAKj000Ah`112101```11111112BDb3030`3003030`300300`3030`0``````0303003030CEnCF`10```````````BDh0000000000`0`````00`````00000BEb`0BE`11``0``01BCl0000000000000000000BFfBFh3421034222342342342`224210342103422221034222222222242224442`2222223422103422222222222222222`222422222222222222103422103421022222222222222222222221022222222222222222`222222222222222222102222222222222222222342222221034222221034221034222222210342222222``Eh`0BGh11111111111111111101110111111111110101010101110101011101011111101101111111111111101011101111111111011111110101BDn1222122222222112222222222121212222222222222122122212222222212222222122221221222222212222221222222212222222122122222`BGn000000000000000000000000000`BHd0``0``````BHlAl`2`22222222210`222BH`1BEj40`1023BIfBHhBHf453762104537453745374537345621004537621045373162104453745444555`643445377`621044445537445335BI`04673215648732156486355255765564447644444543345644656446644564887321564873215648873215648666473215648CFbCFd0``````````BJbBJd0`BJf0BJhBJj``101010101010`10101010BEh211210210210210210`02102102100000022110`2102102121021```210210210210210``````````BJlBJn10110101010100001010`101010BKd0002122222`````````BGb````````````AKj00`0Bh0BOfAh4```BCd`N`5```````5```3BCf`1``````211``1`6`4BLl````471``````BIl``61`````88`88``8``8`8``0``7OfBLfLfNb=B@l85BLhBLj84444>>>>4>44?>>6544=3BGb3;8219AKjBh987BOf736>;54<`87BLd02;:9847?<65=2;:9847?<65=2;:9847?<65=29B@`0003:44``7::3::::958N``544=<;;3:690>87?54=<;3:690>87?;`;;;54=<;;3:690>87?994=;;;:690>87?444===;;;666999000???<AMd<6655>=<<<;7:1?98BLl<7777766666??>==================5<8;2BIl;:1BNlBO`BOb::::::::LfCFf0000111<<;<BOh222Fl3>3BGbB@l<:Of66`AKjBh2BLf9BOfNb76N`BIlBLhBLjBLl:7198:7Lf76=<543210000098;<0;0BEf1`1``1C@b0C@d?911?3C@fC@h5B@l66666666666`Of?Bh888````:6688588888`8`AJn09CAdBLf`;994340;NbBGb7N`BIlBLhBLjBLlAKj;LfB@`0002=>:11BOf:9B@l987654?Of=42<;1:9876C@f555555556Bh66702?64>=3<;:986`CAd813BLf86NbBGb7N`BIlBLhBLjBLl?66<AKjLf;;;0CEnCF`10```BNlBO`BOb`CAn000000000000000000000`CBb00000000000000000000000000000`BCdBCf10``AJn0``````CFhCFj``L`000000000000000000000000000000`0000000`CCd0`````BDlCC`1010121010101Jn0``00```BGj11````01AfBOn0111111`10000`10001001001110000001CCh342034211122221122121122421424222203422034222222034211114222222222444222222112142220342222222222222222222222222222222222222222212221111111122222214222222`203420342220BFj32233332200333323223333333322223222232233332232223333333333333333333333333333333333333323133333332`33222333233252233332223312332223222233333333223322223335333333333331453333333333145333333333333314533333223222221453333``Ch000000000000000000000```CCl0CCnAj0`2100210021002100``BLdFf0100CD`0`000000000000000000000000CDb0``````````0CDdCDh```````211````22222222CE`AK`43210432CDf543543543``CDj06``6653322654322654632654``636533366655565`6666653265546666226CDn337333````4764376577743765375BFn6888383`3466668``8863```3`8888768254876`5487654876854876``````","f":"`````````````{{}b}``0```````````````{{}d}``````````````{{fh}b}{{{f{{l{j}}}}}d}{{{f{{l{c}}}}}nA`}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{c}}}}{f{Al}}}AfA`}{{{f{{l{An}}}}}d}{{{f{{l{An}}}}}{{B`{d}}}}{{{f{{l{j}}}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{{l{j}}}}Bh}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}32{{{f{Bj{l{c}}}}{f{{l{c}}}}}{{Ah{b}}}{{C`{}{{Bl{Bn}}}}}}{{{f{{l{c}}}}e}{{l{c}}}A`{{Cd{B`}{{Cb{B`}}}}Cf}}{{{f{{l{j}}}}c}{{l{j}}}{{Cj{Ch}{{Cb{Af}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Cj{{B`{Ch}}}{{Cb{{B`{c}}}}}}Cf}C`}{{{f{{l{Cl}}}}c}Af{{Cd{{f{Af}}}{{Cb{Af}}}}}}{{{f{{l{Cn}}}}c}Af{{Cd{{f{Af}}}{{Cb{Af}}}}}}{{{l{c}}e}{{l{c}}}A`{{Cd{}{{Cb{}}}}Cf}}{{{f{{l{c}}}}e}D`C`{{Cj{{f{BjDb}}}}}}{{{f{{l{c}}}}{f{Cd}}}{{l{c}}}A`}{{{f{{l{c}}}}{f{Cd}}}{{l{e}}}A`C`}{{{f{Bj{l{c}}}}e}bA`{{Cd{}{{Cb{}}}}Cf}}{{{f{{l{Dd}}}}c}{{l{Dd}}}{{Cj{{f{{Dh{Df}}}}}{{Cb{{f{{Dh{Df}}}}}}}}}}{{{f{{l{Dj}}}}c}{{l{Dj}}}{{Cj{{f{Dl}}}{{Cb{{f{Dl}}}}}}}}{{{f{{l{c}}}}Dng}{{l{i}}}C`{}{{Cj{}{{Cb{e}}}}}C`}{{{f{{l{j}}}}{f{Cd}}}{{Ah{E`}}}}{{{f{{l{c}}}}g{f{Bj{Dh{e}}}}}bA`{}{{Cd{B`{f{e}}}{{Cb{e}}}}}}{{{f{{l{c}}}}e}{{l{c}}}A`{{Cd{}{{Cb{}}}}Cf}}{{{f{{l{Dj}}}}c}{{l{Dj}}}{{Cj{Eb{f{Dl}}}{{Cb{Eb}}}}Cf}}{{{f{{l{c}}}}Ed}EfA`}{{{f{{l{c}}}}{f{{Dh{Eh}}}}{f{Ej}}}{{Ah{Ef}}}A`}{{{f{{l{c}}}}}{{Ah{Ef}}}A`}`{{{f{{l{Dj}}}}}El}{{{f{{l{c}}}}}{{f{{l{c}}}}}C`}{{{f{{l{c}}}}}{{f{Dn}}}C`}{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}C`C`{{Cj{{B`{Ch}}B`B`}{{Cb{{B`{Af}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}eEn{}}00{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{{f{{l{c}}}}}{{Fb{F`}}}C`}``{{{f{{l{c}}}}e}{{l{g}}}A`{{Cd{}{{Cb{}}}}Cf}A`}{{{f{{l{c}}}}{f{Dn}}}{{Ah{Af}}}A`}{{{f{{l{c}}}}{f{Dn}}Fd}{{Ah{Af}}}A`}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Ff}{{{f{{l{c}}}}e}{{Ah{Af}}}FfAd}{{{f{{l{c}}}}}FhC`}{{{f{{l{c}}}}}{{`{{Bf{}{{Bb{Fj}}}}}}}C`}{{{f{{l{c}}}}}{{f{{Fn{Fl}}}}}C`}{{{f{Bj{l{c}}}}}{{f{Bj{Fn{Fl}}}}}C`}{{{f{{l{c}}}}}{{l{c}}}C`}0{{f{f{Bjc}}}b{}}{fb}`{{{f{Bj{l{c}}}}}b{C`A`}}`{fG`}{{{f{{l{c}}}}}{{Ah{{f{Dh}}}}}A`}{{{f{Bj{l{c}}}}{f{{l{c}}}}Gb}bC`}{{{f{Bj{l{c}}}}{f{{l{e}}}}Gb}bC`C`}{{{f{{l{c}}}}}{{`{{Gd{}{{Bb{{f{Dh}}}}}}}}}A`}{{}{{l{c}}}C`}{Fj{{f{c}}}{}}0{Fj{{f{Bjc}}}{}}0{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{Fjb}{{{f{Bj{l{c}}}}}bC`}1{{{f{{l{c}}}}}{{l{c}}}C`}{{{f{{l{c}}}}}{{f{Dn}}}C`}{{{f{{l{c}}}}{f{{l{c}}}}}GfA`}{{{f{{l{c}}}}e}GfA`Ad}01{{{f{Bj{l{c}}}}{f{{l{c}}}}}{{Ah{b}}}A`}{{{f{{l{c}}}}}{{Ah{{l{c}}}}}A`}{{{f{{l{c}}}}{f{Gf}}}{{Ah{{l{c}}}}}{{C`{}{{Gh{Bn}}{Gj{Bn}}}}}}{{{f{{l{c}}}}}B`C`}{{{f{{l{c}}}}}{{B`{Fj}}}C`}`{{{f{{l{c}}}}{f{BjGl}}}GnA`}{{{f{{l{An}}}}{f{BjGl}}}Gn}{{{f{{l{c}}}}e}bC`{{Cj{B`}}}}{{{f{{l{j}}}}c}b{{Cj{{B`{Ch}}}}}}{cc{}}{c{{l{e}}}H`{{C`{}{{Hb{c}}}}}}1{{Bhc}{{l{e}}}Hd{{C`{}{{Hb{}}}}C`}}{{{f{{l{c}}}}e}{{l{c}}}{{C`{}{{Hb{}}}}C`}Hd}{{Bh{Fn{Fl}}}{{l{c}}}C`}{{Bh{Fn{Fl}}Dn}{{l{c}}}C`}{c{{l{e}}}{{Hd{}{{Bb{{Hh{Fn{B`{Hf}}}}}}}}}A`}{c{{l{e}}}{{Hd{}{{Bb{B`}}}}}A`}{c{{l{An}}}{{Hd{}{{Bb{{B`{d}}}}}}}}{{Bhc}{{l{e}}}{{Bf{}{{Bb{B`}}}}}A`}12{{Bhc}{{l{e}}}{{Bf{}{{Bb{}}}}}A`}`{c{{l{e}}}{{Hj{}{{Bb{B`}}}}}A`}{{Bh{f{Dh}}}{{l{c}}}A`}{{Bh{f{{Dh{B`}}}}}{{l{c}}}A`}{c{{l{e}}}{{Hl{}{{Bb{B`}}}}}A`}{{BhFn}{{l{c}}}A`}{{BhFn{B`{Hf}}}{{l{c}}}A`}{{BhFj}{{l{c}}}A`}0{{{f{{l{c}}}}Fj}{{l{c}}}C`}{{BhFj{f{Dn}}}E`}{{{f{{l{c}}}}Fj}B`C`}{{{f{{l{c}}}}Fj}{{Ah{Hn}}}A`}{{{f{{l{c}}}}Fj}HnA`}{{{f{{l{j}}}}Fj}{{B`{Af}}}}{{{f{{l{c}}}}}{{B`{I`}}}C`}{{{f{{l{c}}}}}dC`}{{{f{{l{c}}}}}IbC`}{{{f{{l{j}}}}}Af}{{{f{{l{c}}}}}B`C`}0{{{f{{l{{Id{c}}}}}}Fj}{{B`{{f{If}}}}}Ih}09{{{f{{l{c}}}}dd}{{Ah{Al}}}A`}{{{f{{l{c}}}}FjdFj}AlEn}{{{f{{l{c}}}}e}GfA`Ad}{{{f{{l{c}}}}{f{{l{c}}}}}GfA`}108{{{f{{l{c}}}}{B`{Fj}}}{{l{c}}}C`}{{}Fj}0{{FjIj{B`{Il}}}{{l{c}}}A`}{{{f{{l{j}}}}}{{f{Dn}}}}{{{f{{l{c}}}}}{{J`{{In{c}}}}}C`}{{}c{}}0{{}Eh}{{{l{Jb}}{B`{Fj}}Fj}{{Ah{Jd}}}}{{{l{Jb}}{B`{Fj}}Fj}Jd}{{{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}}{{`{JfJh{Jj{}{{Bb{}}}}GdHl}}}A`}{{{l{c}}}AfC`}{{{f{{l{c}}}}}dC`}{{{f{{l{c}}}}}GfJl}000{{{f{{l{c}}}}}GfC`}02{{{f{{l{c}}}}}JnC`}{{{f{{l{c}}}}}{{`{{K`{}{{Bb{B`}}}}}}}C`}{{{f{{l{c}}}}}{{`{{Bf{}{{Bb{{l{c}}}}}}}}}C`}{{{f{{l{j}}}}}{{`{{Bf{}{{Bb{Kb}}}}}}}}{{{f{{l{c}}}}}{{Kh{{Kd{Fl}}{Kf{{f{Fl}}}{{Cb{{B`{{f{Hf}}}}}}}}}}}C`}`{{fc}G`{{Kj{Dl}}}}{{{f{{l{c}}}}}B`C`}{{{f{{l{c}}}}}{{B`{Fj}}}C`}{{{f{{l{c}}}}}{{Kl{c}}}C`}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}e}gA`{}{}}{{{l{c}}e}gA`{}{}}{{c{f{{l{e}}}}}g{}A`{}}{{c{l{e}}}g{}A`{}}{{{f{{l{c}}}}}FjC`}0{{{f{{l{c}}}}e}{{l{c}}}A`{AbKn}}00{{{f{{l{c}}}}Fj}{{l{c}}}C`}{{{f{{l{c}}}}{f{{l{c}}}}}GfA`}{{{f{{l{c}}}}e}GfA`Ad}10{{{f{{l{An}}}}}{{B`{d}}}}{{{f{{l{c}}}}}B`A`}{{{f{{l{c}}}}}L`A`}{{{f{{l{An}}}}}{{B`{n}}}}{{{f{{l{c}}}}}{{B`{n}}}A`}{{{f{{l{c}}}}}{{B`{n}}}En}{{{f{{l{c}}}}}L`En}{{{f{Bj{l{c}}}}{In{c}}}bC`}`{{{f{{l{c}}}}}{{Lb{c}}}C`}{{{f{{l{c}}}}}{{f{{Lf{{Ld{c}}}}}}}C`}{{{f{{l{c}}}}}{{B`{{Lh{F`}}}}}C`}{{{f{Bj{l{c}}}}}{{f{Bj{Lf{{Ld{c}}}}}}}C`}{{{f{{l{c}}}}}{{Lf{{Ld{c}}}}}C`};<{{{f{{l{c}}}}}{{B`{Hh}}}A`};{{Bh{f{{Dh{Df}}}}FjFj}{{l{An}}}}{{Bh{f{Dh}}}{{l{c}}}A`}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{c}}}}}FjC`}{{{f{{l{c}}}}}{{Ah{Fj}}}A`}{{{f{{l{c}}}}}{{f{Bh}}}C`}{{Bh{Ll{Lj}}}{{l{Ln}}}}{{Bhc}{{l{M`}}}{{Kj{{Dh{Kb}}}}}}{{Bhc}{{l{M`}}}{{Kj{{Dh{{B`{Kb}}}}}}}}{{Bhc}{{l{Jb}}}{{Kj{{Dh{{B`{Mb}}}}}}}}{{Bhc}{{l{Md}}}{{Kj{{Dh{{B`{Mf}}}}}}}}{{Bhc}{{l{Cn}}}{{Kj{{Dh{n}}}}}}{{Bh{Ll{Kb}}}{{l{M`}}}}{{Bhc}{{l{Md}}}{{Kj{{Dh{Mf}}}}}}{{Bhc}{{l{Dj}}}{{Kj{{Dh{{B`{Db}}}}}}}}{{Bhc}{{l{Mh}}}{{Kj{{Dh{Il}}}}}}{{Bhc}{{l{Ln}}}{{Kj{{Dh{Lj}}}}}}{{Bhc}{{l{Cl}}}{{Kj{{Dh{{B`{Ij}}}}}}}}{{Bhc}{{l{An}}}{{Kj{{Dh{d}}}}}}{{Bhc}{{l{Mh}}}{{Kj{{Dh{{B`{Il}}}}}}}}{{Bhc}{{l{Dj}}}{{Kj{{Dh{Db}}}}}}{{Bhc}{{l{Dd}}}{{Kj{{Dh{{B`{{Fn{Df}}}}}}}}}}{{Bhc}{{l{An}}}{{Kj{{Dh{{B`{d}}}}}}}}{{Bhc}{{l{Ln}}}{{Kj{{Dh{{B`{Lj}}}}}}}}{{Bhc}{{l{Jb}}}{{Kj{{Dh{Mb}}}}}}{{Bh{Ll{Il}}}{{l{Mh}}}}{{Bh{Ll{Mf}}}{{l{Md}}}}{{Bhc}{{l{Cl}}}{{Kj{{Dh{Ij}}}}}}{{Bhc}{{l{Cn}}}{{Kj{{Dh{{B`{n}}}}}}}}{{Bhc}{{l{Dd}}}{{Kj{{Dh{{Fn{Df}}}}}}}}{Bh{{l{{Id{c}}}}}Ih}{{{f{{l{c}}}}FjFj}{{l{c}}}A`}{{Bh{Fn{c}}}{{l{{Id{c}}}}}Ih}{{Bh{Fn{c}}Hf}{{l{{Id{c}}}}}Ih}{{BhFn}{{l{c}}}A`}{{{Lf{Mj}}{Fn{Fl}}I`I`}{{l{c}}}C`}{{{f{{l{c}}}}}{{l{c}}}Jl}{{{f{{l{c}}}}e}GfA`Ad}{{{f{{l{c}}}}{f{{l{c}}}}}GfA`}10{{{f{{l{c}}}}}FjC`}``{{{f{{l{j}}}}}{{`{{Ml{}{{Bb{{B`{Af}}}}}}}}}}{{{f{{l{Dj}}}}}{{`{{Ml{}{{Bb{{B`{{f{Dl}}}}}}}}}}}}{{{f{Bj{l{j}}}}}{{`{{Mn{}{{Bb{{B`{Af}}}}}}}}}}{{{f{{l{Dj}}}}}{{`{{Mn{}{{Bb{{B`{{f{Dl}}}}}}}}}}}}{{{f{{l{c}}}}}L`A`}{{{f{Bj{l{c}}}}}bC`}{{{f{{l{c}}}}nN`}{{Ah{{B`{n}}}}}En}{{{f{{l{c}}}}nN`}{{Ah{L`}}}En}{{BhFjn}{{Ah{{l{An}}}}}}{{BhFjnn}{{Ah{{l{c}}}}}A`}{{BhFj}{{l{c}}}A`}{{BhFjnn}{{l{c}}}A`}{{{f{{l{c}}}}}{{l{c}}}C`}{{{f{{l{c}}}}}{{f{Mj}}}C`}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{Bj{l{c}}}}Bh}bC`}{{{f{{l{c}}}}}{{l{c}}}A`}{{{f{{l{c}}}}{f{Cd}}Nb}{{Ah{Af}}}A`}{{{f{{l{c}}}}Fje}{{Ah{{l{c}}}}}Jl{{Cj{{f{Bj{l{c}}}}}{{Cb{B`}}}}}}{{{f{{l{c}}}}ndd{B`{Il}}}{{Ah{{l{c}}}}}C`}{{{f{{l{c}}}}Fjdd{B`{Il}}}{{Ah{{l{c}}}}}C`}{{{f{{l{c}}}}eB`}{{Ah{{l{c}}}}}A`{{Hd{}{{Bb{I`}}}}}}{{{f{{l{c}}}}eg}{{Ah{{l{c}}}}}A`{{Hd{}{{Bb{I`}}}}}{{Cd{B`}{{Cb{B`}}}}}}{{{f{{l{c}}}}{f{Gf}}B`}{{Ah{{l{c}}}}}A`}{{{f{Bj{l{j}}}}}b}{{{f{Bj{l{c}}}}d}bC`}{{{f{Bj{l{j}}}}Dn}b}{{{f{Bj{l{c}}}}I`}bC`}{{{f{Bj{l{c}}}}Jn}bC`}{{{f{{l{c}}}}Kb}{{l{c}}}A`}{{{f{{l{c}}}}KbB`}{{l{c}}}A`}{{{f{Bj{l{c}}}}}bC`}{{{f{{l{c}}}}KbFj}{{l{c}}}C`}0{{{f{{l{c}}}}d}{{l{c}}}A`}{{{f{{l{c}}}}Ed}{{l{c}}}A`}{{{f{{l{c}}}}Kb}{{Hh{{l{c}}{l{c}}}}}C`}0{{{f{{l{c}}}}Df}{{B`{n}}}A`}{{{f{{l{c}}}}Df}L`En}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{c}}}}}B`A`}{{{f{{l{An}}}}}{{B`{I`}}}}{{{f{{l{c}}}}}L`A`}{{{f{{l{c}}}}{B`{Fj}}}{{l{c}}}C`}{{{f{{l{c}}}}{f{e}}}{{Ah{{l{c}}}}}C`{{Kj{{Dh{I`}}}}Nd}}{{{f{{l{c}}}}{f{Ef}}}{{Ah{{l{c}}}}}C`}{{{f{{l{c}}}}{f{Ef}}}{{l{c}}}{{C`{}{{Gh{Bn}}{Nf{Bn}}}}C`}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{C`{}{{Gh{Bn}}{Nf{Bn}}}}C`}{{Kj{{Dh{I`}}}}Nd}}`{{{f{{l{c}}}}dNh}{{Fn{{Fn{Nj}}}}}C`}{{{f{{l{c}}}}}{{l{c}}}Jl}{{{f{{l{Dj}}}}Fj}{{Ah{Af}}}}{{{f{Bj{l{j}}}}Dn}b}{{{f{{l{c}}}}}{{Ah{Nl}}}A`}{{{f{{l{j}}}}}{{Ah{Nn}}}}{fc{}}{{{f{{l{Dd}}}}}D`}{{{f{{l{c}}}}}{{Fn{B`}}}A`}{{{f{{l{c}}}}}{{O`{Fn{Fn{B`}}}}}A`}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{}{}}{{{f{{l{c}}}}e}gA`{}{}}{{c{l{e}}}g{}A`{}}{{c{f{{l{e}}}}}g{}A`{}}{{{f{{l{j}}}}c}{{Ah{{l{j}}}}}{{Cj{Ch}{{Cb{{Ah{Af}}}}}}}}{{{f{{l{j}}}}e}{{Ah{{l{g}}}}}{}{{Cj{{B`{Ch}}}{{Cb{{Ah{{B`{c}}}}}}}}Cf}C`}{{{f{{l{c}}}}g}{{Ob{D`e}}}C`{}{{Cj{{f{BjDb}}}{{Cb{{Ob{be}}}}}}}}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}C`{}{}{{Cj{}{{Cb{{Ob{eg}}}}}}}C`}{c{{Ob{e}}}{}{}}0{{Bhg}{{Ob{{l{i}}e}}}H`{}{{Hd{}{{Bb{{Ob{ce}}}}}}}{{C`{}{{Hb{c}}}}C`}}{{}{{Ob{c}}}{}}0{{{f{{l{j}}}}{f{{l{c}}}}e}{{Ah{{l{j}}}}}C`{{Cj{{B`{Ch}}B`}{{Cb{{Ah{{B`{Af}}}}}}}}}}{fOd}0{{{f{{l{c}}}}}{{Ah{{l{c}}}}}A`}{{{f{{l{c}}}}{f{Af}}}{{Ah{{f{{l{c}}}}}}}C`}{{{f{Bj{l{c}}}}}bC`}{{{f{{l{c}}}}Fj}{}C`}{{{f{{l{c}}}}Df}{{B`{n}}}A`}{{{f{{l{c}}}}Df}L`En}{{}c{}}0{{Bhc}{{l{e}}}H`{{C`{}{{Hb{c}}}}C`}}{{{f{{l{e}}}}c}{{l{e}}}H`{{C`{}{{Hb{c}}}}C`}}{{{f{{l{c}}}}{Fn{Fl}}}{{l{c}}}C`}{{{l{c}}Bh}{{l{c}}}C`}{{{f{{Dh{Of}}}}e}c{}{{Oh{{f{Ef}}}{{Cb{c}}}}}}{{{f{{l{c}}}}Jn}{{l{c}}}C`}{{{l{c}}}eA`{}}{{{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{l{c}}e}gA`{}{}}{{{f{{l{c}}}}e}gA`{}{}}2310{{c{f{{l{e}}}}}g{}A`{}}{{c{l{e}}}g{}A`{}}452301542376453210453201{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}C`{{Cj{{B`{Ch}}B`}{{Cb{{B`{Af}}}}}}}}{{{f{{l{c}}}}{f{Gf}}{f{{l{c}}}}}{{Ah{{l{c}}}}}{{C`{}{{Nf{Bn}}}}}}````{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}c}e{}{}{}}{{c{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}g{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}c}g{}{}{}}{{c{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}g{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}65654654650654654````````{{fh}b}000{{{f{BjA@b}}}b}{{{f{Bj{A@d{c}}}}}b{A@fNd}}{{{f{BjA@h}}}b}{{{f{BjA@j}}}b}{{{f{Bj{A@l{c}}}}}bA`}{{{f{Bj{A@d{c}}}}{B`{e}}}b{A@fNd}{{Kj{c}}}}{{{f{BjA@b}}{B`{c}}}b{}}{{{f{BjA@b}}c}b{}}{{{f{Bj{A@d{c}}}}e}b{A@fNd}{{Kj{c}}}}{{{f{BjA@h}}d}b}5{f{{f{c}}}{}}000{{{f{Bj}}}{{f{Bjc}}}{}}000{{{f{{A@d{c}}}}}{{A@d{c}}}{A@fNd}}{{{f{A@h}}}A@h}{{{f{A@j}}}A@j}{{{f{{A@l{c}}}}}{{A@l{c}}}{A`A@n}}{{f{f{Bjc}}}b{}}000{fb}000{Fj{{f{c}}}{}}000{Fj{{f{Bjc}}}{}}000{Fjb}000{A@b{{l{c}}}C`}{{{A@d{Dl}}}D`}{{{A@d{{Dh{Df}}}}}El}{AA`D`}{AAbEl}{A@hGf}`{{{A@l{c}}}{{l{c}}}A`}{cc{}}000{{Bhe}AAd{}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bhe}AAd{}{{Bf{}{{Bb{c}}}}}}{{Bh{f{{Dh{c}}}}}AAd{}}{{Bh{f{{Dh{{B`{c}}}}}}}AAd{}}{{}Fj}000{{}c{}}000`{{BhFj}{{A@d{c}}}{A@fNd}}{{BhFj}A@h}{{BhFj}A@j}{{BhFj}{{A@l{c}}}A`}{{{f{BjA@b}}}b}{{{f{BjA@h}}}b}{{{f{BjA@j}}}b}{{{f{Bj{A@l{c}}}}}bA`}{fc{}}000{c{{Ob{e}}}{}{}}000{{}{{Ob{c}}}{}}000{fOd}000<<<<````````{{{f{BjAAf}}{f{H`}}}b}{{{f{BjAAf}}}b}{{{f{BjAAh}}}b}{{{f{BjAAj}}c}b{{Bf{}{{Bb{{B`{d}}}}}}Hl}}{{{f{Bj{AAl{c}}}}e}bA`{{Bf{}{{Bb{B`}}}}Hl}}{{{f{Bj{AAl{c}}}}e}bA`{{Bf{}{{Bb{}}}}Hl}}{{{f{BjAAn}}}b}54{{{f{BjAB`}}}b}{{{f{BjABb}}}b}{{{f{BjAAj}}}b}{{{f{BjABd}}}b}{{{f{Bj{AAl{c}}}}}bA`}{{{f{BjAAf}}{B`{{f{H`}}}}}b}{{{f{BjAAf}}{B`{{f{Af}}}}}{{Ah{b}}}}{{{f{BjAAn}}{B`{{f{Af}}}}}{{Ah{b}}}}{{{f{Bj{AAl{c}}}}{B`{{f{Dh}}}}}bA`}{{{f{BjAAn}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAf}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAh}}{f{Af}}}{{Ah{b}}}}{{{f{BjAB`}}{f{Af}}}{{Ah{b}}}}{{{f{BjABb}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAj}}{f{Af}}}{{Ah{b}}}}{{{f{BjABd}}{f{Af}}}{{Ah{b}}}}{{{f{Bj{AAl{c}}}}{f{Af}}}{{Ah{b}}}A`}{{{f{Bj{AAl{c}}}}{f{Dh}}}bA`}{{{f{BjAB`}}c}b{{Bf{}{{Bb{{B`{{f{Dl}}}}}}}}Hl}}{{{f{BjABb}}c}b{{Bf{}{{Bb{{B`{{f{{Dh{Df}}}}}}}}}}Hl}}{{{f{BjAB`}}c}b{{Bf{}{{Bb{{f{Dl}}}}}}}}{{{f{BjABb}}c}b{{Bf{}{{Bb{{f{{Dh{Df}}}}}}}}}}{f{{f{c}}}{}}000000{{{f{Bj}}}{{f{Bjc}}}{}}000000`{{}AAf}{{}AAh}{Fj{{f{c}}}{}}000000{Fj{{f{Bjc}}}{}}000000{Fjb}000000{{{f{AB`}}}d}{{{f{ABb}}}d}{{{f{AAj}}}d}{{{f{{AAl{c}}}}}dA`}{{{f{AAn}}}d}{{{f{AB`}}}{{f{Mj}}}}{{{f{ABb}}}{{f{Mj}}}}{{{f{AAj}}}{{f{Mj}}}}{{{f{{AAl{c}}}}}{{f{Mj}}}A`}{{{f{AAn}}}{{f{Mj}}}}{{{f{BjAAf}}}E`}{{{f{BjAAh}}}E`}{{{f{BjABd}}}E`}{{{f{BjAAn}}}E`}{cc{}}000000{{{f{Dn}}FjFjBh}{{Ah{{Fb{AAn}}}}}}{{}Fj}000000{{{f{BjAB`}}}Fl}{{{f{BjABb}}}Fl}{{{f{BjAAj}}}Fl}{{{f{Bj{AAl{c}}}}}FlA`}{{{f{BjAAn}}}Fl}{{}c{}}000000{{BhFj{B`{Dn}}}AAf}{{BhFj{B`{Dn}}}AAh}{{BhFjFj}AB`}{{BhFjFj}ABb}{{BhFjFj}AAj}{{BhFj}ABd}{{BhFjFjDn}{{AAl{c}}}A`}{{BhFjFjDnDn}{{AAl{c}}}A`}{c{{Ob{e}}}{}{}}000000{{}{{Ob{c}}}{}}000000{fOd}000000;;;;;;;````{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{Fd}}}Fd}{{f{f{Bjc}}}b{}}{fb}{{}Fd}{Fj{{f{c}}}{}}{Fj{{f{Bjc}}}{}}{Fjb}{{{f{Fd}}{f{Fd}}}d}{{f{f{c}}}d{}}00{{{f{Fd}}{f{BjGl}}}Gn}{cc{}}{{{f{Fd}}{f{Bjc}}}bABf}{{}Fj}{{}c{}}{{{f{Fd}}}d}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}5``{{ABhBh}{{l{c}}}C`}{{ABj{f{{l{c}}}}}{{l{c}}}C`}10{{ABjBhDn}{{l{c}}}C`}0{{ABhBh}{{Ob{{l{c}}e}}}C`{}}{{ABj{f{{l{c}}}}}{{Ob{{l{c}}e}}}C`{}}10{{ABjBhDn}{{Ob{{l{c}}e}}}C`{}}0`{ABlABl}``{{ABnBhDn}e{}{{AC`{c}}}}{{eBhDn}AC`{}{{Hj{}{{Bb{c}}}}}}```{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{Fj{{f{c}}}{}}0{Fj{{f{Bjc}}}{}}0{Fjb}0{cc{}}0{{}Fj}0{{}c{}}000{{{f{ACb}}}ACd}{{{f{BjACd}}}{{B`{c}}}{}}{{{f{Bj{ACf{c}}}}}{{B`{e}}}Bf{}}1{{{f{Bj{ACf{c}}}}}{{B`{e}}}Gd{}}`{{{f{ACd}}}{{Hh{Fj{B`{Fj}}}}}}{{{f{{ACf{c}}}}}{{Hh{Fj{B`{Fj}}}}}Bf}{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{fOd}099`````````````````````````{{fh}b}0000{{}Gb}{{}Ib}{{GbGb}Gb}{{IbIb}Ib}{{{f{BjGb}}Gb}b}{{{f{BjIb}}Ib}b}3210{{{f{Gb}}}Lj}0{{{f{Ib}}}Df}05432{f{{f{c}}}{}}000000{{{f{Bj}}}{{f{Bjc}}}{}}000000{{{f{{Ld{c}}}}}{{Fb{F`}}}C`}{{{f{{Ld{c}}}}}{{Ld{c}}}C`}{{{f{{In{c}}}}}{{In{c}}}C`}{{{f{ACh}}}ACh}{{{f{Gb}}}Gb}{{{f{Ib}}}Ib}{{f{f{Bjc}}}b{}}0000{fb}0000{{{f{BjACj}}}b}0{GbGb}{IbIb}{{{f{Gb}}Gb}d}{{{f{Ib}}Ib}d}{{}{{Ld{c}}}C`}{{}{{In{c}}}C`}{{}Gb}{{}Ib}{Fj{{f{c}}}{}}{{{f{{Lb{c}}}}}{{f{e}}}C`{}}111111{Fj{{f{Bjc}}}{}}000000{{GbGb}Gb}{{IbIb}Ib}{{}d}{{{f{F`}}}{{B`{I`}}}}{{{In{c}}I`}{{In{c}}}C`}{{{f{{In{c}}}}}{{B`{I`}}}C`}{{{In{c}}{B`{I`}}}{{In{c}}}C`}{Fjb}000000<;5{{{f{Gb}}{f{Gb}}}d}{{{f{Ib}}{f{Ib}}}d}7{{{f{BjGb}}c}b{{Hd{}{{Bb{Gb}}}}}}{{{f{BjIb}}c}b{{Hd{}{{Bb{Ib}}}}}}{{{In{c}}d}{{In{c}}}C`}{{{In{c}}{B`{d}}}{{In{c}}}C`}{{{f{{In{c}}}}Gb}{{In{c}}}C`}{{{f{{In{c}}}}Gb}{{In{e}}}C`C`}{{{In{c}}Ib}{{In{c}}}C`}{{{In{c}}{B`{Ib}}}{{In{c}}}C`}{{{f{{In{c}}}}{f{BjGl}}}GnC`}{{{f{ACh}}{f{BjGl}}}Gn}{{{f{Gb}}{f{BjGl}}}Gn}0000{{{f{Ib}}{f{BjGl}}}Gn}0000{cc{}}000000{Lj{{B`{Gb}}}}{Df{{B`{Ib}}}}{LjGb}0{DfIb}010{cGb{{Hd{}{{Bb{Gb}}}}}}{cIb{{Hd{}{{Bb{Ib}}}}}}{{{f{Dl}}}{{B`{Gb}}}}{{{f{Dl}}}{{B`{Ib}}}}{{{f{{In{c}}}}}{{B`{I`}}}C`}{{{f{{In{c}}}}}dC`}{{{f{Ib}}}d}{{{f{F`}}}Ib}{{{f{{In{c}}}}}IbC`}0{{{f{{In{c}}}}}{{B`{f}}}C`}0{{{f{Bj{Ld{c}}}}}{{f{Bj{In{c}}}}}C`}{{{f{Ib}}}Jn}{{}Fj}000000{{{f{BjGb}}Gb}b}{{{f{BjIb}}Ib}b}{{GbGb}Gb}{{IbIb}Ib}{{{f{Gb}}Gb}d}{{{f{Ib}}Ib}d}{{}c{}}000000{Gbc{}}{Ibc{}}{{{f{Gb}}}d}{{{f{Ib}}}d}{{{f{{In{c}}}}}dC`}21{{{f{{In{c}}}}}JnC`}111{{{f{Gb}}}{{ACl{Gb}}}}{{{f{Ib}}}{{ACl{Ib}}}}{{{f{Gb}}}{{ACn{Gb}}}}{{{f{Ib}}}{{ACn{Ib}}}}{{}d}{{}{{f{{ADb{AD`}}}}}}{{{f{F`}}}{{B`{L`}}}}{{{In{c}}}{{In{c}}}C`}{{{f{{In{c}}}}}{{B`{L`}}}C`}{{{In{c}}B`}{{In{c}}}C`}{{{f{{In{c}}}}{In{c}}}{{ADd{c}}}C`}4231{{{In{c}}}{{Ld{c}}}C`}{GbGb}{IbIb}{{{f{{Ld{c}}}}}{{Lh{{In{c}}}}}C`}{{{f{BjGb}}Gb}b}{{{f{BjIb}}Ib}b}{{{f{BjGb}}Gbd}b}{{{f{BjIb}}Ibd}b}{{{f{Bj{In{c}}}}{B`{I`}}}bC`}{{{f{Bj{In{c}}}}d}bC`}{{{f{BjIb}}d}b}{{{f{Bj{In{c}}}}Ib}bC`}{{{f{Bj{In{c}}}}B`}bC`}033{{{f{Bj{In{c}}}}Jn}bC`}{{{f{BjIb}}Jn}b}{{{In{c}}Jn}{{In{c}}}C`}{{{In{c}}{B`{Jn}}}{{In{c}}}C`}{{GbGb}Gb}{{IbIb}Ib}>=10{{{Ld{c}}}{{In{c}}}C`}{fc{}}0000{{{f{BjGb}}Gb}b}{{{f{BjIb}}Ib}b}{c{{Ob{e}}}{}{}}000000{{}{{Ob{c}}}{}}000000{{{f{{Ld{c}}}}}{{B`{{Lh{{In{c}}}}}}}C`}{{{f{{Ld{c}}}}}{{B`{{J`{{In{c}}}}}}}C`}{fOd}000000:9{{{f{{Ld{c}}}}}{{f{{ADf{F`}}}}}C`}{{}c{}}000000{ACjACj}0{{{f{{Ld{c}}}}}{{J`{{In{c}}}}}C`}````{{fh}b}{{{f{{ADh{c}}}}Fj}{{Hh{{ADh{c}}{ADh{c}}}}}Ih}{e{{ADh{c}}}Ih{{Hd{}{{Bb{{B`{{f{c}}}}}}}}}}{e{{ADh{c}}}Ih{{Hd{}{{Bb{{f{c}}}}}}}}{{ADje}g{}{{Hd{}{{Bb{c}}}}}{}}0{{{f{If}}}{{f{ADl}}}}{{{f{{ADh{c}}}}}{{f{ADl}}}Ih}{{{f{Bj{ADh{c}}}}}{{f{BjADl}}}Ih}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}`{{{f{{ADh{c}}}}Fj}dIh}{{{f{{ADh{c}}}}}{{ADh{c}}}{IhA@n}}{{f{f{Bjc}}}b{}}{fb}{Fj{{f{c}}}{}}{Fj{{f{Bjc}}}{}}{Fjb}{{{f{{ADh{c}}}}}{{f{ADj}}}Ih}{{{f{{f{If}}}}{f{{f{If}}}}}d}{{{f{If}}{f{If}}}d}{{{f{{ADh{c}}}}{f{BjGl}}}Gn{IhADn}}{cc{}}{{{Fn{c}}}{{ADh{c}}}Ih}{{FjADj}{{ADh{c}}}Ih}{{{f{{ADh{c}}}}Fj}{{B`{{f{c}}}}}Ih}{{}ADj}{{{f{Hf}}{f{{ADh{c}}}}{f{{ADh{c}}}}}{{ADh{c}}}Ih}{{ADj{f{Hf}}cc}{{ADh{e}}}{}Ih}{{{f{Hf}}{f{{ADh{c}}}}e}{{ADh{c}}}Ih{}}{{{f{Hf}}c{f{{ADh{e}}}}}{{ADh{e}}}{}Ih}{{}Fj}{{}c{}}{{{f{{ADh{c}}}}}eIh{}}{{{f{{ADh{c}}}}Fj}dIh}{{fFj}d}1{{{f{{ADh{c}}}}}{{AEb{egAE`}}}Ih{}{}}{{{f{{ADh{c}}}}}{{AEb{{f{c}}{AEd{c}}AE`}}}Ih}{{{f{{ADh{c}}}}}FjIh}0`{db}{{{f{Bj{ADh{c}}}}{B`{Hf}}}bIh}{{{f{Bj{ADh{c}}}}FjFj}bIh}{{fFjFj}c{}}01{{{f{{ADh{c}}}}Fj}{{Hh{{Fb{H`}}{Fb{H`}}}}}Ih}0{{{f{If}}}{{Fb{If}}}}{{{f{{ADh{c}}}}}{{Fb{H`}}}Ih}{fc{}}{g{{Ob{{ADh{c}}e}}}Ih{}{{Hd{}{{Bb{{Ob{{B`{{f{c}}}}e}}}}}}}}{g{{Ob{{ADh{c}}e}}}Ih{}{{Hd{}{{Bb{{Ob{{f{c}}e}}}}}}}}{{ADjg}{{Ob{ie}}}{}{}{{Hd{}{{Bb{{Ob{ce}}}}}}}{}}0{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{If}}}{{f{Dl}}}}{{}{{f{Dl}}}}{{{f{{ADh{c}}}}}{{B`{{f{Hf}}}}}Ih}{{{f{{ADh{c}}}}Fj}{{f{c}}}Ih}{{{f{{ADh{c}}}}Fj}eIh{}}1{{{f{{ADh{c}}}}}eIh{}}{{{f{{ADh{c}}}}}{{AEd{c}}}Ih}{{}c{}}{{{f{{ADh{c}}}}{B`{Hf}}}{{Fb{H`}}}Ih}{{{ADh{c}}{B`{Hf}}}{{ADh{c}}}Ih}0`{{{f{Bj{AEf{c}}}}}bIh}0{{{f{Bj{AEf{c}}}}{B`{c}}}bIh}{{{f{Bj{AEf{c}}}}{f{ADl}}}bIh}{{{f{Bj{AEf{c}}}}c}bIh}{{{f{Bj{AEf{c}}}}{f{ADl}}}{{Ah{b}}}Ih}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{}{{AEf{c}}}Ih}{Fj{{f{c}}}{}}{Fj{{f{Bjc}}}{}}{Fjb}{{{AEf{c}}}{{AEh{c}}}Ih}{cc{}}{{}Fj}{{}c{}}{{BhFj}{{AEf{c}}}Ih}{{{f{Bj{AEf{c}}}}}AfIh}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}5````{{{f{BjAEj}}}b}{{{f{BjAEj}}{B`{{f{ADl}}}}}b}{{{f{BjAEj}}{f{ADl}}}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}`{Fj{{f{c}}}{}}{Fj{{f{Bjc}}}{}}{Fjb}{{{f{AEl}}{f{BjGl}}}Gn}{cc{}}{{BhFj}{{Fb{AEj}}}}{{}AEn}{{}ADj}{{}Fj}{{}c{}}{{}d}`{{AF`AEnADj}b}{{{f{BjAEj}}}Af}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}6````````````````````````````````````````````{{fh}b}{{{f{AFb}}}n}{{{f{{AFf{}{{AFd{c}}}}}}g}{{AFf{}{{AFd{c}}}}}{}{}{{Cd{{B`{e}}}{{Cb{{B`{c}}}}}}Cf}}{{{f{AFh}}{f{Cd}}}AFh}{{{f{AFh}}{f{Cd}}}{{l{c}}}C`}{{{f{{AFf{}{{AFd{c}}}}}}i{f{Bj{Dh{g}}}}}b{}{}{}{{Cd{{B`{e}}{f{g}}}{{Cb{g}}}}}}{{{f{{AFf{}{{AFd{c}}}}}}g}{{AFf{}{{AFd{c}}}}}{}{}{{Cd{e}{{Cb{c}}}}Cf}}{{{f{AFj}}Ed}Ef}{{{f{AFj}}{f{{Dh{Eh}}}}{f{Ej}}}{{Ah{Ef}}}}{{{f{AFl}}}{{Ah{Ef}}}}`{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{AFn}}{f{Dn}}}{{Ah{Af}}}}0{{{f{AFn}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{AG`}}}AG`}{{f{f{Bjc}}}b{}}{fb}{Fj{{f{c}}}{}}{Fj{{f{Bjc}}}{}}{Fjb}{{{f{AG`}}{f{AG`}}}d}{{{f{{AGb{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AGd}}}{{Ah{Af}}}}{{{f{AGd}}}{{Ah{{Hh{Af{AGf{Kb}}}}}}}}`{{{f{AGh}}c}{{Ah{AGh}}}{}}{{{f{AGj}}{f{Gf}}}{{Ah{{l{c}}}}}C`}`{{{f{AG`}}{f{BjGl}}}Gn}{cc{}}`{{BhcFj}AGl{}}{{BhFj}AGn}`{{{f{AH`}}Fj}{{Ah{Hn}}}}{{{f{AH`}}Fj}Hn}{{{f{{AHb{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AG`}}{f{Bjc}}}bABf}{{}Fj}{{}c{}}{{{f{AG`}}}d}{{{f{AHd}}}{{Ah{Gf}}}}{{{f{AHf}}}{{Ah{Gf}}}}66{{{f{AFb}}}{{B`{c}}}{}}{{{f{AFb}}}{{B`{n}}}}{{{f{AHh}}}{{B`{c}}}{}}2{{{f{AFb}}}{{B`{{Hh{cc}}}}}{}}{{{f{AFl}}}{{Ah{Fj}}}}{{{f{AHj}}FjFj}{{l{c}}}C`}{{{f{{AGb{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AGd}}}{{Ah{{AGf{Kb}}}}}}{{{f{AHh}}nN`}{{Ah{{B`{c}}}}}{}}{{{f{AHl}}}AHl}{{{f{AHn}}{f{Cd}}Nb}{{Ah{Af}}}}{{{f{AI`}}c{B`{e}}}{{Ah{AI`}}}{{Hd{}{{Bb{I`}}}}}{}}{{{f{AI`}}ci}{{Ah{AI`}}}{{Hd{}{{Bb{I`}}}}}{}{}{{Cd{{B`{e}}}{{Cb{{B`{g}}}}}}}}`{{{f{AI`}}{f{Gf}}{B`{c}}}{{Ah{AI`}}}{}}{{{f{AIb}}Kb}{{l{c}}}C`}{{{f{AId}}Kbc}{{l{e}}}{}C`}`{{{f{AFj}}d}{{l{c}}}C`}{{{f{AFj}}Ed}{{l{c}}}C`}{{{f{AIf}}Df}{{B`{n}}}}{{{f{AFb}}}{{B`{c}}}{}}{{{f{AIh}}{f{c}}}{{Ah{AIh}}}Nd}{{{f{AIj}}{f{c}}}AIjNd}{{{f{AIl}}}{{Fn{{f{{Dh{Df}}}}}}}}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{AFl}}}{{Ah{AFl}}}}9{{}c{}}`{{{f{AIn}}{f{Gf}}{f{{l{c}}}}}{{Ah{{l{c}}}}}C`}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}C`C`{{Cd{ff}{{Cb{}}}}}{{Cd{f}{{Cb{}}}}}{{Cd{f}{{Cb{}}}}}C`}{{{l{c}}{l{e}}gik}{{l{m}}}C`C`{{Cd{}{{Cb{}}}}}{{Cd{}{{Cb{}}}}}{{Cd{}{{Cb{}}}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}C`C`H`{{Cj{ff}{{Cb{g}}}}}{{C`{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}C`C`{{AJ`{B`B`}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}g}bC`C`{{Cj{B`B`}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}D`C`C`{{Cj{{f{BjDb}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}C`C`{}{{Cj{}{{Cb{g}}}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}iBh}{{l{k}}}C`C`{H`AJb}{{Cj{ff}{{Cb{g}}}}}{{C`{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iBh}{{l{k}}}C`C`H`{{Cj{ff}{{Cb{g}}}}}{{C`{}{{Hb{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}C`C`H`{{Cj{}{{Cb{g}}}}}{{C`{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Ah{Af}}}C`C`{{Cj{ff}{{Cb{{Fb{H`}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}C`C`{{Cj{ff}{{Cb{{Fb{H`}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{Ob{{l{m}}i}}}C`C`{}{}{{Cj{B`B`}{{Cb{{Ob{{B`{g}}i}}}}}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}C`C`C`{{AJd{B`B`B`}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Ob{{l{m}}i}}}C`C`H`AJf{{Cj{ff}{{Cb{{Ob{gi}}}}}}}{{C`{}{{Hb{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kBh}{{Ob{{l{m}}i}}}C`C`H`AJf{{Cj{ff}{{Cb{{Ob{gi}}}}}}}{{C`{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Ob{{l{c}}g}}}C`C`AJf{{Cj{ff}{{Cb{{Ob{{Fb{H`}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Ob{{l{o}}k}}}C`C`C`{}{}{{Cj{B`B`B`}{{Cb{{Ob{{B`{i}}k}}}}}}}C`}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}C`{}{}{{Cj{B`}{{Cb{{Ob{{B`{e}}g}}}}}}}C`}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}C`{}{}{{Cj{}{{Cb{{Ob{eg}}}}}}}C`}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}C`{H`AJb}AJf{{Cj{f}{{Cb{{Ob{eg}}}}}}}{{C`{}{{Hb{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}C`{{AJh{B`}}}C`}{{{f{{l{c}}}}e}{{l{g}}}C`AJhC`}{{{f{{l{c}}}}g}{{l{i}}}C`H`{{Cj{f}{{Cb{e}}}}}{{C`{}{{Hb{e}}}}}}{{{l{c}}g}{{l{i}}}C`H`{{Cj{}{{Cb{e}}}}}{{C`{}{{Hb{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}C`{H`AJb}{{Cj{f}{{Cb{e}}}}}{{C`{}{{Hb{e}}}}}}0{{{f{{l{c}}}}}FjA`}0{{JnJn}Jn}{{{f{Ef}}I`}{{Ah{b}}}}{{{f{{AJj{I`}}}}I`}{{Ah{b}}}}````{{fh}b}{{{f{{l{c}}}}eAJld}{{Fn{I`}}}C`{{Bf{}{{Bb{B`}}}}}}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{AJl}}}AJl}{{f{f{Bjc}}}b{}}{fb}{{}AJl}{Fj{{f{c}}}{}}{Fj{{f{Bjc}}}{}}{Fjb}{{{f{AJl}}{f{AJl}}}d}{{f{f{c}}}d{}}00{{{f{AJl}}{f{BjGl}}}Gn}{cc{}}{{{f{AJl}}{f{Bjc}}}bABf}{{}Fj}{{}c{}}{{{f{{Dh{f}}}}cI`e}{{Fn{I`}}}{{Bf{}{{Bb{B`}}}}}{{Cd{fFjf}{{Cb{d}}}}}}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}5`{{Fj{f{Bj{Fn{d}}}}}b}```{{{f{AJn}}FjFj}AJn}0{{Fj{f{{Dh{Eh}}}}{f{BjEj}}}{{Ah{{AK`{Ef}}}}}}{{{f{{Dh{Eh}}}}{f{{Dh{d}}}}{f{{Dh{d}}}}}{{Ah{AKb}}}}{{{f{{Dh{Eh}}}}{f{{Dh{d}}}}{f{{Dh{d}}}}}{{Ah{{AKd{Kb}}}}}}{{Bh{f{{Dh{Eh}}}}{f{{Dh{d}}}}{f{{Dh{d}}}}}{{Ah{AKf}}}}{{Bh{f{{Dh{Af}}}}}{{Ah{AKf}}}}{{{f{Af}}}{{Ah{Fl}}}}{{{f{{Dh{Af}}}}}{{Ah{AKb}}}}{{{f{{Dh{Af}}}}}{{Ah{AKf}}}}0```{{fh}b}0{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{{f{Ed}}}Ed}{{{f{Ej}}}Ej}{{f{f{Bjc}}}b{}}0{fb}0{{}Ed}{{}Ej}{Fj{{f{c}}}{}}0{Fj{{f{Bjc}}}{}}0``{Fjb}0{{{f{Ed}}{f{Ed}}}d}{{{f{Ej}}{f{Ej}}}d}{{f{f{c}}}d{}}00000{{{f{Ed}}{f{BjGl}}}Gn}{{{f{Ej}}{f{BjGl}}}Gn}{cc{}}{{{f{Ej}}}Ed}{{{f{Ed}}}Ej}2{{{f{Ed}}{f{Bjc}}}bABf}{{{f{Ej}}{f{Bjc}}}bABf}{{}Fj}0{{}c{}}0````{{}Ed}{{}Ej}``{{{f{AJn}}FjFj}AJn}0{fc{}}0{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{fOd}077{{Edd}Ed}{{Ejd}Ej}1010{{Ejc}Ej{{Hd{}{{Bb{d}}}}}}210{EdEd}{EjEj}`{AKhKb}00{{}d}??0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}0000000000000000000000000000000{{{f{E`}}}d}{{{f{Jd}}{f{Jd}}}c{}}{{GfGf}c{}}{{{f{Gf}}{f{Gf}}}c{}}{{{f{D`}}{f{Dl}}}c{}}{{{f{D`}}{f{D`}}}c{}}{{D`D`}c{}}{{{f{El}}{f{El}}}c{}}{{ElEl}c{}}{{{f{El}}{f{{Dh{Df}}}}}c{}}{{{f{Hn}}{f{Hn}}}Hn}{{{f{E`}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}000000{{{f{D`}}{f{Af}}}{{Ah{Af}}}}{{{f{El}}{f{Af}}}{{Ah{Af}}}}{{{f{Gf}}{f{Af}}}{{Ah{Af}}}}{{{f{E`}}{f{Al}}}Af}{{{f{Gf}}{f{Al}}}Af}{{{f{D`}}{f{Al}}}Af}{{{f{El}}{f{Al}}}Af}{{{f{{AEh{c}}}}{f{Al}}}AfIh}{{{f{Gf}}}d}{{{f{Gf}}}{{B`{d}}}}{{{f{E`}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{E`}}Bh}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}32{{{f{E`}}c}E`{{Cd{{B`{Af}}}{{Cb{{B`{Af}}}}}}Cf}}{{{f{Gf}}c}Gf{{Cd{{B`{d}}}{{Cb{{B`{d}}}}}}Cf}}{{{f{D`}}c}D`{{Cd{{B`{{f{Dl}}}}}{{Cb{{B`{{AKl{Dl}}}}}}}}Cf}}{{{f{El}}c}El{{Cd{{B`{{f{{Dh{Df}}}}}}}{{Cb{{B`{{AKl{{Dh{Df}}}}}}}}}}Cf}}{{{f{{AEh{c}}}}e}{{AEh{c}}}Ih{{Cd{{B`{{f{c}}}}}{{Cb{{B`{c}}}}}}Cf}}{{{f{E`}}c}E`{{Cj{Ch}{{Cb{Af}}}}}}{{{f{E`}}e}{{l{g}}}{}{{Cj{{B`{Ch}}}{{Cb{{B`{c}}}}}}Cf}C`}{{{f{AKn}}c}Af{{Cd{{f{Af}}}{{Cb{Af}}}}}}{{{f{AL`}}c}Af{{Cd{{f{Af}}}{{Cb{Af}}}}}}{{{f{Gf}}{f{Cd}}}Gf}{{{f{D`}}{f{Cd}}}D`}{{{f{El}}{f{Cd}}}El}{{{f{Gf}}{f{Cd}}}{{l{c}}}C`}{{{f{D`}}{f{Cd}}}{{l{c}}}C`}{{{f{El}}{f{Cd}}}{{l{c}}}C`}{{{f{D`}}c}D`{{Cj{{f{Dl}}}{{Cb{{f{Dl}}}}}}}}{{{f{El}}c}El{{Cj{{f{{Dh{Df}}}}}{{Cb{{f{{Dh{Df}}}}}}}}}}{{{f{E`}}{f{Cd}}}{{Ah{E`}}}}{{{f{E`}}e{f{Bj{Dh{c}}}}}b{}{{Cd{{B`{Af}}{f{c}}}{{Cb{c}}}}}}{{{f{Gf}}e{f{Bj{Dh{c}}}}}b{}{{Cd{{B`{d}}{f{c}}}{{Cb{c}}}}}}{{{f{D`}}e{f{Bj{Dh{c}}}}}b{}{{Cd{{B`{{f{Dl}}}}{f{c}}}{{Cb{c}}}}}}{{{f{El}}e{f{Bj{Dh{c}}}}}b{}{{Cd{{B`{{f{{Dh{Df}}}}}}{f{c}}}{{Cb{c}}}}}}{{{f{{AEh{c}}}}g{f{Bj{Dh{e}}}}}bIh{}{{Cd{{B`{{f{c}}}}{f{e}}}{{Cb{e}}}}}}{{{f{E`}}c}E`{{Cd{Af}{{Cb{Af}}}}Cf}}{{{f{Gf}}c}Gf{{Cd{d}{{Cb{d}}}}Cf}}{{{f{D`}}c}D`{{Cd{{f{Dl}}}{{Cb{{AKl{Dl}}}}}}Cf}}{{{f{El}}c}El{{Cd{{f{{Dh{Df}}}}}{{Cb{{AKl{{Dh{Df}}}}}}}}Cf}}{{{f{{AEh{c}}}}e}{{AEh{c}}}Ih{{Cd{{f{c}}}{{Cb{c}}}}Cf}}{{{f{D`}}c}D`{{Cj{Eb{f{Dl}}}{{Cb{Eb}}}}Cf}}{{{f{Gf}}Ed}Ef}{{{f{D`}}Ed}Ef}{{{f{El}}Ed}Ef}{{{f{AKf}}Ed}Ef}{{{f{Gf}}{f{{Dh{Eh}}}}{f{Ej}}}{{Ah{Ef}}}}{{{f{D`}}{f{{Dh{Eh}}}}{f{Ej}}}{{Ah{Ef}}}}{{{f{El}}{f{{Dh{Eh}}}}{f{Ej}}}{{Ah{Ef}}}}{{{f{AKf}}{f{{Dh{Eh}}}}{f{Ej}}}{{Ah{Ef}}}}{{{f{Gf}}}{{Ah{Ef}}}}{{{f{D`}}}{{Ah{Ef}}}}{{{f{El}}}{{Ah{Ef}}}}{{{f{{AEh{c}}}}}{{Ah{Ef}}}Ih}{eALb{}{{Hd{}{{Bb{c}}}}}}0{{ADje}ALd{}{{Hd{}{{Bb{c}}}}}}0{{{f{D`}}}El}{{{f{Hn}}}Hn}{{{f{Dn}}}{{f{Dn}}}}{{{f{Mj}}}{{f{Dn}}}}{{{f{ALf}}}{{f{Dn}}}}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}{{B`{{f{{Dh{c}}}}}}}A@n{ALn{AM`{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{{f{E`}}{f{{l{c}}}}{f{{l{e}}}}g}E`C`C`{{Cj{{B`{Ch}}B`B`}{{Cb{{B`{Af}}}}}}}}{{GfGf}c{}}{{{f{Gf}}{f{Gf}}}c{}}0101{f{{f{c}}}{}}000000000000000000000000000000000000{{{f{Bj}}}{{f{Bjc}}}{}}000000000000000000000000000000000000{Dn{{Fb{Dn}}}}{{{f{AMb}}{f{AMb}}c}{{Ah{AMb}}}AMd}{{{f{AMf}}{f{Dn}}}{{Ah{Af}}}}0{{{f{Hn}}{f{Dn}}}Hn}{{{f{Dn}}Dn}Dn}{{{f{E`}}{f{Dn}}}{{Ah{Af}}}}{{{f{Gf}}{f{Dn}}}{{Ah{Af}}}}{{{f{D`}}{f{Dn}}}{{Ah{Af}}}}{{{f{El}}{f{Dn}}}{{Ah{Af}}}}{{{f{AKf}}{f{Dn}}}{{Ah{Af}}}}{{{f{AMf}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{Jd}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{E`}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{Gf}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{D`}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{El}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{AKf}}{f{Dn}}Fd}{{Ah{Af}}}}`{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}0000{{{f{AKn}}{f{Af}}}{{Ah{Af}}}}{{{f{AL`}}{f{Af}}}{{Ah{Af}}}}{{{f{{AMh{ce}}}}}{{AMh{ce}}}C`C`}{{{f{AMj}}}AMj}{{{f{Hn}}}Hn}{{{f{AMl}}}AMl}{{{f{Dn}}}Dn}{{{f{AMn}}}AMn}{{{f{Mj}}}Mj}{{{f{AN`}}}AN`}{{{f{ANb}}}ANb}{{{f{ANd}}}ANd}{{{f{ANf}}}ANf}{{{f{ANh}}}ANh}{{{f{Ln}}}Ln}{{{f{Mh}}}Mh}{{{f{ANj}}}ANj}{{{f{ANl}}}ANl}{{{f{Md}}}Md}{{{f{M`}}}M`}{{{f{Cl}}}Cl}{{{f{Cn}}}Cn}{{{f{ANn}}}ANn}{{{f{AO`}}}AO`}{{{f{Dj}}}Dj}{{{f{Dd}}}Dd}{{{f{AOb}}}AOb}{{{f{An}}}An}{{{f{AOd}}}AOd}{{{f{AOf}}}AOf}{{{f{AOh}}}AOh}{{{f{AOj}}}AOj}{{{f{ADj}}}ADj}{{{f{AOl}}}AOl}{{f{f{Bjc}}}b{}}0000000000000000000000000000000{fb}0000000000000000000000000000000{{{f{AN`}}{f{AN`}}}AOn}{{{f{BjMj}}Dn}b}{B@`e{}{{ALb{c}}AJb}}0{{B@`ADj}e{}{{ALd{c}}AJb}}0{{f{f{c}}}AOn{}}{{{f{Dn}}}d}00{B@bDn}{{}Hn}{{}AMl}{{}Dn}{{}ADj}{Fj{{f{c}}}{}}{{{f{{AMh{ce}}}}}{{f{g}}}C`C`{}}111111111111111111111111111111111111{{{f{Bj{AMh{ce}}}}}{{f{Bjg}}}C`C`{}}{Fj{{f{Bjc}}}{}}000000000000000000000000000000000000{{{f{Jd}}{f{Jd}}}c{}}{{{f{E`}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}000000{Fjb}000000000000000000000000000000000000{{{f{AMf}}}{{f{Dn}}}}{{{f{Jd}}}{{f{Dn}}}}{{{f{Hn}}}Dn}{{{f{Mj}}}{{f{Dn}}}}``{{{f{Hn}}{f{Hn}}}d}{{{f{AMl}}{f{AMl}}}d}{{{f{Dn}}{f{ADj}}}d}{{{f{Dn}}{f{Dn}}}d}{{{f{AMn}}{f{AMn}}}d}{{{f{Mj}}{f{Mj}}}d}{{{f{AN`}}{f{AN`}}}d}{{{f{ANb}}{f{ANb}}}d}{{{f{ANd}}{f{ANd}}}d}{{{f{ADj}}{f{ADj}}}d}{{{f{AOl}}{f{AOl}}}d}{{{f{Hn}}{f{Hn}}d}d}{{{f{E`}}{f{E`}}}Gf}{{{f{Gf}}{f{Gf}}}Gf}{{{f{D`}}{f{Dl}}}Gf}{{{f{D`}}{f{D`}}}Gf}{{{f{El}}{f{El}}}Gf}{{{f{El}}{f{{Dh{Df}}}}}Gf}543210{{f{f{c}}}d{}}00000000000000000000000000000{{{f{E`}}}{{Ah{{Hh{Af{AGf{Kb}}}}}}}}{{{f{{AMh{ce}}}}}MjC`C`}{{{f{Gf}}d}{{Ah{Gf}}}}{{{f{El}}{f{{Dh{Df}}}}}{{Ah{El}}}}{{{f{D`}}{f{Gf}}}{{Ah{{l{Dj}}}}}}{{{f{El}}{f{Gf}}}{{Ah{{l{Dd}}}}}}{{{f{{AEh{c}}}}{f{Gf}}}{{Ah{{l{{Id{c}}}}}}}Ih}{{AMd{f{B@d}}{f{B@d}}}{{Ah{B@d}}}}{{{f{E`}}{f{BjGl}}}Gn}{{{f{D`}}{f{BjGl}}}Gn}{{{f{El}}{f{BjGl}}}Gn}{{{f{{AEh{c}}}}{f{BjGl}}}GnIh}{{{f{AMj}}{f{BjGl}}}Gn}{{{f{Hn}}{f{BjGl}}}Gn}0{{{f{AMl}}{f{BjGl}}}Gn}{{{f{Dn}}{f{BjGl}}}Gn}0{{{f{AMn}}{f{BjGl}}}Gn}{{{f{Mj}}{f{BjGl}}}Gn}{{{f{AN`}}{f{BjGl}}}Gn}{{{f{ANb}}{f{BjGl}}}Gn}0{{{f{ANd}}{f{BjGl}}}Gn}0{{{f{ADj}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{AOl}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{E`}}c}b{{Cj{{B`{Ch}}}}}}{cc{}}000000{cHnB@h}{{{f{Dl}}}Hn}2{{{B`{c}}}Hn{{B@j{Hn}}}}{dHn}{{{f{{Dh{Df}}}}}Hn}55{{{f{ADj}}}Dn}{{{f{Hn}}}Dn}{HnDn}8{{{f{Hn}}}Mj}9{{{f{B@l}}}Mj}::{{{f{AOl}}}ANd};;;;;;;;;;;;;;;;;;;;;{B@nADj}{BA`ADj}=={{{f{ADj}}d}Dn}{eE`{{BAb{Af}}}{{Hd{}{{Bb{c}}}}}}{cE`{{Hd{}{{Bb{{B`{Af}}}}}}}}{cE`{{Hd{}{{Bb{{B`{{Fb{H`}}}}}}}}}}{cGf{{Hd{}{{Bb{d}}}}}}{eD`{{`{Dl}}}{{Hd{}{{Bb{c}}}}}}{eD`{{Kj{Dl}}}{{Hd{}{{Bb{{B`{c}}}}}}}}{eEl{{Kj{{Dh{Df}}}}}{{Hd{}{{Bb{{B`{c}}}}}}}}{eEl{{`{{Dh{Df}}}}}{{Hd{}{{Bb{c}}}}}}{e{{AEh{c}}}Ih{{Hd{}{{Bb{{B`{c}}}}}}}}{{Bhc}{{l{An}}}{{Bf{}{{Bb{{B`{d}}}}}}}}{{Bhe}D`{{Kj{Dl}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bhe}El{{Kj{{Dh{Df}}}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bhe}{{AEh{c}}}Ih{{Bf{}{{Bb{{B`{c}}}}}}}};<97856{eAKf{{Kj{{Dh{Df}}}}}{{Hd{}{{Bb{{B`{c}}}}}}}}{eAKf{{`{{Dh{Df}}}}}{{Hd{}{{Bb{c}}}}}}6{{Bhc}{{l{An}}}{{Bf{}{{Bb{d}}}}}}{{Bhe}D`{{Kj{Dl}}}{{Bf{}{{Bb{c}}}}}}{{Bhe}El{{Kj{{Dh{Df}}}}}{{Bf{}{{Bb{c}}}}}}{{Bhe}{{AEh{c}}}Ih{{Bf{}{{Bb{c}}}}}}{cE`{{Hj{}{{Bb{{B`{Af}}}}}}}}{cGf{{Hj{}{{Bb{d}}}}}}{cGf{{Hj{}{{Bb{{B`{d}}}}}}}}{eD`{{Kj{Dl}}JfJh}{{Hj{}{{Bb{{B`{c}}}}}}}}{eD`{{`{Dl}}JfJhBAd}{{Hj{}{{Bb{c}}}}}}{eEl{{Kj{{Dh{Df}}}}JfJh}{{Hj{}{{Bb{{B`{c}}}}}}}}{eEl{{`{{Dh{Df}}}}JfJhBAd}{{Hj{}{{Bb{c}}}}}}{{cBhDn}E`{{Hj{}{{Bb{{B`{Af}}}}}}}}{{Bh{f{{Dh{d}}}}}Gf}{{Bh{f{{Dh{c}}}}}D`{{Kj{Dl}}}}{{Bh{f{{Dh{c}}}}}El{{Kj{{Dh{Df}}}}}}{{Bh{f{{Dh{c}}}}}{{AEh{c}}}Ih}{{Bh{f{{Dh{{B`{d}}}}}}}Gf}{{Bh{f{{Dh{{B`{c}}}}}}}D`{{Kj{Dl}}}}{{Bh{f{{Dh{{B`{c}}}}}}}El{{Kj{{Dh{Df}}}}}}{{Bh{f{{Dh{{B`{c}}}}}}}{{AEh{c}}}Ih}{cGf{{Hl{}{{Bb{{B`{d}}}}}}}}{{{Fn{c}}ADj}{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}A@n{ALn{AM`{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{{Fn{c}}ADj}{{AJb{}{{ALh{e}}{ALj{c}}{ALl{g}}}}}{ALn{AM`{e}}}A@n{{Gd{}{{Bb{e}}}}HlJfJh}}{{FjcADj}{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}A@n{ALn{AM`{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{Bh{f{Af}}Fj}E`}{{BhdFj}Gf}{{Bh{f{Dl}}Fj}D`}{{Bh{f{{Dh{Df}}}}Fj}El}{{Bh{f{{Dh{Df}}}}Fj}AKf}{{BhcFj}{{AEh{c}}}Ih}{{FjADj}{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}A@n{ALn{AM`{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{BhFj}E`}{{BhFj}Gf}{{BhFj}D`}{{BhFj}El}{{BhFj}AKf}{{BhFj}{{AEh{c}}}Ih}{{BhFj{f{Dn}}}E`}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}Fj}{{B`{c}}}A@n{ALn{AM`{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{AN`Il}{ANb{{B`{Il}}}}{{{f{Jd}}Fj}{{Ah{Hn}}}}{{{f{AMf}}Fj}{{Ah{Hn}}}}0{{{f{E`}}Fj}{{Ah{Hn}}}}{{{f{Gf}}Fj}{{Ah{Hn}}}}{{{f{D`}}Fj}{{Ah{Hn}}}}{{{f{El}}Fj}{{Ah{Hn}}}}{{{f{AKf}}Fj}{{Ah{Hn}}}}{{{f{{AEh{c}}}}Fj}{{Ah{Hn}}}Ih}{{{f{Jd}}Fj}Hn}{{{f{AMf}}Fj}Hn}0{{{f{E`}}Fj}Hn}{{{f{Gf}}Fj}Hn}{{{f{D`}}Fj}Hn}{{{f{El}}Fj}Hn}{{{f{AKf}}Fj}Hn}{{{f{{AEh{c}}}}Fj}HnIh}{{{f{E`}}Fj}{{B`{Af}}}}{{}Dn}00000000000000000000000{{{f{E`}}}Af}{{{f{{AEh{c}}}}Fj}{{B`{{f{If}}}}}Ih}0{{ANbIl}Il}{{ANbc}Il{{Cd{}{{Cb{Il}}}}}}{{{f{Hn}}}{{B`{{f{Dl}}}}}}{{{f{BAf}}Fj}Hn}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}Fj}{{B`{c}}}A@n{ALn{AM`{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{{f{E`}}}Fj}{{{f{D`}}}Fj}{{{f{AKf}}}Fj}{{{f{E`}}dd}{{Ah{Al}}}}{{{f{Gf}}dd}{{Ah{Al}}}}{{{f{D`}}dd}{{Ah{Al}}}}{{{f{El}}dd}{{Ah{Al}}}}{{{f{AKf}}dd}{{Ah{Al}}}}{{{f{{AEh{c}}}}dd}{{Ah{Al}}}Ih}{{{f{Gf}}{f{Gf}}}Gf}{{{f{D`}}{f{Dl}}}Gf}{{{f{D`}}{f{D`}}}Gf}{{{f{El}}{f{{Dh{Df}}}}}Gf}{{{f{El}}{f{El}}}Gf}43210{{{f{Hn}}{f{Bjc}}}bABf}{{{f{AMl}}{f{Bjc}}}bABf}{{{f{Dn}}{f{Bjc}}}bABf}{{{f{Mj}}{f{Bjc}}}bABf}{{{f{ANb}}{f{Bjc}}}bABf}{{{f{ANd}}{f{Bjc}}}bABf}{{{f{ADj}}{f{Bjc}}}bABf}{{{f{AOl}}{f{Bjc}}}bABf}{{{f{Hn}}{f{Bjc}}d}bABf}{{{f{Hn}}}I`}{DnDn}{{}Fj}000000000000000000000000000000000000{{{f{E`}}}{{f{Dn}}}}{{{f{Dn}}}{{B`{{f{Dn}}}}}}{{{f{ADj}}}{{B`{{f{ADj}}}}}}{{}c{}}000000000000000000000000000000000000{{}Eh}{{BAh{B`{Fj}}Fj}{{Ah{Jd}}}}{{BAh{B`{Fj}}Fj}Jd}{{{f{E`}}}c{}}{{{f{Gf}}}c{}}{{{f{D`}}}c{}}{{{f{El}}}c{}}{{{f{AKf}}}c{}}{{{f{{AEh{c}}}}}eIh{}}{{BAjDn}{{Ah{L`}}}}{JdAf}{BAhAf}{HnHn}{{{f{Dn}}}d}00{{{f{Hn}}}d}1111010111101{{{f{ADj}}}d}12121222212222120{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}{{AEb{cgAE`}}}A@n{ALn{AM`{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{{f{E`}}}{{`{{Bf{}{{Bb{Kb}}}}}}}}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}{{B`{c}}}A@n{ALn{AM`{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{{f{Dn}}}{{f{Dn}}}}{{{f{Gf}}{f{Gf}}}Gf}{{{f{D`}}{f{Dl}}}Gf}{{{f{D`}}{f{D`}}}Gf}{{{f{El}}{f{El}}}Gf}{{{f{El}}{f{{Dh{Df}}}}}Gf}42301{{{f{AMb}}{f{AMb}}}{{Ah{{Hh{AMbAMb}}}}}}{{E`E`}{{Ah{{Hh{E`E`}}}}}}{{{f{Dn}}{f{Dn}}}{{Ah{d}}}}{{{f{AMl}}}{{B`{Dn}}}}{{{f{Gf}}}{{B`{d}}}}{{{f{Gf}}}L`}{{{f{D`}}}L`}{{{f{El}}}L`}{{{f{Gf}}}{{B`{n}}}}{{{f{AKn}}}{{B`{Ij}}}}{{{f{AL`}}}{{B`{n}}}}{{{f{AKn}}}L`}{{{f{AL`}}}L`}{{{f{Dn}}{f{Dn}}}{{Ah{Dn}}}}9876{{Bh{f{{Dh{Df}}}}FjFj}Gf}{{{f{Jd}}{f{Jd}}}c{}}{{{f{E`}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}000000{{{f{D`}}}{{Ah{Fj}}}}{{{f{El}}}{{Ah{Fj}}}}{{{f{Mj}}}{{f{Bh}}}}`{{}c{}}00{{Bhc}D`{{Kj{{Dh{{AKl{Dl}}}}}}}}{{Bhc}D`{{Kj{{Dh{{B`{{AKl{Dl}}}}}}}}}}{{Bhc}D`{{Kj{{Dh{{B`{{f{Dl}}}}}}}}}}{{Bhc}D`{{Kj{{Dh{{f{Dl}}}}}}}}{{Bhc}El{{Kj{{Dh{{B`{{AKl{{Dh{Df}}}}}}}}}}}}{{Bhc}El{{Kj{{Dh{{AKl{{Dh{Df}}}}}}}}}}{{Bhc}El{{Kj{{Dh{{B`{{f{{Dh{Df}}}}}}}}}}}}{{Bhc}El{{Kj{{Dh{{f{{Dh{Df}}}}}}}}}}{{Bh{f{{Dh{c}}}}}{{AEh{c}}}Ih}{{Bhe}{{AEh{c}}}Ih{{Kj{{Dh{{B`{c}}}}}}}}{{BhDn}Mj}{IlAN`}{KbANb}{IlANb}{Bh{{AEh{c}}}Ih}{{{f{E`}}FjFj}E`}{{{f{Gf}}FjFj}Gf}{{{f{D`}}FjFj}D`}{{{f{El}}FjFj}El}{{{f{AKf}}FjFj}AKf}{{{f{{AEh{c}}}}FjFj}{{AEh{c}}}Ih}{{Bh{Fn{c}}}{{AEh{c}}}Ih}{{Bh{Fn{c}}Hf}{{AEh{c}}}Ih}{{{l{c}}}{{AMh{ec}}}C`C`}{{}AMn}{Gfc{}}{{{f{Gf}}}c{}}{{{f{E`}}{f{E`}}}Gf}{{{f{Gf}}{f{Gf}}}Gf}{{{f{D`}}{f{Dl}}}Gf}{{{f{D`}}{f{D`}}}Gf}{{{f{El}}{f{El}}}Gf}{{{f{El}}{f{{Dh{Df}}}}}Gf}542310{{{f{E`}}}{{Ah{{AGf{Kb}}}}}}9{{{f{E`}}}{{`{{Ml{}{{Bb{{B`{Af}}}}}}}}}}{{{f{D`}}}{{`{{Ml{}{{Bb{{B`{{f{Dl}}}}}}}}}}}}{{{f{BjE`}}}{{`{{Mn{}{{Bb{{B`{Af}}}}}}}}}}{{{f{D`}}}{{`{{Mn{}{{Bb{{B`{{f{Dl}}}}}}}}}}}}{{{f{Hn}}{f{Hn}}}{{B`{AOn}}}}{{{f{AN`}}{f{AN`}}}{{B`{AOn}}}}{{{f{ANd}}{f{ANd}}}{{B`{AOn}}}}{{{f{{AMh{ce}}}}}{{f{{l{e}}}}}C`C`}{{{f{Jd}}}{{B`{Fj}}}}{{{f{{AMh{AOdJb}}}}}{{B`{Fj}}}}{{{f{AKn}}nN`}{{Ah{{B`{Ij}}}}}}{{{f{AL`}}nN`}{{Ah{{B`{n}}}}}}{{{f{AKn}}nN`}{{Ah{L`}}}}{{{f{AL`}}nN`}{{Ah{L`}}}}{{BhFjn}{{Ah{Gf}}}}{{{f{E`}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}000000{{{f{E`}}}E`}{{{f{Gf}}}Gf}{{{f{D`}}}D`}{{{f{El}}}El}{{{f{AKf}}}AKf}{{{f{{AEh{c}}}}}{{AEh{c}}}Ih}`{{{f{Jd}}}Fj}{{{f{{AMh{AOdJb}}}}}Fj}{{{f{Gf}}c{B`{d}}}{{Ah{Gf}}}{{Hd{}{{Bb{I`}}}}}}{{{f{D`}}c{B`{{f{Dl}}}}}{{Ah{D`}}}{{Hd{}{{Bb{I`}}}}}}{{{f{El}}c{B`{{f{{Dh{Df}}}}}}}{{Ah{El}}}{{Hd{}{{Bb{I`}}}}}}{{{f{Gf}}ce}{{Ah{Gf}}}{{Hd{}{{Bb{I`}}}}}{{Cd{{B`{d}}}{{Cb{{B`{d}}}}}}}}{{{f{D`}}ce}{{Ah{D`}}}{{Hd{}{{Bb{I`}}}}}{{Cd{{B`{{f{Dl}}}}}{{Cb{{B`{Db}}}}}}}}{{{f{El}}ce}{{Ah{El}}}{{Hd{}{{Bb{I`}}}}}{{Cd{{B`{{f{{Dh{Df}}}}}}}{{Cb{{B`{{Fn{Df}}}}}}}}}}{{{f{Gf}}{f{Gf}}{B`{d}}}{{Ah{Gf}}}}{{{f{D`}}{f{Gf}}{B`{{f{Dl}}}}}{{Ah{D`}}}}{{{f{El}}{f{Gf}}{B`{{f{{Dh{Df}}}}}}}{{Ah{El}}}}{{{f{BjE`}}}b}{{{f{BjE`}}Dn}b}{{{f{BjMj}}Bh}b}{{{f{E`}}Kb}E`}{{{f{Gf}}Kb}Gf}{{{f{D`}}Kb}D`}{{{f{El}}Kb}El}{{{f{AKf}}Kb}AKf}{{{f{{AEh{c}}}}Kb}{{AEh{c}}}Ih}{{{f{E`}}Kb{B`{{f{Af}}}}}E`}{{{f{Gf}}Kb{B`{d}}}Gf}{{{f{D`}}Kb{B`{{f{Dl}}}}}D`}{{{f{El}}Kb{B`{{f{{Dh{Df}}}}}}}El}{{{f{AKf}}Kb{B`{{f{{Dh{Df}}}}}}}AKf}{{{f{{AEh{c}}}}Kb{B`{{Id{c}}}}}{{l{{Id{c}}}}}Ih}{{{f{Gf}}d}Gf}{{{f{D`}}d}D`}{{{f{El}}d}{{l{Dd}}}}{{{f{AKf}}d}AKf}{{{f{Gf}}Ed}{{l{An}}}}{{{f{D`}}Ed}{{l{Dj}}}}{{{f{El}}Ed}{{l{Dd}}}}{{{f{AKf}}Ed}AKf}{{{f{AKn}}Df}L`}{{{f{AL`}}Df}L`}{{{f{Hn}}}{{AKl{Dl}}}}{{{f{Hn}}{f{Dn}}}{{B`{Hn}}}}`{{{f{Jd}}{f{Jd}}}c{}}{{{f{E`}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}000000{{{f{Gf}}}{{B`{I`}}}}{{{f{Gf}}}L`}{{{f{El}}}L`}{{{f{D`}}{f{Ef}}}D`}{{{f{D`}}{f{c}}}D`{{Kj{{Dh{I`}}}}Nd}}{{{f{El}}{f{Ef}}}El}{{{f{El}}{f{c}}}El{{Kj{{Dh{I`}}}}Nd}}{{{f{Dn}}AMn}ADj}{{{f{Mj}}AMn}B@l}{ANdAOl}{{{f{Dn}}BhAMn}B@l}{ANd{{f{Dl}}}}{{{f{D`}}Fj}{{Ah{Af}}}}{{ADjFjd}ADj}{{{f{BjE`}}Dn}b}{{{f{ADj}}}{{f{ADj}}}}{{{f{E`}}}{{Ah{Nn}}}}{fc{}}0000000000000000000000000000000{{{f{Dn}}}Dn}{{{f{ADj}}}BAl}{{{f{Jd}}Fj}{{Ah{{AKl{Jd}}}}}}{{{f{{AMh{AOdJb}}}}Fj}{{Ah{{AKl{{AMh{AOdJb}}}}}}}}{fDb}000{{{f{El}}}D`}{{{f{Hn}}{f{Hn}}}d}{{{f{E`}}c}{{Ah{E`}}}{{Cj{Ch}{{Cb{{Ah{Af}}}}}}}}{{{f{E`}}e}{{Ah{{l{g}}}}}{}{{Cj{{B`{Ch}}}{{Cb{{Ah{{B`{c}}}}}}}}Cf}C`}{g{{Ob{ALbe}}}{}{}{{Hd{}{{Bb{{Ob{ce}}}}}}}}0{{ADjg}{{Ob{ALde}}}{}{}{{Hd{}{{Bb{{Ob{ce}}}}}}}}0{B@`{{Ob{eg}}}{}{{ALb{c}}AJb}{}}0{{B@`ADj}{{Ob{eg}}}{}{{ALd{c}}AJb}{}}0{{{f{Hn}}}{{Ah{c}}}Kn}{c{{Ob{e}}}{}{}}000000000000{Kb{{Ob{AN`c}}}{}}111111111111111111111111{{}{{Ob{c}}}{}}000000000000000000000000000000000000{{{f{Hn}}{f{Dn}}}{{Ah{Hn}}}}{{{f{Dn}}AMn}{{Ah{ADj}}}}{f{{Ob{G`BAn}}}}000{{{f{E`}}{f{{l{c}}}}e}{{Ah{E`}}}C`{{Cj{{B`{Ch}}B`}{{Cb{{Ah{{B`{Af}}}}}}}}}}{fOd}000000000000000000000000000000000000{{{f{ADj}}}ADj}{{{f{Gf}}}{{Ah{Gf}}}}{{{f{D`}}}{{Ah{D`}}}}{{{f{El}}}{{Ah{El}}}}{{{f{{AEh{c}}}}}{{Ah{{l{{Id{c}}}}}}}Ih}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}Fj}cA@n{ALn{AM`{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}0{{{f{Dn}}Hn}d}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}gA@n{ALn{AM`{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{{f{AKn}}Df}L`}{{{f{AL`}}Df}L`}{{{f{Gf}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BB`}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BBb}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{B@d}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BBd}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BBf}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BBh}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BBj}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BBl}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BAh}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{AKn}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{AL`}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{D`}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{El}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{AKf}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{{AEh{c}}}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}Ih}{{{f{Gf}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{BB`}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{BBb}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{B@d}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{BBd}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{BBf}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{BBh}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{BBj}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{BBl}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{BAh}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{AKn}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{AL`}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{D`}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{El}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{AKf}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{{AEh{c}}}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}Ih}{{}c{}}000000000000000000000000000000000000{Fjc{}}0{Fj{{BBn{ce}}}{}{}}{{{f{{Dh{Of}}}}e}c{}{{Oh{{f{Ef}}}{{Cb{c}}}}}}{{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}{B`{Hf}}}{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}A@n{ALn{AM`{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{{f{Dn}}}Hn}{{{f{E`}}{f{{l{c}}}}e}E`C`{{Cj{{B`{Ch}}B`}{{Cb{{B`{Af}}}}}}}}```````````{{fh}b}{{{f{AMb}}}d}{{AMbd}AMb}{{{f{BjBC`}}{B`{{f{Dl}}}}}b}{{{f{BjAMb}}{f{AMb}}}{{Ah{b}}}}{{{f{BjBC`}}}b}{{{f{BjBC`}}{f{Dl}}}b}{{{f{AMb}}Ed}Ef}{f{{f{c}}}{}}000{{{f{Bj}}}{{f{Bjc}}}{}}000{{{f{AMb}}{f{AMb}}c}{{Ah{AMb}}}AMd}{{{f{AMb}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{AMb}}}AMb}{{f{f{Bjc}}}b{}}{fb}{{}BCb}{Fj{{f{c}}}{}}000{Fj{{f{Bjc}}}{}}000{{BC`c}AMb{{Hd{}{{Bb{{B`{{f{Dl}}}}}}}}}}{Fjb}000{{{f{AMb}}}{{f{Dn}}}}{{{f{AMb}}{f{D`}}}c{}}{{{f{AMb}}{f{AMb}}}c{}}{{{f{AMb}}{f{Dl}}}c{}}012{{AMd{f{B@d}}{f{B@d}}}{{Ah{B@d}}}}{BC`AMb}{BCb{{Lf{BCd}}}}{cc{}}000{{B@d{Lf{BCd}}dBCf}AMb}{{B@dBCf}AMb}{{{f{D`}}{f{B@b}}BCf}{{Ah{AMb}}}}{{BhdFjBCf}AMb}{{{f{AMb}}Fj}{{Ah{Hn}}}}{{{f{AMb}}Fj}Hn}{{{f{AMb}}}{{f{{Lf{BCd}}}}}};=<<;={{}Fj}000{{}c{}}000{{}Eh}1{AMbAf}{{{f{AMb}}}d}0{{{f{AMb}}}BCh}{{{f{AMb}}}Fj}{{{f{AMb}}{f{AMb}}}c{}}{{{f{AMb}}{f{Dl}}}c{}}{{{f{AMb}}{f{D`}}}c{}}210{{{f{AMb}}{f{AMb}}}{{Ah{{Hh{AMbAMb}}}}}}{{E`E`}{{Ah{{Hh{E`E`}}}}}}{{{f{AMb}}}L`}{{{f{BjBCb}}{f{{Lf{BCd}}}}}{{Ah{b}}}}1{{{f{AMb}}}{{Ah{Fj}}}}{{{f{AMb}}}{{f{Bh}}}}{{BhFjBCf}BC`}{{{Lf{BCd}}}BCb}{{{f{BjBCh}}}{{B`{c}}}{}};9:;9:<{{{f{AMb}}}{{f{B@d}}}}{{{f{BjBC`}}{f{Dl}}}{{Hh{Ljd}}}}`{{{f{BCh}}}{{Hh{Fj{B`{Fj}}}}}}{{{f{AMb}}d}AMb}{{{f{AMb}}Ed}AMb}`{{{f{AMb}}AMnd}Fl}{{{f{AMb}}{f{B@b}}BCj}AMb}{{{f{AMb}}}{{Ah{AMb}}}}{{{f{AMb}}}AMb}{fc{}}{c{{Ob{e}}}{}{}}000{{}{{Ob{c}}}{}}000{fOd}0005{{{f{AMb}}}d}{{{f{AMb}}}{{Ah{BCl}}}}{{}c{}}000``````{{fh}b}0{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{B@bBCd}{{{f{BCf}}}BCf}{{{f{BCd}}}BCd}{{f{f{Bjc}}}b{}}0{fb}0{{}BCf}{{}BCd}{Fj{{f{c}}}{}}0{Fj{{f{Bjc}}}{}}0{Fjb}0{{{f{BCf}}{f{BCf}}}d}{{{f{BCd}}{f{Dl}}}{{B`{Lj}}}}{{{f{BCf}}{f{BjGl}}}Gn}{{{f{BCd}}{f{BjGl}}}Gn}{cc{}}0{{{f{BCd}}Lj}{{f{Dl}}}}{{{f{BCd}}}{{f{B@b}}}}{{{f{BCd}}Lj}{{B`{{f{Dl}}}}}}{{}Fj}0{{}c{}}0{{{f{BCd}}}d}0{{{f{BCd}}}Fj}{{{f{BCd}}{f{BCd}}}d}{fc{}}0{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{fOd}077`{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{}BCn}{Fj{{f{c}}}{}}{Fj{{f{Bjc}}}{}}{{}b}{Fjb}{{{f{BjBCn}}}b}2{cc{}}6{{}Fj}{{}c{}}=<;{{}d}1`{{{f{BjBD`}}Lj{f{BCd}}}{{Ah{{f{BjBD`}}}}}}{{{f{BjBD`}}}{{f{BjBD`}}}}{{{f{BjBD`}}{f{Dl}}}{{Ah{{f{BjBD`}}}}}}>=;:8{BD`AMb}765{{BhFj{Lf{BCd}}BCfd}BD`}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}9```````>>8````````````````````````{{{f{BDb}}}{{f{Dl}}}}{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0`{Fj{{f{c}}}{}}{{{f{BDb}}}f}1{Fj{{f{Bjc}}}{}}0{Fjb}0`{{{f{BDd}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BDb}}{f{BjGl}}}{{Ob{bB@f}}}}0{cc{}}0{cBDb{{B@j{{AKl{Dl}}}}}}{{}{{Kf{{f{Dl}}BDd}{{Cb{b}}}}}}{{}Fj}0{{}c{}}0{cAKjAJf}{{{f{Dl}}}BDb}````{{{Kf{{f{Dl}}BDd}{{Cb{b}}}}}b}{cAKjBDf}{fDb}{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{f{{Ob{G`BAn}}}}{fOd}099`````````````````{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{BDh}}}BDh}{{f{f{Bjc}}}b{}}{fb}{Fj{{f{c}}}{}}{Fj{{f{Bjc}}}{}}{Fjb}{{{f{BjGl}}MbFj}Gn}{cc{}}{{}BDj}{{}BDh}{{}{{B`{Fj}}}}{{}Db}{{}d}{{}Fj}{{}c{}}{{{B`{BDj}}}b}{BDhb}{{{B`{Fj}}}b}2{{{B`{d}}}b}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}8```````````{{fh}b}00{{{f{BjBCl}}{Fn{Eh}}{f{BDl}}}{{Ah{b}}}}{{{f{BjBCl}}{Fn{Af}}{f{BDl}}}{{Ah{b}}}}{{{f{BCl}}{f{Cd}}}{{Fn{Eh}}}}0{{{f{BCl}}{f{Gf}}}{{Ah{BCl}}}}{{{Fn{Eh}}}BCl}{{{f{BCl}}{f{{Dh{Bh}}}}}{{Ah{BCl}}}}0{{{f{BCl}}{f{{Dh{Bh}}}}{f{BDl}}d}{{Ah{BCl}}}}{{{f{BCl}}KbFj}BCl}{{{f{BCl}}}BCl}{{{f{BCl}}{f{Af}}}c{}}{{BCl{f{Af}}}c{}}{{{f{BCl}}{f{BCl}}}c{}}{{{f{BjBCl}}}{{f{BjBCl}}}}{{{f{BjBCl}}{f{Dl}}e}{{Ah{{f{BjBCl}}}}}BDn{{Oh{{f{Eh}}}{{Cb{c}}}}}}{{{f{BjBCl}}Fje}{{Ah{{f{BjBCl}}}}}BDn{{Oh{{f{Eh}}}{{Cb{c}}}}}}22{f{{f{c}}}{}}0000{{{f{Bj}}}{{f{Bjc}}}{}}0000{{{f{BCl}}}{{`{{Bf{}{{Bb{Fj}}}}}}}}9{{{f{BE`}}}BE`}{{{f{BEb}}}BEb};{{f{f{Bjc}}}b{}}00{fb}00`{{{f{BCl}}{f{Dl}}}{{Ah{{f{Eh}}}}}}{{{f{BCl}}e}{{Ah{{Fn{{f{Eh}}}}}}}{{Kj{Dl}}}{{Hd{}{{Bb{c}}}}}}{{}BEb}{{}BCl}{Fj{{f{c}}}{}}0000{Fj{{f{Bjc}}}{}}0000{{BCl{f{Af}}}c{}}{{{f{BCl}}{f{BCl}}}c{}}{{{f{BCl}}{f{Af}}}c{}}{Fjb}0000{{{f{BCl}}{f{Dl}}}{{Ah{BCl}}}}{{{f{BjBCl}}{f{Dl}}}{{Ah{Eh}}}}{{{f{BCl}}e}BCl{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCl}}{f{{BEd{Bh}}}}}BCl}{{{f{BCl}}{B`{{f{{Dh{c}}}}}}}{{Ah{BCl}}}{}}{{{f{BCl}}}{{Fn{Dn}}}}<{{{f{BEf}}}BCl}{{{f{BDl}}}BCl}{{{f{BEb}}{f{BEb}}}d}{{{f{BCl}}{f{BCl}}}d}00{{f{f{c}}}d{}}00{{{f{BCl}}}Fj}`{{{f{BCl}}e}{{Ah{BCl}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCl}}{Fn{Eh}}}{{Ah{BCl}}}}{{{f{BjBCl}}{f{BCl}}}{{Ah{b}}}}{{{f{BCl}}}{{Fn{Mj}}}}{{{f{BCl}}AG`}{{Ah{BCl}}}}{{{f{BCl}}{f{Gf}}}{{Ah{BCl}}}}{{{f{BE`}}{f{BjGl}}}Gn}{{{f{BEb}}{f{BjGl}}}Gn}{{{f{BCl}}{f{BjGl}}}Gn}0{cc{}}0000{cBCl{{Hd{}{{Bb{Af}}}}}}{cBCl{{Hd{}{{Bb{Eh}}}}}}{{{f{{Dh{BEh}}}}}{{Ah{BCl}}}}{{{f{{Dh{BEh}}}}{f{BDl}}}{{Ah{BCl}}}}{{c{f{BDl}}}{{Ah{BCl}}}{{Bf{}{{Bb{{f{BEh}}}}}}}}{{{f{BCl}}Fj}{{B`{{Fn{Hn}}}}}}{{{f{BCl}}{f{Dl}}}{{B`{Fj}}}}{{{f{BCl}}}{{Fn{{f{Bh}}}}}}{{{f{BCl}}}{{Fn{Bh}}}}{{{f{BCl}}}{{Fn{{f{Dl}}}}}}{{{f{BCl}}}{{f{{Dh{Eh}}}}}}{{{f{BjBCl}}}{{f{Bj{Fn{Eh}}}}}}{{{f{BCl}}Fj}{{Ah{BEh}}}}{{{f{BCl}}Fj{f{BjBEh}}}{{Ah{b}}}}{{{f{BCl}}Fj{f{BjBEh}}}b}{{{f{BCl}}}{{B`{{Ah{Dn}}}}}}`{{{f{BCl}}e}{{Ah{BEj}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}0{{{f{BCl}}{Fn{Eh}}dd}{{Ah{BEj}}}}{{{f{BEb}}{f{Bjc}}}bABf}{{{f{BjBCl}}{B`{Nh}}}{{Ah{BBd}}}}{{{f{BCl}}{B`{Fj}}}BCl}{{{f{BCl}}}Fj}{{{f{BCl}}{f{{Dh{Eh}}}}}{{Ah{BCl}}}}{{{f{BjBCl}}{f{{Dh{Eh}}}}}{{Ah{{f{BjBCl}}}}}}{{{f{BjBCl}}{f{{Dh{Eh}}}}}{{f{BjBCl}}}}{{{f{BCl}}{BEl{Fj}}}{{f{c}}}{}}{{{f{BCl}}Fj}{{f{c}}}{}}{{{f{BCl}}{BEn{Fj}}}{{f{c}}}{}}{{{f{BCl}}{BF`{Fj}}}{{f{c}}}{}}{{{f{BCl}}{Ll{Fj}}}{{f{c}}}{}}{{{f{BCl}}BFb}{{f{c}}}{}}{{{f{BCl}}{f{Dl}}}{{f{c}}}{}}{{{f{BCl}}{BFd{Fj}}}{{f{c}}}{}}{{}Fj}0000{{{f{BjBCl}}Fjc}{{Ah{{f{BjBCl}}}}}BDn}{{}c{}}000000{{{f{BCl}}}{{Ah{Gf}}}}{{{f{BCl}}}d}1{{{f{BCl}}}{{`{{Jj{}{{Bb{{f{Af}}}}}}}}}}{{{f{BCl}}}{{`{{Bf{}{{Bb{BCl}}}}}}}}{{{f{BCl}}AMnd}BFf}{{{f{BCl}}}BFh}{{{f{BCl}}}Fj}4{{{f{BCl}}}{{Ah{{B`{Eh}}}}}}{{{f{BCl}}BE`}{{Ah{{B`{Af}}}}}}1{{{f{BCl}}{f{Af}}}c{}}{{{f{BCl}}{f{BCl}}}c{}}{{BCl{f{Af}}}c{}}55{{{Fn{Eh}}}{{Ah{BCl}}}}{{{Fn{Eh}}}BCl}111{{{f{BjBFf}}}{{B`{c}}}{}}{{{f{BjBFh}}}{{B`{c}}}{}}{{{f{BCl}}}BCl}{{{f{BCl}}}{{`{{Ml{}{{Bb{{f{Af}}}}}}}}}}{{{f{BCl}}ed}{{Ah{{Fn{BCl}}}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}0{{BCle}{{Ah{c}}}{}{{Cd{BCl}{{Cb{{Ah{c}}}}}}}}{{{f{BjBCl}}e}{{Ah{c}}}{}{{Cd{{f{BjBCl}}}{{Cb{{Ah{c}}}}}}}}{{BClgc}{{Ah{e}}}{}{}{{Cd{BClc}{{Cb{{Ah{e}}}}}}}}{{{f{BjBCl}}}{{B`{Eh}}}}{{{f{BCl}}{f{BCl}}}d}><={{{f{BjBCl}}{f{Dl}}Bh}{{Ah{{f{BjBCl}}}}}}{{{f{BjBCl}}{f{Dl}}c}{{Ah{{f{BjBCl}}}}}BFj}{{{f{BjBCl}}Fjc}{{Ah{{f{BjBCl}}}}}BDn}{{{f{BjBCl}}Bhc}{{Ah{{f{BjBCl}}}}}BFj};`{{{f{BCl}}{f{Af}}dd{B`{Il}}}{{Ah{BCl}}}}0{{{f{BCl}}Fjdd{B`{Il}}}{{Ah{BCl}}}}{{{f{BCl}}}BDl}{{{f{BCl}}{f{BCl}}}{{Ah{b}}}}{{{f{BCl}}e}{{Ah{BCl}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCl}}Fj}{{B`{{f{Eh}}}}}}{{{f{BCl}}c}{{Ah{BCl}}}{{BFl{Fj}}}}{{{f{BCl}}c}{{Ah{{Fn{Eh}}}}}{{BFn{Bh}}}}3{{{f{BCl}}e{f{BG`}}}{{Ah{BCl}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCl}}e{f{BDl}}}{{Ah{BCl}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BjBCl}}e}{{Ah{b}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCl}}}{{Hh{FjFj}}}}{{{f{BCl}}Kb}BCl}{{{f{BCl}}}d}{{{f{BjBCl}}}b}{{{f{BCl}}}Fj}{{{f{BFf}}}{{Hh{Fj{B`{Fj}}}}}}{{{f{BFh}}}{{Hh{Fj{B`{Fj}}}}}}{{{f{BCl}}KbFj}BCl}00{{{f{BCl}}cEj}{{Ah{BCl}}}{{BFn{Bh}}}}{{{f{BjBCl}}cEj}{{Ah{{f{BjBCl}}}}}{{BFn{Bh}}}}{{{f{BCl}}Kb}{{Hh{BClBCl}}}}0{{{f{BjBCl}}}{{`{{Bf{}{{Bb{BCl}}}}}}}}{{BClFjd}{{Fn{BCl}}}}{{BCl{f{Af}}}c{}}{{{f{BCl}}{f{BCl}}}c{}}{{{f{BCl}}{f{Af}}}c{}}{{{f{BCl}}BE`}{{Ah{{B`{Af}}}}}}{{{f{BCl}}{B`{Fj}}}BCl}{{{f{BCl}}{f{Ef}}}{{Ah{BCl}}}}{BCl{{Fn{Eh}}}}{{{f{BCl}}{f{Ef}}}BCl}{{{f{BCl}}{f{Ef}}d}BCl}{{{f{BCl}}BGb}{{Ah{Nn}}}}{fc{}}00{fDb}{{{f{BjBCl}}{B`{{f{Dl}}}}{B`{{O`{Db{Fn{Db}}}}}}}{{Ah{BCl}}}}{{{f{BjBCl}}{B`{{f{Dl}}}}{B`{{O`{Bh{Fn{Bh}}}}}}}{{Ah{BCl}}}}{{{f{BjBCl}}{f{Dl}}e}{{Ah{{f{BjBCl}}}}}BDn{{Oh{{f{Af}}}{{Cb{{Ah{c}}}}}}}}{{{f{BjBCl}}Fje}{{Ah{{f{BjBCl}}}}}BDn{{Oh{{f{Eh}}}{{Cb{{Ah{c}}}}}}}}{c{{Ob{e}}}{}{}}000{{{Hh{BGd{f{BEf}}}}}{{Ah{BCl}}}}{BGf{{Ah{BCl}}}}2{{c{f{BDl}}}{{Ah{BCl}}}{{Bf{}{{Bb{{Ah{{f{BEh}}}}}}}}}}{{{f{BCl}}{f{Dl}}}{{Ah{Fj}}}}{{}{{Ob{c}}}{}}0000{f{{Ob{G`BAn}}}}{fOd}0000{{{f{BCl}}{B`{{f{{Dh{Db}}}}}}BEb{B`{{Hh{KbFj}}}}}{{Ah{BCl}}}}{{{f{BCl}}d{B`{{Fn{Bh}}}}BEb{B`{{Hh{KbFj}}}}}{{Ah{BCl}}}}1{{{f{BCl}}{f{BCl}}}{{Ah{BCl}}}}{{{f{BjBCl}}{f{BCl}}}{{Ah{{f{BjBCl}}}}}}{{{f{BjBCl}}{f{BCl}}}b}{{}c{}}0000{{{f{BCl}}}Fj}{{{f{BjBCl}}c}{{Ah{{f{BjBCl}}}}}BDn}{{{f{BjBCl}}c{f{BDl}}}{{Ah{{f{BjBCl}}}}}BDn}{{{f{BjBCl}}Eh}{{f{BjBCl}}}}{{{f{BCl}}Bh{B`{I`}}}{{Ah{BCl}}}}{{{f{BjBCl}}Bh{B`{I`}}}{{f{BjBCl}}}}`````{{fh}b}0{{Ehc}e{AbKn}{}}{{{f{Eh}}c}e{AbKn}{}}{{{f{Eh}}{f{Eh}}}c{}}{{EhEh}c{}}{{{f{Eh}}{f{Al}}}Eh}0000000{{{f{Eh}}{f{Al}}nN`}Eh}1{{{f{Eh}}{f{Al}}Df}Eh}{{{f{BjEh}}{f{Eh}}}{{Ah{{f{BjEh}}}}}}{{{f{Eh}}Ed}Ef}{{{f{BGh}}}{{f{Af}}}}{{{f{Eh}}}{{f{Af}}}}{{{f{Eh}}}{{B`{{f{BGh}}}}}}{{{f{Eh}}}{{B`{{f{Af}}}}}}{{{f{BGh}}}Af}{{{f{Eh}}}{{Ah{{f{El}}}}}}{{{f{Eh}}}{{Ah{{f{AKf}}}}}}{{{f{Eh}}}{{B`{BGj}}}}>{{{f{Eh}}{f{Eh}}}{{Ah{Eh}}}}>>??>{{{f{Eh}}}{{Ah{{f{Gf}}}}}}{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{{f{BGh}}{f{Dn}}}{{Ah{BGh}}}}{{{f{Eh}}{f{Dn}}}{{Ah{Eh}}}}10{{{f{BGh}}{f{Dn}}Fd}{{Ah{BGh}}}}{{{f{Eh}}{f{Dn}}Fd}{{Ah{Eh}}}}{{{f{Eh}}}{{Ah{{f{AMb}}}}}}{{{f{Eh}}}Eh}{{{f{BGh}}}BGh}1{{f{f{Bjc}}}b{}}0{fb}0{{{f{Eh}}}{{Ah{{f{Jd}}}}}}{{}Eh}{Fj{{f{c}}}{}}0{Fj{{f{Bjc}}}{}}0{{EhEh}c{}}{{{f{Eh}}c}e{AbKn}{}}{{Ehc}e{AbKn}{}}{{{f{Eh}}{f{Eh}}}c{}}{{{f{Eh}}{f{Eh}}}{{Ah{Eh}}}}{Fjb}0={{{f{BGh}}}{{f{Dn}}}}{{{f{Eh}}}{{f{Dn}}}}{{{f{Eh}}{f{Eh}}}d}{{{f{Eh}}{f{Eh}}}{{Ah{Gf}}}}011{{{f{Eh}}}{{Ah{Eh}}}}{{{f{BjEh}}{f{Eh}}}{{Ah{{f{BjEh}}}}}}{{{f{Eh}}HnFj}{{Ah{Eh}}}}{{{f{Eh}}}{{Ah{{f{AKn}}}}}}{{{f{Eh}}}{{Ah{{f{AL`}}}}}}{{{f{Eh}}}{{AKl{Mj}}}}{{{f{Eh}}AG`}{{Ah{Eh}}}}{{{f{Eh}}{f{{l{An}}}}}{{Ah{Eh}}}}{{{f{BGh}}{f{BjGl}}}Gn}{{{f{Eh}}{f{BjGl}}}Gn}{cc{}}{BGhEh}1{AfEh}{{AfFj}BGh}{{BhFj{f{Dn}}}Eh}{{{f{Eh}}FjFj}Eh}{{{f{Eh}}Fj}{{Ah{Hn}}}}{{{f{Eh}}}Fj}{{{f{Eh}}}Ib}{{{f{Eh}}}{{B`{{Fb{F`}}}}}}{{{f{Eh}}Fj}{{B`{{f{If}}}}}}{{{f{Eh}}Fj}Hn}{{{f{Eh}}{f{Eh}}}{{Ah{Gf}}}}0{{{f{BGh}}}d}{{{f{Eh}}}d}{{{f{Eh}}{B`{Fj}}}Eh}{{{f{Eh}}}{{Ah{{f{BBh}}}}}}{{{f{Eh}}}{{Ah{{f{BBj}}}}}}{{{f{Eh}}}{{Ah{{f{BBl}}}}}}{{{f{Eh}}}{{Ah{{f{BBf}}}}}}{{{f{Eh}}}{{Ah{{f{Ef}}}}}}{{}Fj}0{{}c{}}0{BDnEh}{BGhEh}{EhEh}{EhBCl}{{{f{BjEh}}}{{f{BjAf}}}}>={{{f{Eh}}}{{Ah{Gf}}}}000{{{f{Eh}}}Gf}0{{{f{Eh}}}Jn}{{{f{BGh}}}{{B`{{f{Af}}}}}}{{{f{BGh}}}Fj}{{{f{Eh}}}Fj}{{{f{Eh}}}{{Ah{{f{E`}}}}}}{{{f{Eh}}{f{Eh}}}{{Ah{Gf}}}}0{{{f{Eh}}}{{Ah{L`}}}}0{{EhEh}c{}}{{{f{Eh}}{f{Eh}}}c{}}{{{f{Eh}}c}e{AbKn}{}}{{Ehc}e{AbKn}{}}{{{f{BGh}}}{{f{Bh}}}}{{{f{Eh}}}{{f{Bh}}}}{{BhL`Fj}BGh}{{Bhc}Eh{}}{{BhDn}BGh}{{Bh{f{Dn}}}Eh}{{{f{Eh}}FjFj}Eh}{{BhL`Fj}Eh}==?{{{f{Eh}}}BGl}={{{f{Eh}}}Eh}=<:;{{{f{BjBGh}}Bh}{{f{BjBGh}}}}{{{f{BjEh}}Bh}b}{{{f{Eh}}{f{{Dh{ANb}}}}}{{Ah{Eh}}}}{{{f{BGh}}Fj}BGh}4{{{f{Eh}}ndd{B`{Il}}}{{Ah{Eh}}}}{{{f{Eh}}Fjdd{B`{Il}}}{{Ah{Eh}}}}{{{f{BGh}}}{{f{L`}}}}{{{f{BjEh}}Jn}b}{{{f{Eh}}Kb}Eh}{{{f{BjEh}}}b}{{{f{Eh}}{B`{Il}}}Eh}{{{f{Eh}}KbFj}Eh}{{{f{Eh}}Ed}{{Ah{Eh}}}}{{{f{Eh}}Kb}{{Hh{EhEh}}}}{{{f{Eh}}}{{Ah{{f{D`}}}}}}{{{f{BGh}}{f{Dn}}}{{Ah{BGh}}}}{{{f{Eh}}{f{Dn}}}{{Ah{Eh}}}}{{{f{Eh}}{f{Eh}}}c{}}{{{f{Eh}}c}e{AbKn}{}}{{Ehc}e{AbKn}{}}{{EhEh}c{}}{{{f{Eh}}{B`{Fj}}}Eh}{{{f{Eh}}{f{Ef}}}{{Ah{Eh}}}}{BGhAf}{EhAf}{{{f{Eh}}{f{{Dh{I`}}}}}{{Ah{Eh}}}}{{{f{Eh}}{f{{Dh{I`}}}}}Eh}{{{f{Eh}}{f{Ef}}}Eh}{fc{}}0{{{f{Eh}}}Eh}{{{f{BGh}}}Af}{{{f{Eh}}}{{B`{{f{El}}}}}}{{{f{Eh}}}{{B`{{f{AKf}}}}}}{{{f{Eh}}}{{B`{{f{Gf}}}}}}{{{f{Eh}}}{{B`{{f{AMb}}}}}}{{{f{Eh}}}{{B`{{f{Jd}}}}}}{{{f{Eh}}}{{B`{{f{AKn}}}}}}{{{f{Eh}}}{{B`{{f{AL`}}}}}}{c{{Ob{e}}}{}{}}0{{{f{Eh}}}{{B`{{f{BBh}}}}}}{{{f{Eh}}}{{B`{{f{BBj}}}}}}{{{f{Eh}}}{{B`{{f{BBl}}}}}}{{{f{Eh}}}{{B`{{f{BBf}}}}}}{{{f{Eh}}}{{B`{{f{Ef}}}}}}{{}{{Ob{c}}}{}}0{{{f{Eh}}}{{B`{{f{E`}}}}}}{{{f{Eh}}}{{B`{{f{D`}}}}}}{{{f{Eh}}}{{B`{{f{BBb}}}}}}{{{f{Eh}}}{{B`{{f{B@d}}}}}}{{{f{Eh}}}{{B`{{f{BBd}}}}}}{{{f{Eh}}}{{B`{{f{BB`}}}}}}{fOd}0{{{f{Eh}}}{{Ah{{f{BBb}}}}}}{{{f{Eh}}}{{Ah{{f{B@d}}}}}}{{{f{Eh}}}{{Ah{{f{BBd}}}}}}{{{f{Eh}}}{{Ah{{f{BB`}}}}}}{{{f{Eh}}}{{Ah{Eh}}}}0{AfBGh}{{{f{Eh}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{Eh}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{}c{}}0{{EhBh}Eh}{{{f{Eh}}c}Eh{AbKn}}{{{f{Eh}}{f{Gf}}{f{Eh}}}{{Ah{Eh}}}}{{{f{Eh}}{f{{l{An}}}}{f{Eh}}}{{Ah{Eh}}}}`{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{BGn}}}BGn}{{f{f{Bjc}}}b{}}{fb}{{}BGn}{Fj{{f{c}}}{}}{Fj{{f{Bjc}}}{}}{Fjb}{{{f{BGn}}{f{BGn}}}d}{{f{f{c}}}d{}}00{{{f{BGn}}{f{BjGl}}}Gn}{cc{}}{{{f{BGn}}{f{Bjc}}}bABf}`{{}Fj}{{}c{}}`{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}``4````````````````````````````````{{fh}b}000{{{f{BEj}}}{{Ah{BCl}}}}`{{{f{BH`}}}{{f{{Dh{BHb}}}}}}{{{f{BEj}}c}{{Ah{BCl}}}{{Cj{BCl}{{Cb{{Ah{BCl}}}}}}JfJh}}{{{f{Al}}}E`}{f{{f{c}}}{}}0000000{{{f{Bj}}}{{f{Bjc}}}{}}0000000{{{f{BH`}}}BH`}{{{f{Al}}}Al}{{{f{BEj}}}BEj}{{{f{BHd}}}BHd}{{f{f{Bjc}}}b{}}000{fb}000;{{}BH`}{{}Al}{Fj{{f{c}}}{}}000{{{f{BHf}}}{{f{c}}}{}}1111{Fj{{f{Bjc}}}{}}0000000`{{BHhe}{}{}{{BHj{c}}}}{Fjb}0000{{{f{BjBH`}}}b}111{{{f{BH`}}{f{BH`}}}d}{{{f{Al}}{f{Al}}}d}{{f{f{c}}}d{}}00000`{{{f{BHl}}}I`}{{{f{BH`}}}{{f{{Dh{I`}}}}}}{{{f{BEj}}}{{Ah{BCl}}}}{{{f{BjBH`}}}{{f{Bj{Fn{I`}}}}}}{{{f{BH`}}{f{BjGl}}}Gn}{{{f{Al}}{f{BjGl}}}Gn}{{{f{BEj}}{f{BjGl}}}Gn}{{{f{BHd}}{f{BjGl}}}Gn}0{{{f{Dl}}BHd}Bh}{cc{}}000{{{Fn{{Fn{BHn}}}}}BH`}{{{Fn{BHn}}}BH`}2{{{Fn{{Hh{{Fn{I`}}{Fn{BHb}}}}}}}BH`}{BH`Al}444{cBH`{{Hd{}{{Bb{BHn}}}}}}{cBH`{{Hj{}{{Bb{BHn}}}}}}{{{f{Al}}Fj}BHl}{{{f{BEj}}}{{f{Al}}}}{{{f{BjBEj}}}{{f{BjAl}}}}{{{f{Al}}}Ef}{{{f{BI`}}dd}{{Ah{Al}}}}0{{{f{BEj}}}{{Ah{BCl}}}}{{{f{BjAl}}}{{f{BjBH`}}}}{{}Fj}0000000{{}c{}}0000000{AlBH`}1{{{f{BH`}}}c{}}{BH`c{}}310{{{f{BHl}}}d}{{{f{Al}}}d}{{{f{BH`}}}d}{{{f{BH`}}}{{BId{{BIb{{Kd{I`}}}}{Kd{BHb}}}}}}{{{f{Al}}}BIf}{{{f{BEj}}}{{Fn{Eh}}}}{{{f{BEj}}{B`{{Hh{KbFj}}}}}{{Fn{Eh}}}}={{{f{BHl}}}Fj}{{{f{Al}}}Fj}?????{{{Fn{I`}}{Fn{BHb}}d}BH`}{{{f{BCl}}{Fn{Eh}}Al{B`{{Fn{Bh}}}}}BEj}{{{f{BjBIf}}}{{B`{c}}}{}}{{{f{BjBIf}}Fj}{{B`{c}}}{}}{{{f{BEj}}c}{{Ah{BCl}}}{{Cd{BCl}{{Cb{{Ah{BCl}}}}}}JfJh}}{f}{{{f{Al}}}BHh}{{{f{BEj}}nN`}{{Ah{BCl}}}}{{BEje}BEj{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{Al}}KbFj}BHf}{{{f{BjBH`}}}b}{{{f{BjAl}}}b}{{{f{BEj}}Df}{{Ah{BCl}}}}{{{f{BEj}}}{{Ah{BCl}}}}{Al{{Fn{I`}}}}0{BEjAl}{{{f{BjBEj}}}Al}{fc{}}000{fDb}{c{{Ob{e}}}{}{}}0000000{{}{{Ob{c}}}{}}0000000{f{{Ob{G`BAn}}}}{fOd}0000000{AlAl}{{{f{Al}}}{{f{BH`}}}}{{{f{Al}}}{{f{BIh}}}}={{}c{}}0000000`````{{{f{BH`}}c}Af{{Cd{{Hh{I`{f{BHb}}}}}{{Cb{B`}}}}JfJh}}{{{f{BH`}}c}Af{{Cd{{Hh{I`{f{BHb}}}}}{{Cb{}}}}JfJh}}{{{f{{Dh{{BIj{I`}}}}}}c}Af{{Cd{{BIj{I`}}}{{Cb{B`}}}}JfJh}}{{{f{{Dh{{BIj{I`}}}}}}c}Af{{Cd{{BIj{I`}}}{{Cb{}}}}JfJh}}{{{f{{Dh{c}}}}e{B`{BIl}}}{{AJj{c}}}{BInBJ`}{{Bf{}{{Bb{{Hh{I`I`}}}}}}Hl}}{{{f{{Dh{c}}}}{f{Hf}}e{B`{BIl}}}{{AJj{c}}}{BInBJ`}{{Bf{}{{Bb{{Hh{I`I`}}}}}}Hl}}{{{f{{l{c}}}}I`I`}{{l{c}}}C`}{{{f{BIh}}{f{{Dh{Fl}}}}}d}{{{f{BJb}}{f{Al}}}Af}{{BJdBJd}BJd}0`{{{f{BJf}}{f{BCl}}{f{Al}}}{{Ah{Af}}}}{{{f{BJf}}}{{Ah{{f{Bh}}}}}}```````````````````````{{fh}b}00{{{f{BjBJh}}Hn}{{B`{b}}}}{{{f{BjBJj}}{f{Hn}}}b}0{f{{f{c}}}{}}00{{{f{Bj}}}{{f{Bjc}}}{}}00{{{f{BJh}}}BJh}{{{f{BJj}}}BJj}{{{f{BEh}}}BEh}{{f{f{Bjc}}}b{}}00{fb}00{{{f{{Dh{c}}}}}Dn{{BAb{Dn}}}}{{}BEh}{Fj{{f{c}}}{}}00{Fj{{f{Bjc}}}{}}00{Fjb}00{{{f{BEh}}{f{BEh}}}d}{{f{f{c}}}d{}}00{{{f{BEh}}{f{BjGl}}}Gn}{{{Hh{{f{Dn}}Fj}}}BJh}{cc{}}{{{Hh{{f{Dn}}Fj}}}BJj}11{{gFj}BDl{{B@j{Bh}}}{{B@j{Dn}}}{{Bf{}{{Bb{{Fn{{Hh{ce}}}}}}}}}}{{}Fj}00{{}c{}}00{BJhAf}{BJjAf}{{{f{Dn}}Fj}BJh}{{{f{Dn}}Fj}BJj}{{{Fn{Hn}}}BEh}{{{f{BjBJh}}Fj}Af}{{{f{BjBJj}}Fj}Af}{{{f{{Dh{BEh}}}}{B`{Fj}}}{{Ah{BDl}}}}0{{{f{{Dh{BEh}}}}{B`{Fj}}}{{Ah{{Fn{Dn}}}}}}{fc{}}00{c{{Ob{e}}}{}{}}00{{}{{Ob{c}}}{}}00{fOd}00==={{{f{{Dh{BCl}}}}}{{Ah{BCl}}}}{{{f{{Dh{BCl}}}}d}{{Ah{BCl}}}}`````{{IlIl}Il}{{{f{{Dh{BCl}}}}{B`{Nh}}}{{Ah{{Hh{{Fn{BBd}}Nh}}}}}}{{{f{{AKd{Kb}}}}Nh{f{Bj{Fn{Il}}}}}b}{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{}BJl}{Fj{{f{c}}}{}}0{Fj{{f{Bjc}}}{}}0{Fjb}0{{{f{BJl}}}Il}{{{f{BJn}}{f{BjGl}}}Gn}{cc{}}0{{{f{BJn}}{f{Bjc}}}bABf}``{{}Fj}0{{}c{}}0{{{f{Bj{BK`{BJnce}}}}I`Il{f{BCl}}gi}b{}BKb{{Cd{}{{Cb{c}}}}}{{Cj{{f{Bjc}}}}}}{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{fOd}0{{{f{BKd}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}0{{{f{BKd}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}066{{{f{BjBJl}}{f{{Dh{Df}}}}}b}{{{f{BjBJl}}Mf}b}{{{f{BjBJl}}Kb}b}{{{f{BjBJl}}Lj}b}{{{f{BjBJl}}Il}b}````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}00000000000{{{f{{Lf{ce}}}}}{{f{e}}}NdBKf}{{{f{{Lf{c}}}}}BKh{BKjNd}}{{{f{{Lf{ce}}}}}{}NdBKf}{{{f{{Lf{c}}}}}MfBKl}{{{f{Bh}}}{{f{BKn}}}}{{{f{Bh}}}{{f{{Dh{Df}}}}}}{{{f{Bh}}}{{f{BL`}}}}{{{f{Bh}}}{{f{Dl}}}}{{{f{{Lf{ce}}}}}{{f{c}}}NdBKf}1{{{Lf{{BLb{c}}e}}}{{Lf{ce}}}{}BKf}{{{Lf{{Dh{{BLb{c}}}}e}}}{{Lf{{Dh{c}}e}}}{}BKf}{f{{f{c}}}{}}400030000000000{{{f{Bj}}}{{f{Bjc}}}{}}0000000000000{{{f{AMb}}{f{AMb}}c}{{Ah{AMb}}}AMd}{{{f{{Lf{c}}}}}{{B`{{f{AJf}}}}}{AJfNd}}`{{{f{BLd}}{f{Af}}}{{Ah{Af}}}}{{{f{BLd}}c}{{Ah{Af}}}Ad}{{{f{Bh}}}Bh}{{{f{Of}}}Of}{{{f{BLf}}}BLf}{{{f{{Lf{ce}}}}}{{Lf{ce}}}Nd{BKfA@n}}{{{f{Nb}}}Nb}{{{f{BGb}}}BGb}{{{f{B@l}}}B@l}{{{f{N`}}}N`}{{{f{BIl}}}BIl}{{{f{BLh}}}BLh}{{{f{BLj}}}BLj}{{{f{BLl}}}BLl}{{f{f{Bjc}}}b{}}00000000000{fb}00000000000{{{f{Bh}}{f{Bh}}}AOn}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}AOn{BLnNd}BKf}{B@`e{}{{ALb{c}}AJb}}0{{B@`ADj}e{}{{ALd{c}}AJb}}0{{f{f{c}}}AOn{}}0{{AKjBDb}AKj}{AKjAKj}{{{f{H`}}{f{ADj}}}{{Fb{H`}}}}``{{}b}{cbBKf}{{}Bh}{{}{{Lf{BM`}}}}{{}{{Lf{c}}}BMb}{{}{{Lf{Dl}}}}{{}{{Lf{{Dh{c}}}}}{}}{{}Nb}{{}BGb}{{}B@l}{{}N`}`{Fj{{f{c}}}{}}0{{{f{Bh}}}f}111{{{f{{Lf{ce}}}}}{{f{c}}}NdBKf}222222222{Fj{{f{Bjc}}}{}}0000000000000{{{f{{Lf{c}}}}}{{f{Dl}}}{AJfNd}}`{{{Lf{ADlc}}}{{Ob{{Lf{ec}}{Lf{ADlc}}}}}BKf{ADlJfJh}}{{{Lf{ADlc}}}{{Lf{ec}}}BKf{ADlJfJh}}{{{f{{Lf{ce}}}}}{{BMd{ce}}}Nd{A@nBKf}}{Fjb}0000{{{f{Bj{Lf{ce}}}}}bNdBKf}111111111{{{f{B@l}}}{{f{ADj}}}}`{{{f{Bh}}{f{c}}}d{{Kj{Dl}}Nd}}{{{f{Of}}{f{Of}}}d}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}d{BMfNd}BKf}{{{f{{Lf{H`}}}}{f{H`}}}d}{{{f{{Lf{BMh}}}}{f{BMh}}}d}{{{f{Nb}}{f{Nb}}}d}{{{f{BGb}}{f{BGb}}}d}{{{f{B@l}}{f{B@l}}}d}{{{f{N`}}{f{N`}}}d}{{{f{BIl}}{f{BIl}}}d}{{{f{BLh}}{f{BLh}}}d}{{{f{BLj}}{f{BLj}}}d}{{{f{BLl}}{f{BLl}}}d}{{f{f{c}}}d{}}00000000000000000000{BLf{{Hh{LjLj}}}}{{AMd{f{B@d}}{f{B@d}}}{{Ah{B@d}}}}{{{f{Bj{Lf{AD`}}}}}{{Ob{bBMj}}}}{{{f{AKj}}{f{BjGl}}}{{Ob{bB@f}}}}0{{{f{Bh}}{f{BjGl}}}{{Ob{bB@f}}}}0{{{f{Of}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BLf}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{{Lf{ce}}}}{f{BjGl}}}{{Ob{bB@f}}}{ADnNd}BKf}{{{f{{Lf{ce}}}}{f{BjGl}}}{{Ob{bB@f}}}{BDfNd}BKf}{{{f{{Lf{ce}}}}{f{BjGl}}}{{Ob{bB@f}}}NdBKf}{{{f{Nb}}{f{BjGl}}}Gn}{{{f{BGb}}{f{BjGl}}}Gn}{{{f{B@l}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{N`}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BIl}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BLh}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BLj}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BLl}}{f{BjGl}}}{{Ob{bB@f}}}}`{BMlAKj}{cc{}}{BMnAKj}{BMjAKj}{BN`AKj}{{{f{Db}}}Bh}{G`Bh}{DbBh}6{{{f{Dl}}}Bh}7{LjOf}8{Db{{Lf{Dl}}}}{BNb{{Lf{BM`}}}}{G`{{Lf{Dl}}}}{{{Fn{ce}}}{{Lf{{Dh{c}}e}}}{}{BKfA@n}}{{{f{Dl}}}{{Lf{Dl}}}}{{{AKl{c}}}{{Lf{c}}}{BNdNd}}{{{f{{Dh{c}}}}}{{Lf{{Dh{c}}}}}A@n}{{{BIj{c}}}{{Lf{{Dh{c}}}}}{}}{BNf{{Lf{BKn}}}}{{{f{BKn}}}{{Lf{BKn}}}}{BNh{{Lf{BL`}}}}{{{f{BL`}}}{{Lf{BL`}}}}{{{Lf{Dl}}}{{Lf{{Dh{Df}}}}}}{c{{Lf{c}}}{}}{BNjc{}}{{{f{BM`}}}{{Lf{BM`}}}}{cc{}}{{{Fb{ce}}}{{Lf{ce}}}NdBKf}111111111{{c{B`{Hf}}}BNl{}}{{{BNn{Kb}}{BNn{Df}}{B`{Hf}}}BO`}{{{BNn{Kb}}{BNn{Df}}{B`{Hf}}}BOb}{cBh{{Hd{}{{Bb{Db}}}}}}{cBh{{Hd{}{{Bb{Bh}}}}}}{cBh{{Hd{}{{Bb{{Fb{Dl}}}}}}}}{cBh{{Hd{}{{Bb{{f{Bh}}}}}}}}{cBh{{Hd{}{{Bb{BDj}}}}}}{cBh{{Hd{}{{Bb{{f{BDj}}}}}}}}{cBh{{Hd{}{{Bb{{f{Dl}}}}}}}}{cBh{{Hd{}{{Bb{{AKl{Dl}}}}}}}}{e{{Lf{{Dh{c}}}}}{}{{Hd{}{{Bb{c}}}}}}{{gFj}{{BOd{Kb}}}Kj{{Hd{}{{Bb{{B`{c}}}}}}}{{Hd{}{{Bb{{B`{e}}}}}}}}0{e{{BOd{Kb}}}{{Hd{}{{Bb{{B`{d}}}}}}}{{Hd{}{{Bb{{B`{c}}}}}}}}{{gADj}{{BOd{Kb}}}BJ`{{Hd{}{{Bb{{B`{c}}}}}}}{{Hd{}{{Bb{{B`{e}}}}}}}}2{e{{Lf{{Dh{c}}}}}Jf{{Hj{}{{Bb{c}}}}}}{{}{{Lf{c}}}Nd}{c{{Lf{ec}}}BKfNd}{{{f{Dl}}}Bh}0{{{f{Dl}}}{{Ob{BOf}}}}{DbBh}{{Bhc}BOh{}}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}d{BOjNd}BKf}{{{f{Bj{Lf{ce}}}}}{{B`{{f{Bjc}}}}}NdBKf}{{{f{Bj{Lf{ce}}}}}{{f{Bjc}}}NdBKf}{{{f{Fl}}Fj}Hn}3{{{f{Bh}}{f{Bjc}}}bABf}{{{f{{Lf{ce}}}}{f{Bjg}}}b{BOlNd}BKfABf}{{{f{BGb}}{f{Bjc}}}bABf}{{{f{B@l}}{f{Bjc}}}bABf}{{{f{N`}}{f{Bjc}}}bABf}{{{f{BLl}}{f{Bjc}}}bABf}{{{f{Of}}}Lj}{{}b}{cb{A@nBKf}}{{{f{{Dh{Lj}}}}}{{`{{Bf{}{{Bb{Fj}}}}}}}}{{}Fj}0000000000000`{{{f{BjBLf}}}{{f{BjIl}}}}`{{}c{}}0000000000000{{}Eh}{{{Lf{ce}}}{{B`{c}}}{}BKf}{{{Lf{ce}}}{}NdBKf}{{{Lf{ce}}}{{Hh{e}}}NdBKf}{{{Lf{BOn}}}Af}{BhDb}{{{f{BLf}}}d}{{{f{Of}}}d}`{{{f{{Lf{AD`}}}}}d}{{{f{c}}}d{}}1{{{f{BEf}}}{{`{{Jj{}{{Bb{{Hh{{f{Bh}}{f{c}}}}}}}}}}}{}}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}d{BOjNd}BKf}`0{{{f{AMb}}{f{AMb}}}{{Ah{{Hh{AMbAMb}}}}}}{{E`E`}{{Ah{{Hh{E`E`}}}}}}{{{f{Bj{Lf{ce}}}}}{{f{Bjc}}}{C@`Nd}{BKfA@n}}{{{f{C@b}}}L`}0{{{f{C@d}}}L`}``11`{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}d{BMfNd}BKf}{{C@fFj}{{B`{Fj}}}}{{Bhc}C@h{}}{c{{Lf{c}}}{}}{{BhADjd}B@l}{e{{Lf{c}}}{}{{Oh{{f{{BMd{c}}}}}{{Cb{c}}}}}}{{ge}{{Lf{ce}}}{}BKf{{Oh{{f{{BMd{ce}}}}}{{Cb{c}}}}}}{{ce}{{Lf{ce}}}{}BKf}{{}{{Lf{{BLb{c}}}}}{}}{c{{Lf{{BLb{e}}c}}}BKf{}}{Fj{{Lf{{Dh{{BLb{c}}}}}}}{}}{{Fjc}{{Lf{{Dh{{BLb{e}}}}c}}}BKf{}}3210`{{}Of}{{}BLf}{{{f{Bh}}{f{Bh}}}{{B`{AOn}}}}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}{{B`{AOn}}}{BOjNd}BKf}{c{{C@j{{Lf{c}}}}}{}}{{ce}{{C@j{{Lf{ce}}}}}{}BKf}`````{{{f{C@b}}}L`}0{{{f{{Lf{c}}}}{f{BjC@l}}}b{AJfNd}}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}dNdBKf}{{{f{C@d}}nN`}{{Ah{L`}}}}{{{f{Bj{Lf{AD`}}}}{f{Bj{Dh{Df}}}}}{{Ob{FjBMj}}}}{{{f{Bj{Lf{AD`}}}}C@n}{{Ob{bBMj}}}}{{{f{Bj{Lf{AD`}}}}{f{Bj{Fn{Df}}}}}{{Ob{FjBMj}}}}{{{f{Bj{Lf{AD`}}}}{f{BjDb}}}{{Ob{FjBMj}}}}{{{f{Bj{Lf{AD`}}}}{f{Bj{Dh{CA`}}}}}{{Ob{FjBMj}}}}`{{{f{Bj{Lf{AD`}}}}CAb}{{Ob{IlBMj}}}}`{{{f{AJn}}FjFj}AJn}0{{{f{{Lf{c}}}}}{{B`{{f{AJf}}}}}{AJfNd}}{{{f{CAd}}Df}L`}{{LjLj}BLf}`{{{f{{Lf{ce}}}}}FjNdBKf}>>{{{f{Of}}}{{B`{Lj}}}}{fc{}}00000000000{fDb}00{B@`{{Ob{eg}}}{}{{ALb{c}}AJb}{}}0{{B@`ADj}{{Ob{eg}}}{}{{ALd{c}}AJb}{}}0{c{{Ob{e}}}{}{}}0000{{{Lf{{Dh{c}}e}}}{{Ob{{Lf{{BIj{c}}e}}}}}{}BKf}111111111{{}{{Ob{c}}}{}}0000000000000{{C@fFj}{{Ob{FjAKj}}}}{c{{Ob{{Lf{c}}CAf}}}{}}{{ce}{{Ob{{Lf{ce}}CAf}}}{}BKf}{{}{{Ob{{Lf{{BLb{c}}}}CAf}}}{}}{c{{Ob{{Lf{{BLb{e}}c}}CAf}}}BKf{}}10{c{{Ob{{C@j{{Lf{c}}}}CAf}}}{}}{{ce}{{Ob{{C@j{{Lf{ce}}}}CAf}}}{}BKf}{f{{Ob{G`BAn}}}}00{{{Lf{ce}}}{{Ob{c{Lf{ce}}}}}{}BKf}{fOd}0000000000000{{{Lf{ce}}}cA@nBKf}`{{{f{CAd}}Df}L`}{{}c{}}0000000000000{{{f{{Lf{ce}}}}}FjNdBKf}``{{B@l{CAh{BhBh}}}B@l}{{{f{AKj}}c}AKj{{Oh{{f{Dl}}}{{Cb{Db}}}}}}{{{f{Bj{Lf{AD`}}}}{f{{Dh{Df}}}}}{{Ob{FjBMj}}}}{{{f{BjBh}}BDj}{{Ob{bB@f}}}}{{{f{BjBh}}CAj}{{Ob{bB@f}}}}{{{f{BjBh}}{f{Dl}}}{{Ob{bB@f}}}}{{{f{Bj{Lf{AD`}}}}{f{{Dh{CAl}}}}}{{Ob{FjBMj}}}}```````{{c{B`{Hf}}}BNl{}}{{{BNn{Kb}}{BNn{Df}}{B`{Hf}}}BO`}{{{BNn{Kb}}{BNn{Df}}{B`{Hf}}}BOb}`{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{Fj{{f{c}}}{}}{Fj{{f{Bjc}}}{}}{Fjb}{{CAn{B`{{f{ADj}}}}}{{Ob{{BOd{Kb}}AKj}}}}{cc{}}{{}Fj}{{}c{}}{{{f{CAn}}}d}{FjCAn}{{{f{CAn}}}{{f{{Dh{Kb}}}}}}{{{f{BjCAn}}{f{H`}}}b}{{{f{BjCAn}}}b}{{{f{BjCAn}}{f{{Dh{{Fb{H`}}}}}}}b}1{{{f{BjCAn}}{B`{{f{H`}}}}}b}{CAn{{CB`{Kb}}}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd};`{{fh}b}{{{f{CBb}}}{{f{ADl}}}}{{{f{BjCBb}}}{{Fb{H`}}}}{{{f{BjCBb}}}{{f{BjADl}}}}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{CBb}}}CBb}{{f{f{Bjc}}}b{}}{fb}{{}CBb}{Fj{{f{c}}}{}}{Fj{{f{Bjc}}}{}}{Fjb}{{{f{CBb}}}{{f{ADj}}}}{{{f{BjCBb}}Fj}b}{{{f{CBb}}{f{BjGl}}}{{Ob{bB@f}}}}{cc{}}{{}Fj}{{}c{}}{{{f{CBb}}}Fj}{FjCBb}{{{f{BjCBb}}}b}70{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{CBb}}}{{B`{{f{CBd}}}}}}8```````{{{f{AJn}}FjFj}AJn}0`{{}b}0{{}d}``{{eFjFj}{{CBf{Kb}}}{{Kj{Dl}}}{{Bf{}{{Bb{c}}}}}}{{eFjFj}{{AKd{Kb}}}{{Kj{{Dh{Df}}}}}{{Bf{}{{Bb{c}}}}}}{Ilb}`{{fh}b}{{{f{L`}}}Hn}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{L`}}}L`}{{f{f{Bjc}}}b{}}{fb}{Fj{{f{c}}}{}}{Fj{{f{Bjc}}}{}}{Fjb}{{{f{L`}}}{{f{Dn}}}}{{{f{L`}}{f{L`}}}d}{{{f{L`}}{f{BjGl}}}Gn}{CBhL`}{IjL`}{nL`}{LjL`}{cc{}}{CBjL`}{CBlL`}{DfL`}{KbL`}{MfL`}{IlL`}{{}Fj}{{}c{}}{{L`Bh}Eh}{{L`Bh}Af}{{{f{L`}}}d}0{{DnHn}L`}`{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{BjL`}}Hn}b}{{{f{L`}}}{{f{Hn}}}}:{{{B`{n}}Dn}L`}``````{{{f{{CBn{c}}}}{f{{CBn{c}}}}}{{Ah{b}}}{}}{{{f{BEh}}}BDl}{{{f{BEf}}}CC`}{{{f{BEf}}}BDl}{{{f{CC`}}{f{Dl}}}{{B`{Mj}}}}{{{f{BDl}}{f{Dl}}}{{B`{Mj}}}}{{{f{CC`}}}{{`{{Jj{}{{Bb{Mj}}}}}}}}{{{f{BDl}}}{{`{{Jj{}{{Bb{Mj}}}}}}}}{{{f{{CCd{}{{CCb{c}}}}}}}{{`{{Jj{}{{Bb{{Hh{{f{Bh}}{f{c}}}}}}}}}}}{ADnA@nBMbBMf}}{{{f{BDl}}}{{`{{Jj{}{{Bb{{Hh{{f{Bh}}{f{c}}}}}}}}}}}{}}{{{f{CC`}}AMn}BEf}{{{f{BDl}}AMn}BEf}{{{f{BjCC`}}{f{BDl}}}{{Ah{d}}}}{{{f{BjBDl}}{f{BDl}}}{{Ah{d}}}}{{{f{CC`}}{f{Dl}}}{{Ah{Mj}}}}{{{f{BDl}}{f{Dl}}}{{Ah{Mj}}}}`````````````````{{fh}b}0{{{f{BOn}}}n}0{{Bh{Fn{Fl}}{f{ADj}}}{{Ah{Af}}}}{{Bh{Fn{Fl}}{f{ADj}}{B`{{f{CCf}}}}}{{Ah{Af}}}}{{{f{Af}}c}e{AbKn}{}}{{Afc}e{AbKn}{}}{{AfAf}c{}}{{{f{Af}}{f{Af}}}c{}}`{{{f{BjAf}}{f{Af}}}{{Ah{{f{BjAf}}}}}}{{{f{BOn}}Ed}Ef}0{{{f{BOn}}}{{Ah{Ef}}}}0`{{{f{Af}}Fj}{{f{Fl}}}}{{{f{BOn}}}{{f{ADl}}}}{{{f{BjBOn}}}{{f{BjADl}}}}0{{{f{Af}}}E`}{{{f{BjBOn}}}{{f{Bj{l{c}}}}}C`}{{{f{BOn}}}{{f{{l{c}}}}}C`}{{{f{Af}}}{{f{BOn}}}}{{{f{BjBOn}}}{{Ah{Fj}}}}0{{{f{BjAf}}}{{Ah{Fj}}}}{{{f{Af}}}{{Ah{{f{El}}}}}}{{{f{Af}}}{{Ah{{f{AKf}}}}}}{{{f{BOn}}{f{Af}}}{{Ah{Af}}}}00000{{{f{Af}}}{{Ah{{f{Gf}}}}}}{f{{f{c}}}{}}000{{{f{Bj}}}{{f{Bjc}}}{}}000{{{f{BOn}}}{{B`{{Fb{F`}}}}}}0{{{f{BOn}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{Af}}{f{Dn}}}{{Ah{Af}}}}0{{{f{Af}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{Af}}}{{Ah{{f{AMb}}}}}}88{{{f{Af}}{f{Af}}}{{Ah{Af}}}}{{{f{Af}}c}{{Ah{Af}}}Ad}{{{f{BOn}}}Fh}{{{f{Af}}}{{`{{Bf{}{{Bb{Fj}}}}}}}}{{{f{BOn}}}{{f{{Fn{Fl}}}}}}{{{f{BjBOn}}}{{f{Bj{Fn{Fl}}}}}}{{{f{BjAf}}}{{f{Bj{Fn{Fl}}}}}}{{{f{Af}}}Af}{{{f{Jn}}}Jn}1{{{f{BOn}}}{{Lf{BOn}}}}{{f{f{Bjc}}}b{}}0{fb}0{{{f{BjAf}}}b}{{{f{Af}}}{{Ah{{f{Jd}}}}}}{{}Af}{Fj{{f{c}}}{}}00{{{f{Af}}}{{f{c}}}{}}1{Fj{{f{Bjc}}}{}}000{{Afc}e{AbKn}{}}{{{f{Af}}c}e{AbKn}{}}{{{f{Af}}{f{Af}}}c{}}{{AfAf}c{}}{{{f{Af}}{f{Af}}}{{Ah{n}}}}{Fjb}000{{{f{BOn}}}Af}0{{{f{BOn}}}{{f{Dn}}}}0{{{f{Jn}}{f{Jn}}}d}{{{f{Af}}{f{Af}}}d}{{{f{Af}}{f{Dl}}}{{Ah{Gf}}}}{{{f{Af}}c}eB@h{}}9{{{f{Af}}{f{Dl}}}c{}}:133{{f{f{c}}}d{}}00{{{f{Af}}}Fj}{{{f{Af}}}{{Ah{Af}}}}{{{f{BjAf}}{f{Af}}}{{Ah{{f{BjAf}}}}}}{{{f{Af}}HnFj}{{Ah{Af}}}}{{{f{Af}}}{{Ah{{f{AKn}}}}}}{{{f{Af}}}{{Ah{{f{AL`}}}}}}{{{f{BOn}}}{{AKl{Mj}}}}0{{{f{Af}}AG`}{{Ah{Af}}}}{{{f{BOn}}{f{Gf}}}{{Ah{Af}}}}{{{f{Jn}}{f{BjGl}}}Gn}{{{f{Af}}{f{BjGl}}}Gn}0{{{f{Af}}}Db}{cc{}}00{{{l{c}}}AfC`}1{{Bh{f{{Dh{Hn}}}}d}{{Ah{Af}}}}{{Bh{f{{Dh{Hn}}}}{f{Dn}}d}{{Ah{Af}}}}{{BhFl}{{Ah{Af}}}}{{Bh{Fn{Fl}}}{{Ah{Af}}}}{{Bh{Fn{Fl}}{f{Dn}}}Af}{cAf{{Hd{}{{Bb{{B`{Db}}}}}}}}{cAf{{Hd{}{{Bb{{B`{Il}}}}}}}}{cAf{{Hd{}{{Bb{Ij}}}}}}{cAf{{Hd{}{{Bb{{B`{{f{Dl}}}}}}}}}}{cAf{{Hd{}{{Bb{{B`{Ij}}}}}}}}{cAf{{Hd{}{{Bb{{f{Kb}}}}}}}}{cAf{{Hd{}{{Bb{{f{Dl}}}}}}}}{cAf{{Hd{}{{Bb{{f{Ij}}}}}}}}{cAf{{Hd{}{{Bb{Kb}}}}}}{cAf{{Hd{}{{Bb{{B`{Kb}}}}}}}}{cAf{{Hd{}{{Bb{{f{Mf}}}}}}}}{cAf{{Hd{}{{Bb{Mf}}}}}}{cAf{{Hd{}{{Bb{{B`{Mf}}}}}}}}{cAf{{Hd{}{{Bb{{B`{n}}}}}}}}{cAf{{Hd{}{{Bb{d}}}}}}{cAf{{Hd{}{{Bb{n}}}}}}{cAf{{Hd{}{{Bb{{f{n}}}}}}}}{cAf{{Hd{}{{Bb{{f{d}}}}}}}}{cAf{{Hd{}{{Bb{{f{Il}}}}}}}}{cAf{{Hd{}{{Bb{{B`{d}}}}}}}}{cAf{{Hd{}{{Bb{{B`{Lj}}}}}}}}{cAf{{Hd{}{{Bb{{f{Lj}}}}}}}}{cAf{{Hd{}{{Bb{Il}}}}}}{cAf{{Hd{}{{Bb{Db}}}}}}{cAf{{Hd{}{{Bb{Lj}}}}}}{{Bh{Fn{Mb}}}Af}{{Bh{Fn{Ij}}}Af}{{Bh{Fn{Kb}}}Af}{{Bh{Fn{Il}}}Af}{{Bh{Fn{Mf}}}Af}{{Bh{Fn{Lj}}}Af}{{Bh{Fn{n}}}Af}{{BhFj{f{Dn}}}Af}{{{f{Af}}FjFj}Af}{{{f{BOn}}Fj}{{Ah{Hn}}}}{{{f{Af}}}Fj}{{{f{Af}}}Ib}{{{f{Af}}}Af}{{{f{BOn}}}{{B`{{Lh{F`}}}}}}0{{{f{BOn}}Fj}{{B`{{f{If}}}}}}0{{{f{BOn}}FjFj}{{B`{{f{If}}}}}}0{{{f{BOn}}Fj}Hn}0{{{f{Af}}c}eB@h{}}{{{f{Af}}{f{Dl}}}c{}}{{{f{Af}}{f{Af}}}c{}}210{{{f{BOn}}}d}{{{f{Jn}}{f{Bjc}}}bABf}{{{f{Af}}{B`{Fj}}}Af}{{{f{Af}}}{{Ah{{f{BBh}}}}}}{{{f{Af}}}{{Ah{{f{BBj}}}}}}{{{f{Af}}}{{Ah{{f{BBl}}}}}}{{{f{Af}}}{{Ah{{f{BBf}}}}}}{{{f{Af}}}{{Ah{{f{Ef}}}}}}`{{{f{Af}}}{{Ah{E`}}}}{{}Fj}000{{}c{}}000{{}Eh}{AfBCl}2{BFjAf}{AfAf}>>{{{f{Af}}}{{Ah{Gf}}}}000{{{f{BOn}}}Gf}0{{}d}00{{{f{Af}}}Jn}{{{f{Af}}}CCh}{{{f{Af}}}{{`{{Bf{}{{Bb{Af}}}}}}}}{{{f{BOn}}}Fj}{{{f{Af}}}Fj}{{{f{BOn}}Fj}Af}0{{{f{Af}}}{{Ah{{f{E`}}}}}}{{{f{Af}}{f{Dl}}}c{}}{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}c}eB@h{}}021{{{f{Af}}}{{Ah{{B`{c}}}}}Kn}{{{f{BOn}}}{{Ah{L`}}}}0{{{f{BOn}}}{{B`{n}}}}0{{{f{Af}}}L`}1122322{{AfAf}c{}}{{{f{Af}}c}e{AbKn}{}}7{{Afc}e{AbKn}{}}==<{{{f{BOn}}}{{Ah{Fj}}}}0{{{f{BOn}}}{{f{Bh}}}}{{Bhc}Af{{Kj{{Dh{Hn}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{Db}}}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{Mf}}}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{Kb}}}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{Mb}}}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{Ij}}}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{n}}}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{Il}}}}}}}}{{Bh{Ll{Kb}}}Af}{{Bh{Ll{Mf}}}Af}{{Bh{Ll{Il}}}Af}{{Bh{Ll{Lj}}}Af}{{Bhc}Af{{Kj{{Dh{Af}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{Af}}}}}}}}{{Bhc}Af{{Kj{{Dh{{f{Dl}}}}}}}}{{Bhc}Af{{Kj{{Dh{Lj}}}}}}{{Bh{f{Af}}}Af}{{Bhc}Af{{Kj{{Dh{{B`{{f{Dl}}}}}}}}}}{{Bhc}Af{{Kj{{Dh{d}}}}}}{{Bhc}Af{{Kj{{Dh{{AKl{Dl}}}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{{AKl{Dl}}}}}}}}}}{{Bhc}Af{{Kj{{Dh{{f{{Dh{Df}}}}}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{{f{{Dh{Df}}}}}}}}}}}}{{Bhc}Af{{Kj{{Dh{{AKl{{Dh{Df}}}}}}}}}}{{Bhc}Af{{Kj{{Dh{{Fn{Df}}}}}}}}{{Bhc}Af{{Kj{{Dh{Db}}}}}}{{Bhc}AfBFj}{{Bhc}Af{{Kj{{Dh{{B`{Lj}}}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{d}}}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{{Fn{Df}}}}}}}}}}{{Bhc}Af{{Kj{{Dh{Il}}}}}}{{Bhc}Af{{Kj{{Dh{Mf}}}}}}{{Bhc}Af{{Kj{{Dh{Kb}}}}}}{{Bhc}Af{{Kj{{Dh{Mb}}}}}}{{Bhc}Af{{Kj{{Dh{Ij}}}}}}{{Bhc}Af{{Kj{{Dh{n}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{{AKl{{Dh{Df}}}}}}}}}}}}{{Bh{f{Dn}}}Af}{{{f{BOn}}FjFj}Af}{{BhFj}Af}{{{f{BjCCh}}}{{B`{c}}}{}}{{{f{Af}}{f{Dl}}}{{Ah{Gf}}}}{{{f{Af}}c}eB@h{}}{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}{f{Dl}}}c{}}21{{{f{Af}}}{{Ah{{f{`}}}}}}{{{f{BOn}}}Fj}`{{{f{Af}}}BGl}{{{f{Af}}}{{Ah{L`}}}}{{{f{BOn}}nN`}{{Ah{L`}}}}0{{{f{BOn}}}Af}{{Afc}e{AbKn}{}}{{{f{Af}}c}e{AbKn}{}}9{{{f{BjBOn}}Bh}b}{{{f{BjAf}}Bh}{{f{BjAf}}}}{{{f{Af}}{f{{Dh{ANb}}}}}{{Ah{Af}}}}5{JnJn}{{{f{BOn}}{f{Cd}}Nb}{{Ah{Af}}}}0{{{f{Af}}ndd{B`{Il}}}{{Ah{Af}}}}{{{f{Af}}Fjdd{B`{Il}}}{{Ah{Af}}}}{{{f{Af}}Fj}Af}{{{f{BjAf}}Jn}b}{{{f{BOn}}Kb}Af}{{{f{BjBOn}}}b}0{{{f{BjAf}}}b}{{{f{Af}}{B`{Il}}}Af}{{{f{CCh}}}{{Hh{Fj{B`{Fj}}}}}}{{{f{BOn}}KbFj}Af}{{{f{Af}}KbFj}Af}{{{f{Af}}Ed}{{Ah{Af}}}}{{{f{BOn}}Ed}{{Ah{Af}}}}0{{{f{BOn}}Kb}{{Hh{AfAf}}}}{{{f{Af}}Kb}{{Hh{AfAf}}}}{{{f{BOn}}Df}{{B`{n}}}}0{{{f{BOn}}Df}{{Ah{L`}}}}0{{{f{Af}}}{{Ah{{f{D`}}}}}}{{{f{Af}}Fj}{{Ah{{AKl{Dl}}}}}}{{{f{Af}}{f{Dn}}}{{Ah{Af}}}}{{AfAf}c{}}{{Afc}e{AbKn}{}}{{{f{Af}}c}e{AbKn}{}}{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}}{{Ah{c}}}Kn}{{{f{BOn}}}{{Ah{L`}}}}0{{{f{Af}}}{{Ah{L`}}}}{{{f{Af}}{B`{Fj}}}Af}{{{f{BOn}}{f{Ef}}}{{Ah{Af}}}}{{{f{BOn}}{f{{Dh{I`}}}}}{{Ah{Af}}}}{{{f{BOn}}{f{{Dh{I`}}}}}Af}{{{f{BOn}}{f{Ef}}}Af}{{{f{Af}}{f{{Dh{I`}}}}}Af}{{{f{Af}}FjAMn}Fl}{{{f{Af}}}{{Ah{Af}}}}{fc{}}0{{{f{Af}}}{{AKl{Af}}}}{fDb}{{AfAf}{{Ah{Af}}}}{{{f{Af}}}{{B`{{f{El}}}}}}{{{f{Af}}}{{B`{{f{AKf}}}}}}{{{f{Af}}}{{B`{{f{Gf}}}}}}{{{f{Af}}}{{B`{{f{AMb}}}}}}{{{f{Af}}}{{B`{{f{Jd}}}}}}{{{f{Af}}}{{B`{{f{AKn}}}}}}{{{f{Af}}}{{B`{{f{AL`}}}}}}{c{{Ob{e}}}{}{}}00{{{Hh{Bh{Fn{Fl}}}}}{{Ah{Af}}}}1{{{Hh{{f{B@l}}Fl}}}{{Ah{Af}}}}{{{Hh{{f{B@l}}{Fn{Fl}}}}}{{Ah{Af}}}}{{{Hh{BhFl}}}{{Ah{Af}}}}{{{f{Af}}}{{B`{{f{BBh}}}}}}{{{f{Af}}}{{B`{{f{BBj}}}}}}{{{f{Af}}}{{B`{{f{BBl}}}}}}{{{f{Af}}}{{B`{{f{BBf}}}}}}{{{f{Af}}}{{B`{{f{Ef}}}}}}{{}{{Ob{c}}}{}}000{{{f{Af}}}{{B`{{f{E`}}}}}}{{AfAf}{{Ah{Af}}}}{{Bhc}{{Ob{Af}}}{}}{{{f{Af}}}{{B`{{f{`}}}}}}{{{f{BjAf}}{In{c}}}dC`}{{{f{Af}}}{{B`{{f{D`}}}}}}4{f{{Ob{G`BAn}}}}{{{f{Af}}}{{B`{{f{BBb}}}}}}{{{f{Af}}}{{B`{{f{B@d}}}}}}{{{f{Af}}}{{B`{{f{BBd}}}}}}{{{f{Af}}}{{B`{{f{BB`}}}}}}{fOd}000{{{f{Af}}}{{Ah{{f{BBb}}}}}}{{{f{Af}}}{{Ah{{f{B@d}}}}}}{{{f{Af}}}{{Ah{{f{BBd}}}}}}{{{f{Af}}}{{Ah{{f{BB`}}}}}}{{{f{BOn}}}{{Ah{Af}}}}0{{{f{Af}}}{{Ah{Af}}}}{{{f{BOn}}}{{Ah{{f{{l{c}}}}}}}C`}{{{f{BOn}}Df}{{B`{n}}}}0{{{f{BOn}}Df}{{Ah{L`}}}}0{{}c{}}000{{AfBh}Af}{{{f{Af}}c}Af{AbKn}}{{{f{Af}}{f{Gf}}{f{Af}}}{{Ah{Af}}}}``{{fh}b}{{{f{Ch}}}{{f{Af}}}}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{Ch}}}Ch}{{f{f{Bjc}}}b{}}{fb}{{{f{Ch}}}Af}{Fj{{f{c}}}{}}{Fj{{f{Bjc}}}{}}{Fjb}{cc{}}{{}Fj}{{}c{}}{{{CCj{Af}}}Ch}{{{f{BjCh}}{f{BjFl}}}b}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}6{{{f{BjCh}}{f{BjFl}}e}c{}{{Cd{{f{Ch}}}{{Cb{c}}}}}}````{{{CCl{}{{Cb{c}}}}{f{Af}}}c{}}{{{f{CCn}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{Aj}}}}{f{Af}}}{{Ah{Af}}}}0`2100210021002100``{{{f{BLd}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{Ff}}}}{f{Af}}}{{Ah{Af}}}}0{{{f{BLd}}c}{{Ah{Af}}}Ad}{{{f{{l{Ff}}}}c}{{Ah{Af}}}Ad}0```{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{CD`}}}CD`}{{f{f{Bjc}}}b{}}{fb}{{}CD`}{Fj{{f{c}}}{}}{Fj{{f{Bjc}}}{}}{Fjb}{{{f{CD`}}{f{CD`}}}d}{{f{f{c}}}d{}}00{{{f{CD`}}{f{BjGl}}}Gn}{cc{}}{{{f{CD`}}{f{Bjc}}}bABf}{{}Fj}{{}c{}}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}4````````````{{fh}b}006{{{Fn{BCl}}}{{Ah{BCl}}}}{c{{Ah{BCl}}}{{Hd{}{{Bb{BCl}}}}}}{cBCl{{Hd{}{{Bb{BCl}}}}}}{c{{B`{BCl}}}{{Hd{}{{Bb{BCl}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}}{{Hh{{AKl{{l{c}}}}{AKl{{l{e}}}}}}}C`C`}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}}{{Hh{{AKl{{l{c}}}}{AKl{{l{e}}}}{AKl{{l{g}}}}}}}C`C`C`}{{}CDb}{{{f{CDd}}}d}0{c{{Ah{Dn}}}{{Hd{}{{Bb{{f{Hn}}}}}}}}{c{{Ah{{Hh{DnFj}}}}}{{Hd{}{{Bb{{f{Hn}}}}}}}}`{{{f{{l{c}}}}{f{{l{e}}}}}{{B`{Hf}}}C`C`}{{CDbCDb}CDb}{{{f{BjCDb}}CDb}b}10{{{f{CDb}}}Df}021{f{{f{c}}}{}}0000{{{f{Bj}}}{{f{Bjc}}}{}}0000{{{f{CDf}}}{{`{{Bf{}{{Bb{Fj}}}}}}}}{{{f{CDb}}}CDb}{{{f{CDd}}}CDd}{{{f{{CDh{ec}}}}}{{CDh{ec}}}A@n{A@n{Bf{}{{Bb{c}}}}}}{{f{f{Bjc}}}b{}}00{fb}00{{{f{{l{c}}}}{f{{l{c}}}}}{{Hh{{AKl{{l{c}}}}{AKl{{l{c}}}}}}}C`}{{{f{Eh}}{f{Eh}}}{{Hh{EhEh}}}}{CDje{}{{CDl{c}}}}{CDje{}{{CDn{c}}}}{CDbCDb}{c{{Ah{BCl}}}{{Hd{}{{Bb{{f{BCl}}}}}}}}{cBCl{{Hd{}{{Bb{{f{BCl}}}}}}}}{{{f{CDb}}CDb}d}{{}CDb}{{}CDd}{Fj{{f{c}}}{}}{{{f{{CE`{c}}}}}{{f{e}}}{}{}}1{{{f{{AK`{c}}}}}{{f{e}}}{}{}}222{Fj{{f{Bjc}}}{}}0{{{f{Bj{AK`{c}}}}}{{f{Bje}}}{}{}}111{{CDbCDb}CDb}{Fjb}0000{cBDl{{Hd{}{{Bb{Dn}}}}}}{c{{Ah{Dn}}}{{Hd{}{{Bb{{f{Dn}}}}}}}}:{{{f{{CE`{Af}}}}{f{{CE`{Af}}}}}d}{{{f{CDb}}{f{CDb}}}d}{{{f{CDd}}{f{CDd}}}d}{{f{f{c}}}d{}}00000000{{{f{BjCDb}}c}b{{Hd{}{{Bb{CDb}}}}}}``{{{f{CDb}}{f{BjGl}}}Gn}0000{{{f{CDd}}{f{BjGl}}}Gn}{cc{}}00{CDbCDd}11{Df{{B`{CDb}}}}{DfCDb}00{c{{AK`{Gf}}}{{Hd{}{{Bb{d}}}}}}{c{{AK`{{l{e}}}}}{{Hd{}{{Bb{}}}}}A`}{cCDb{{Hd{}{{Bb{CDb}}}}}}{eCDn{}{{Hd{}{{Bb{c}}}}}}23{{{f{Dl}}}{{B`{CDb}}}}{c{{AK`{{l{e}}}}}{{Hj{}{{Bb{}}}}}A`}{c{{AK`{{l{e}}}}}{{Hl{}{{Bb{}}}}}A`}{c{{AK`{Gf}}}{{Hl{}{{Bb{d}}}}}}{{{f{Dn}}{f{Dn}}}{{B`{Dn}}}}{{{f{Dn}}{f{Dn}}CDd}{{B`{Dn}}}}{{{f{ANd}}{f{ANd}}}ANd}{{{f{Af}}{f{Af}}}{{Ah{b}}}}{{{f{{CE`{Af}}}}{f{Bjc}}}bABf}{{{f{CDb}}{f{Bjc}}}bABf}{{{f{CDd}}{f{Bjc}}}bABf}{{}Fj}0000{{{f{BjCDb}}CDb}b}{{CDbCDb}CDb}{{{f{CDb}}CDb}d}{{}c{}}0000{{{AK`{c}}}c{}}{CDbc{}}2{BFn{{Fn{c}}}{}}{{}{{Fn{Bh}}}}{{{f{CDb}}}d}0{{{f{CDb}}}{{ACl{CDb}}}}{{{f{CDf}}}{{`{{Bf{}{{Bb{CDf}}}}}}}}{{{f{CDb}}}{{ACn{CDb}}}}{{{f{CDf}}}Fj}{MbHn}1{c{{AK`{c}}}{}}{{eFj}{{CDh{ec}}}{}{{Bf{}{{Bb{c}}}}}}{{cFj}{{CDh{{CEd{{CEb{c}}}}c}}}A@n}{{{f{Bj{CDh{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}}}{{{f{Bj{CDh{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}Gd}}{CDbCDb}{{{f{Dl}}}Db}`{{{f{BjCDb}}CDb}b}{{{f{BjCDb}}CDbd}b}{{{f{{CDh{ec}}}}}{{Hh{Fj{B`{Fj}}}}}{}{{Bf{}{{Bb{c}}}}}}{{{f{CDf}}KbFj}CDf}{{{f{{Dh{c}}}}KbFj}{{f{{Dh{c}}}}}{}}{{{f{c}}Fj}{{Fn{c}}}CDf}0{{{f{CDf}}Kb}{{Hh{CDfCDf}}}}{{{f{BCl}}Fjd}{{Fn{BCl}}}}{{CDbCDb}CDb}80{fc{}}009{{CDjFj}{{CDh{CDjc}}}{}}{c{{Ob{e}}}{}{}}0000{{{f{Dn}}{f{Dn}}}{{Ah{Dn}}}}{{}{{Ob{c}}}{}}0000{fOd}00006{{}c{}}0000{{{f{Dn}}e}c{}{{Cd{{f{BjCh}}}{{Cb{c}}}}}}{{{f{{Dh{{Fn{c}}}}}}}{{Hh{Fj{Fn{Fj}}}}}{}}{{{f{BCl}}}{{`{{Bf{}{{Bb{BCl}}}}}}}}{{{f{{Dh{c}}}}}{{AJj{I`}}}{{Kj{{Dh{Of}}}}JfJh}}{{{f{{Dh{e}}}}}{{Fn{c}}}{JfJhCf}{{Kj{{Dh{c}}}}}}{{{f{Af}}}{{Fn{Af}}}}","D":"JO`","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",5879],[5,"ListType",1538],[5,"ChunkedArray",40],[1,"f64"],[10,"PolarsNumericType",1538],[10,"Num",5880],[10,"ToPrimitive",5881],[5,"Series",5139],[8,"PolarsResult",4364,5882],[10,"NumOpsDispatchInner",5603,5883],[6,"GroupsProxy",3959,5884],[5,"BooleanType",1538],[6,"Option",5885],[17,"Item"],[8,"ArrayBox",5579],[10,"Iterator",5886],[5,"PlSmallStr",4364,5887],[0,"mut"],[17,"IsNested"],[5,"FalseT",1538],[10,"PolarsDataType",1538],[17,"Output"],[10,"Fn",5888],[10,"Copy",5889],[5,"AmortSeries",5579],[10,"FnMut",5888],[5,"Float32Type",1538],[5,"Float64Type",1538],[8,"StringChunked",1538],[5,"String",5890],[5,"BinaryType",1538],[1,"u8"],[1,"slice"],[5,"StringType",1538],[1,"str"],[6,"DataType",1538,5891],[8,"ListChunked",1538],[5,"View",5892],[5,"SortOptions",1453],[8,"IdxCa",1538,5893],[6,"Column",3698],[5,"SortMultipleOptions",1453],[8,"BinaryChunked",1538],[10,"PolarsIntegerType",1538],[10,"MetadataTrait",823,5894],[5,"Box",5895],[6,"CastOptions",735],[10,"NumOpsDispatchCheckedInner",5628,5896],[8,"ChunkLenIter",40],[1,"usize"],[8,"ArrayRef",4364,5897],[5,"Vec",5898],[5,"CompactString",5899],[5,"MetadataProperties",823],[10,"DoubleEndedIterator",5900],[8,"BooleanChunked",1538],[17,"HasViews"],[17,"IsObject"],[5,"Formatter",5901],[8,"Result",5901],[10,"Array",5897],[17,"Array"],[10,"IntoIterator",5902],[5,"Bitmap",5903],[1,"tuple"],[10,"IntoParallelIterator",5904],[10,"TrustedLen",5905],[6,"AnyValue",1538,5906],[8,"IdxSize",4364,5907],[5,"MetadataFlags",823],[5,"ObjectType",1538],[10,"PolarsObjectSafe",1109],[10,"PolarsObject",1109],[1,"f32"],[1,"u64"],[5,"Metadata",823],[5,"RwLockWriteGuard",5908],[5,"Int128Type",1538],[8,"DecimalChunked",1538,5909],[10,"Send",5889],[10,"Sync",5889],[10,"ExactSizeIterator",5910],[10,"PolarsFloatType",1538],[6,"IsSorted",5139,5911],[10,"PolarsIterator",784],[1,"i64"],[5,"Iter",5912],[1,"fn"],[5,"Map",5913],[10,"AsRef",5914],[6,"ChunkedArrayLayout",40],[10,"NumCast",5881],[5,"Scalar",5076],[6,"MetadataReadGuard",823,5915],[5,"IMMetadata",823,5916],[5,"Arc",4364,5917],[5,"RwLockReadGuard",5908],[1,"u32"],[5,"Range",5918],[5,"UInt32Type",1538],[5,"Int64Type",1538],[1,"i128"],[5,"Int32Type",1538],[1,"i32"],[5,"UInt64Type",1538],[5,"Field",1538,5919],[10,"ParallelIterator",5904],[10,"IndexedParallelIterator",5904],[6,"QuantileInterpolOptions",4364,5920],[5,"RollingOptionsFixedWindow",4364,5921],[10,"Sized",5889],[17,"IsStruct"],[8,"PlRandomState",1538,5922],[5,"BytesHash",5923],[8,"ArrayView1",5924],[8,"Array2",5924],[6,"Either",5925],[6,"Result",5926],[5,"TypeId",5927],[5,"NullableIdxSize",4364,5907],[10,"FnOnce",5888],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",445,5928],[10,"ChunkedBuilder",473],[5,"BinViewChunkedBuilder",473,5929],[10,"ViewType",5930],[5,"BooleanChunkedBuilder",473,5931],[5,"NullChunkedBuilder",473,5932],[5,"PrimitiveChunkedBuilder",473,5933],[10,"Clone",5934],[8,"StringChunkedBuilder",473,5929],[8,"BinaryChunkedBuilder",473,5929],[10,"NewChunkedArray",473],[5,"AnonymousListBuilder",581,5935],[5,"AnonymousOwnedListBuilder",581,5935],[5,"ListBooleanChunkedBuilder",581,5936],[5,"ListPrimitiveChunkedBuilder",581,5937],[10,"ListBuilderTrait",581],[5,"ListStringChunkedBuilder",581,5938],[5,"ListBinaryChunkedBuilder",581,5938],[5,"ListNullChunkedBuilder",581,5939],[10,"Hasher",5940],[10,"ChunkedCollectInferIterExt",764],[10,"ChunkedCollectIterExt",764],[10,"Canonical",778],[10,"ChunkedCollectParIterExt",780],[10,"FromParIterWithDtype",780],[5,"BooleanArray",5941],[5,"BoolIterNoNull",784],[5,"SomeIterator",784],[5,"MetadataEnv",823,5942],[10,"MetadataCollectable",823,5943],[5,"Iter",5944],[5,"IterNames",5944],[5,"File",5945],[5,"Mutex",5946],[6,"MetadataMerge",823],[5,"RwLock",5908],[5,"ObjectArray",1109],[6,"ArrowDataType",1538,5947],[10,"Any",5927],[10,"Debug",5901],[5,"BitmapIter",5948],[6,"ZipValidity",5949],[8,"ObjectValueIter",1109],[5,"ObjectChunkedBuilder",1186],[8,"ObjectChunked",1538],[10,"AnonymousObjectBuilder",1209],[5,"ObjectRegistry",1209],[8,"ObjectConverter",1209],[8,"BuilderConstructor",1209],[10,"ChunkAgg",1237],[17,"FuncRet"],[10,"ChunkApply",1237],[10,"ChunkApplyKernel",1237],[10,"ChunkSort",1237],[10,"ChunkUnique",1237],[10,"ChunkCast",1237],[6,"FillNullStrategy",1237],[10,"ChunkCompareEq",1237],[10,"ChunkExplode",1237],[5,"OffsetsBuffer",5950],[10,"ChunkFillNullValue",1237],[10,"ChunkFilter",1237],[10,"ChunkFull",1237],[10,"ChunkFullNull",1237],[10,"ChunkAnyValue",1237],[10,"ChunkCompareIneq",1237],[10,"IsFirstDistinct",1237],[10,"IsLastDistinct",1237],[10,"ChunkQuantile",1237],[10,"ChunkExpandAtIndex",1237],[10,"ChunkReverse",1237],[10,"ChunkRollApply",1237],[10,"ChunkSet",1237],[10,"ChunkShift",1237],[10,"ChunkShiftFill",1237],[10,"ChunkVar",1237],[10,"ChunkTake",1237],[10,"ChunkTakeUnchecked",1237],[10,"ChunkBytes",1237],[10,"ChunkZip",1237],[10,"BinaryFnMut",1366],[10,"StaticArray",1538,5951],[10,"TernaryFnMut",1366],[10,"Error",5952],[10,"UnaryFnMut",1366],[5,"PrimitiveArray",5953],[6,"SearchSortedSide",1407],[10,"SlicedArray",4364,5954],[5,"NoNull",5663],[5,"RowsEncoded",5955],[5,"BinaryArray",5956],[8,"BinaryOffsetChunked",1538],[5,"NaiveDateTime",5957],[6,"PolarsError",4364,5882],[6,"Cow",5958],[8,"Float32Chunked",1538],[8,"Float64Chunked",1538],[10,"ArrayFromIter",1538,5959],[10,"ArrayFromIterDtype",1538,5959],[10,"AsRefDataType",1538,5891],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",5960],[10,"From",5914],[5,"CategoricalChunked",3059,5961],[10,"CategoricalMergeOperation",3059,5962],[10,"LogicalType",1538,5963],[5,"Logical",1538,5963],[5,"OwnedObject",1538,5906],[6,"UnknownKind",1538,5891],[5,"CompatLevel",1538,5891],[5,"Dimension",1538,5964],[6,"ReshapeDimension",1538,5964],[6,"TimeUnit",1538,5965],[5,"UInt8Type",1538],[5,"UInt16Type",1538],[5,"Int8Type",1538],[5,"Int16Type",1538],[5,"DateType",1538],[5,"TimeType",1538],[5,"BinaryOffsetType",1538],[5,"DecimalType",1538],[5,"DatetimeType",1538],[5,"DurationType",1538],[5,"CategoricalType",1538],[6,"ArrowTimeUnit",1538],[6,"Ordering",5966],[10,"ArrayCollectIterExt",4364,5959],[8,"Utf8ViewArray",5930],[8,"UInt32Chunked",1538],[5,"Error",5901],[10,"NumericNative",1538],[10,"Into",5914],[5,"ArrowField",4364],[6,"IntegerType",5967],[6,"PrimitiveType",5968],[10,"Borrow",5969],[10,"NoOption",5970],[10,"GetAnyValue",1538,5906],[8,"Int128Chunked",1538],[10,"IntoScalar",1538,5971],[6,"PhysicalType",5967],[6,"ToCompactStringError",5899],[8,"UInt8Chunked",1538],[8,"UInt16Chunked",1538],[8,"UInt64Chunked",1538],[8,"Int8Chunked",1538],[8,"Int16Chunked",1538],[8,"Int32Chunked",1538],[8,"Int64Chunked",1538],[8,"PlIdHashMap",1538,5893],[5,"CategoricalChunkedBuilder",3059,5972],[5,"GlobalRevMapMerger",3059,5962],[6,"RevMapping",3201,5973],[6,"CategoricalOrdering",3201,5973],[5,"CatIter",3059,5961],[1,"u128"],[5,"DataFrame",3414],[5,"StringCacheHolder",3255,5974],[5,"EnumChunkedBuilder",3274,5975],[5,"ErrString",3302,5882],[6,"PolarsWarning",3302,5976],[10,"Display",5901],[6,"FloatFmt",3383],[1,"char"],[8,"Schema",5117],[10,"IntoColumn",3698],[6,"NullStrategy",3414],[6,"UniqueKeepStrategy",3414],[8,"PlHashSet",1538,5922],[8,"ArrowSchema",4364,5977],[5,"Row",4217],[5,"GroupBy",3959],[5,"RangeToInclusive",5918],[5,"RangeFrom",5918],[5,"RangeInclusive",5918],[5,"RangeFull",5918],[5,"RangeTo",5918],[5,"RecordBatchIter",3414],[5,"PhysRecordBatchIter",3414],[10,"IntoSeries",5139,5978],[10,"RangeBounds",5918],[10,"IntoVec",5663],[8,"SchemaRef",5117],[6,"IndexOrder",4364,5979],[8,"RecordBatch",5980],[5,"StructArray",5981],[5,"ScalarColumn",3698,5982],[6,"BitRepr",5139,5911],[8,"SeriesPhysIter",5139,5983],[5,"UnpivotArgsIR",3930],[5,"GroupsIdx",3959,5884],[8,"IdxVec",5984],[6,"GroupByMethod",3959],[5,"SlicedGroups",3959,5884],[5,"GroupsProxyParIter",3959,5884],[10,"UnindexedConsumer",5985],[6,"GroupsIndicator",3959,5884],[8,"IdxItem",3959,5884],[10,"IntoGroupsProxy",3959,5986],[5,"Copied",5987],[5,"Zip",5988],[5,"GroupsProxyIter",3959,5884],[8,"GroupsSlice",3959,5884],[1,"array"],[6,"RollingFnParams",4364,5989],[10,"IsFloat",5990],[10,"NativeType",5991],[10,"AggList",4201,5992],[10,"TakeExtremum",4201],[10,"PhysicalAggExpr",4214],[6,"AnyValueBuffer",4217,5993],[6,"AnyValueBufferTrusted",4217,5993],[5,"IdHasher",4316,5994],[5,"IdxHash",4316,5994],[5,"HashMap",5995],[10,"BuildHasher",5940],[10,"VecHash",4316,5996],[10,"Allocator",5997],[5,"BorrowedFd",5998],[10,"AsFd",5998],[10,"AsRawFd",5999],[5,"OsStr",6000],[5,"Path",6001],[20,"MaybeUninit",6002],[10,"NumOpsDispatchChecked",4364,5896],[5,"ChunkId",4364,5907],[5,"RollingVarParams",4364,5989],[5,"RollingQuantileParams",4364,5989],[6,"NonExistent",4364,6003],[10,"Ord",5966],[5,"CStr",6004],[10,"Default",6005],[5,"Weak",5917],[10,"PartialEq",5966],[10,"Scalar",6006],[5,"Error",6007],[5,"Utf8Error",6008],[5,"TryReserveError",6009],[6,"Error",6010],[5,"CString",6011],[10,"ToOwned",5958],[5,"OsString",6000],[5,"PathBuf",6001],[1,"never"],[10,"FromData",4998,6012],[5,"Buffer",6013],[10,"FromDataUtf8",4998,6012],[10,"FromDataBinary",4998,6012],[5,"ListArray",6014],[6,"Ambiguous",4364,6003],[10,"NamedFromOwned",4364,6015],[10,"PartialOrd",5966],[10,"Hash",5940],[10,"SeriesTrait",5139,5911],[10,"CloneToUninit",5934],[10,"ChunkAggSeries",4364,6016],[10,"QuantileAggSeries",4364,6017],[10,"IndexToUsize",4364,6018],[10,"NamedFrom",4364,6015],[5,"Pin",6019],[5,"Request",5952],[5,"BorrowedCursor",6020],[5,"IoSliceMut",6021],[6,"SeekFrom",6021],[10,"VarAggSeries",4364,6022],[5,"AllocError",5997],[5,"BTreeMap",6023],[5,"Arguments",5901],[5,"IoSlice",6021],[5,"AnonymousBuilder",5004,6024],[5,"Offsets",5950],[5,"MutableNullArray",5027,6025],[5,"MutableBitmap",6026],[5,"Utf8Array",6027],[1,"i16"],[1,"i8"],[1,"u16"],[5,"Schema",6028],[10,"SchemaExt",5117],[17,"DataType"],[10,"SchemaNamesAndDtypes",5117],[8,"Metadata",5947],[5,"SeriesIter",5139,5983],[5,"Rc",6029],[10,"LhsNumOps",5603,5883],[10,"NumOpsDispatch",5603,5883],[6,"NullBehavior",5636],[5,"SuperTypeFlags",5663,6030],[5,"SuperTypeOptions",5663,6030],[10,"Container",5663],[5,"TrustMyLength",5663,5905],[10,"CustomIterTools",5663,6031],[10,"FromIteratorReversed",6032],[10,"FromTrustedLenIterator",5663,6031],[5,"Wrap",5663],[5,"Repeat",6033],[5,"Take",6034],[8,"FillNullLimit",1237],[10,"InitHashMaps",1538],[10,"InitHashMaps2",1538],[5,"TrueT",1538],[15,"IO",3369],[15,"Context",3369],[15,"Count",4198],[15,"Slice",4199],[10,"ListFromIter",4364],[10,"Utf8FromIter",5071],[10,"BinaryFromIter",5071]],"r":[[0,5994],[4,5974],[13,5974],[16,5974],[32,5974],[445,5928],[473,5929],[474,5929],[475,5931],[478,5932],[479,5933],[480,5929],[581,5935],[582,5935],[583,5938],[584,5936],[586,5939],[587,5937],[588,5938],[828,5916],[834,5943],[835,5942],[839,5915],[840,5894],[1156,6035],[1437,5954],[1453,5954],[1539,5906],[1541,5959],[1542,5959],[1543,5959],[1544,5947],[1546,5891],[1562,5961],[1565,5961],[1566,5972],[1567,5962],[1568,5973],[1571,5891],[1572,5891],[1573,5891],[1574,5891],[1585,5909],[1588,5964],[1597,5919],[1598,5919],[1613,5906],[1615,5962],[1619,5893],[1620,6018],[1621,5893],[1622,5893],[1624,5922],[1625,5893],[1650,5971],[1664,5963],[1665,5963],[1683,5906],[1687,5922],[1688,5922],[1689,5893],[1690,5922],[1691,5922],[1692,5922],[1693,5887],[1699,5964],[1700,5973],[1703,5951],[1715,5965],[1716,5891],[1743,5891],[1948,5962],[1965,5963],[2079,5891],[2211,5963],[2629,5962],[2630,5962],[2642,5891],[2734,5961],[2773,5961],[3059,5961],[3060,5961],[3061,5972],[3062,5962],[3063,5973],[3065,5962],[3069,5973],[3086,5962],[3153,5962],[3154,5962],[3172,5961],[3176,5961],[3201,5973],[3206,5973],[3255,5974],[3261,5974],[3264,5974],[3272,5974],[3274,5975],[3292,5973],[3297,5973],[3298,5974],[3299,5974],[3300,5974],[3301,5974],[3308,5882],[3315,5882],[3316,5882],[3317,5976],[3331,5882],[3339,5882],[3346,5976],[3351,5882],[3353,5882],[3354,5882],[3355,5882],[3356,5882],[3357,5976],[3358,5882],[3373,6036],[3374,6036],[3375,6036],[3376,4316],[3701,5982],[3959,5884],[3965,5884],[3966,5884],[3967,5884],[3968,5884],[3969,5884],[3970,5884],[3973,5884],[3975,5986],[3987,5884],[4201,5992],[4219,5993],[4220,5993],[4315,6037],[4316,5994],[4317,5994],[4318,5994],[4319,5996],[4322,5996],[4323,5996],[4364,6003],[4365,5917],[4366,5928],[4367,5959],[4368,5897],[4370,5977],[4371,5929],[4372,5931],[4374,5961],[4375,5961],[4376,5972],[4377,5962],[4378,5973],[4379,6016],[4380,5907],[4381,40],[4382,473],[4383,764],[4384,764],[4385,3698],[4389,3414],[4396,6012],[4397,6012],[4398,6012],[4400,5962],[4403,6018],[4404,5907],[4405,5979],[4406,6018],[4407,3698],[4408,5978],[4409,5663],[4411,6038],[4412,6038],[4413,6038],[4416,5883],[4418,5938],[4419,5936],[4420,581],[4421,6039],[4422,5937],[4423,5938],[4427,6015],[4428,6015],[4430,473],[4432,6003],[4435,5907],[4436,5907],[4437,5883],[4438,5896],[4442,5887],[4443,5882],[4444,784],[4445,1109],[4446,5882],[4447,5933],[4449,6017],[4450,5920],[4453,5973],[4454,5989],[4455,5921],[4456,5989],[4457,5989],[4460,5076],[4463,5139],[4464,5911],[4466,5954],[4467,5974],[4469,5929],[4471,3414],[4472,3930],[4474,6022],[4475,5996],[4530,5962],[4581,6039],[4582,0],[4595,6039],[4627,0],[4782,6018],[4828,6039],[4830,5962],[4831,5962],[4857,6039],[4864,5882],[4865,5882],[4866,5882],[4867,5882],[4879,5961],[4881,6039],[4887,5961],[4968,6039],[4998,6012],[4999,6012],[5000,6012],[5004,6024],[5027,6025],[5058,5973],[5063,5973],[5064,5954],[5067,5974],[5068,5974],[5069,5974],[5070,5974],[5071,6040],[5072,6040],[5141,5911],[5142,1237],[5145,5978],[5146,5911],[5147,5911],[5152,5983],[5153,5983],[5154,5911],[5603,5883],[5604,5883],[5605,5883],[5611,5883],[5628,5896],[5629,5896],[5666,6031],[5667,6031],[5668,6031],[5671,6030],[5672,6030],[5673,5905],[5688,6041],[5689,6041],[5749,6042],[5750,6030],[5793,6030],[5794,6030],[5796,6043],[5824,6030],[5856,6030],[5873,6043]],"b":[[50,"impl-Add-for-ChunkedArray%3CT%3E"],[51,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[52,"impl-Add-for-%26ChunkedArray%3CT%3E"],[53,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[66,"impl-ChunkedArray%3CFloat32Type%3E"],[67,"impl-ChunkedArray%3CFloat64Type%3E"],[72,"impl-ChunkedArray%3CT%3E"],[73,"impl-ChunkedArray%3CBinaryType%3E"],[74,"impl-ChunkedArray%3CStringType%3E"],[103,"impl-ChunkedArray%3CT%3E"],[104,"impl-Container-for-ChunkedArray%3CT%3E"],[124,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[125,"impl-Div-for-%26ChunkedArray%3CT%3E"],[126,"impl-Div-for-ChunkedArray%3CT%3E"],[127,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[134,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[135,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[136,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[137,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[144,"impl-Debug-for-ChunkedArray%3CT%3E"],[145,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[155,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[156,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[157,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[159,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[160,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[188,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[189,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[190,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[191,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[225,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[226,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[227,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[228,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[229,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[230,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[231,"impl-ChunkedArray%3CT%3E"],[232,"impl-Container-for-ChunkedArray%3CT%3E"],[237,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[238,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[239,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[240,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[241,"impl-ChunkedArray%3CBooleanType%3E"],[242,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[244,"impl-ChunkedArray%3CBooleanType%3E"],[245,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[255,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[256,"impl-ChunkedArray%3CBooleanType%3E"],[259,"impl-ChunkedArray%3CBooleanType%3E"],[260,"impl-ChunkedArray%3CT%3E"],[261,"impl-Mul-for-ChunkedArray%3CT%3E"],[262,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[263,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[264,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[269,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[270,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[271,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[272,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[273,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[274,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[275,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[276,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[277,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[278,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[279,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[280,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[281,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[282,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[283,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[284,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[285,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[286,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[287,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[288,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[289,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[290,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[291,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[292,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[300,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[301,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[302,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[303,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[307,"impl-ChunkedArray%3CListType%3E"],[308,"impl-ChunkedArray%3CStringType%3E"],[309,"impl-ChunkedArray%3CListType%3E"],[310,"impl-ChunkedArray%3CStringType%3E"],[321,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[322,"impl-Rem-for-ChunkedArray%3CT%3E"],[323,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[324,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[343,"impl-ChunkedArray%3CT%3E"],[344,"impl-Container-for-ChunkedArray%3CT%3E"],[347,"impl-Container-for-ChunkedArray%3CT%3E"],[348,"impl-ChunkedArray%3CT%3E"],[351,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[352,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[353,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[354,"impl-Sub-for-ChunkedArray%3CT%3E"],[356,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[357,"impl-ChunkedArray%3CBooleanType%3E"],[360,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[361,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[362,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[363,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[369,"impl-ChunkedArray%3CT%3E"],[370,"impl-ChunkedArray%3CListType%3E"],[375,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[376,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[377,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[378,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[379,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[380,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[407,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[408,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[409,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[410,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[411,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[412,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[413,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[414,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[415,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[416,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[417,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[418,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[419,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[420,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[421,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[422,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[423,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[424,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[425,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[426,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[427,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[428,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[429,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[430,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[435,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[436,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[437,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[438,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[439,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[440,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[441,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[442,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[529,"impl-BinViewChunkedBuilder%3Cstr%3E"],[530,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[861,"impl-Flags-for-MetadataProperties"],[862,"impl-MetadataProperties"],[863,"impl-MetadataFlags"],[864,"impl-Flags-for-MetadataFlags"],[928,"impl-Metadata%3CT%3E"],[929,"impl-MetadataTrait-for-Metadata%3CT%3E"],[954,"impl-UpperHex-for-MetadataProperties"],[955,"impl-LowerHex-for-MetadataProperties"],[956,"impl-Octal-for-MetadataProperties"],[957,"impl-Binary-for-MetadataProperties"],[958,"impl-Debug-for-MetadataProperties"],[959,"impl-UpperHex-for-MetadataFlags"],[960,"impl-Binary-for-MetadataFlags"],[961,"impl-Octal-for-MetadataFlags"],[962,"impl-Debug-for-MetadataFlags"],[963,"impl-LowerHex-for-MetadataFlags"],[973,"impl-Flags-for-MetadataProperties"],[974,"impl-MetadataProperties"],[975,"impl-Flags-for-MetadataFlags"],[976,"impl-MetadataFlags"],[987,"impl-MetadataTrait-for-Metadata%3CT%3E"],[988,"impl-Metadata%3CT%3E"],[1031,"impl-Metadata%3CT%3E"],[1032,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1036,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1037,"impl-Metadata%3CT%3E"],[1115,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1116,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1151,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1152,"impl-ObjectArray%3CT%3E"],[1167,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1168,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1178,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1179,"impl-ObjectArray%3CT%3E"],[1180,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1181,"impl-ObjectArray%3CT%3E"],[1183,"impl-Array-for-ObjectArray%3CT%3E"],[1184,"impl-ObjectArray%3CT%3E"],[1187,"impl-ObjectChunkedBuilder%3CT%3E"],[1188,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1190,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1191,"impl-ObjectChunkedBuilder%3CT%3E"],[1784,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1785,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1786,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1787,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1788,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1789,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1790,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1791,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1867,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1868,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1869,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1870,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1871,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[1872,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[2214,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2215,"impl-PartialEq-for-DataType"],[2226,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2227,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2228,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2229,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2232,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2233,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2234,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2235,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2279,"impl-Display-for-AnyValue%3C\'_%3E"],[2280,"impl-Debug-for-AnyValue%3C\'a%3E"],[2282,"impl-Display-for-DataType"],[2283,"impl-Debug-for-DataType"],[2287,"impl-Display-for-ReshapeDimension"],[2288,"impl-Debug-for-ReshapeDimension"],[2289,"impl-Display-for-TimeUnit"],[2290,"impl-Debug-for-TimeUnit"],[2301,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2302,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2304,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2305,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2306,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2309,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2310,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2311,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2313,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2315,"impl-From%3C%26Field%3E-for-Field"],[2340,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2341,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2345,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2346,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2347,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[2349,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2350,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2351,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2352,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2358,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2359,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2361,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2362,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2363,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2364,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2365,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2366,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2373,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[2374,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[2375,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2376,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2377,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2378,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2470,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2471,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2472,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2473,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2475,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2476,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2477,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2478,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2620,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2621,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2622,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2623,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2625,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2626,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2627,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2628,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2664,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2665,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2666,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2667,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2668,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2669,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2670,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2671,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2672,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2673,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2689,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2690,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2693,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2694,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2695,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2696,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2699,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2700,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2701,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2702,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2786,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2787,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2788,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2789,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[3106,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3107,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3108,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3109,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3110,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3111,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3126,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3127,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3128,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3129,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3130,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3131,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3147,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3148,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3149,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3150,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3151,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3152,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3163,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3164,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3165,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3166,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3167,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3168,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3341,"impl-Debug-for-ErrString"],[3342,"impl-Display-for-ErrString"],[3439,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[3440,"impl-Add%3C%26Series%3E-for-DataFrame"],[3441,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[3483,"impl-Div%3C%26Series%3E-for-DataFrame"],[3484,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[3485,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[3517,"impl-Debug-for-DataFrame"],[3518,"impl-Display-for-DataFrame"],[3524,"impl-FromIterator%3CSeries%3E-for-DataFrame"],[3525,"impl-FromIterator%3CColumn%3E-for-DataFrame"],[3551,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3552,"impl-Index%3Cusize%3E-for-DataFrame"],[3553,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3554,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3555,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3556,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3557,"impl-Index%3C%26str%3E-for-DataFrame"],[3558,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3576,"impl-Container-for-DataFrame"],[3577,"impl-DataFrame"],[3584,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3585,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3586,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3587,"impl-DataFrame"],[3588,"impl-Container-for-DataFrame"],[3605,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3606,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3607,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3634,"impl-Container-for-DataFrame"],[3635,"impl-DataFrame"],[3639,"impl-DataFrame"],[3640,"impl-Container-for-DataFrame"],[3643,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3644,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3645,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3665,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26Schema%3CField%3E)%3E-for-DataFrame"],[3666,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3705,"impl-Add%3CT%3E-for-Column"],[3706,"impl-Add%3CT%3E-for-%26Column"],[3707,"impl-Add-for-%26Column"],[3708,"impl-Add-for-Column"],[3730,"impl-BitAnd-for-%26Column"],[3731,"impl-Column"],[3732,"impl-BitAnd-for-Column"],[3733,"impl-BitOr-for-Column"],[3734,"impl-BitOr-for-%26Column"],[3735,"impl-BitXor-for-%26Column"],[3736,"impl-BitXor-for-Column"],[3762,"impl-Div-for-Column"],[3763,"impl-Div%3CT%3E-for-%26Column"],[3764,"impl-Div%3CT%3E-for-Column"],[3765,"impl-Div-for-%26Column"],[3788,"impl-From%3CScalarColumn%3E-for-Column"],[3790,"impl-From%3CSeries%3E-for-Column"],[3836,"impl-Mul-for-Column"],[3837,"impl-Mul-for-%26Column"],[3838,"impl-Mul%3CT%3E-for-%26Column"],[3839,"impl-Mul%3CT%3E-for-Column"],[3854,"impl-Rem-for-Column"],[3855,"impl-Rem-for-%26Column"],[3856,"impl-Rem%3CT%3E-for-Column"],[3857,"impl-Rem%3CT%3E-for-%26Column"],[3876,"impl-Sub-for-%26Column"],[3877,"impl-Sub%3CT%3E-for-%26Column"],[3878,"impl-Sub%3CT%3E-for-Column"],[3879,"impl-Sub-for-Column"],[4075,"impl-Debug-for-GroupByMethod"],[4076,"impl-Display-for-GroupByMethod"],[4082,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[4083,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[4085,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[4118,"impl-IntoIterator-for-%26GroupsIdx"],[4119,"impl-IntoIterator-for-GroupsIdx"],[4121,"impl-IntoParallelIterator-for-%26GroupsIdx"],[4122,"impl-IntoParallelIterator-for-GroupsIdx"],[4492,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[4493,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[4494,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[4495,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[4498,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[4499,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[4587,"impl-Default-for-Arc%3CCStr%3E"],[4588,"impl-Default-for-Arc%3CT%3E"],[4589,"impl-Default-for-Arc%3Cstr%3E"],[4590,"impl-Default-for-Arc%3C%5BT%5D%3E"],[4650,"impl-PartialEq-for-Arc%3CT,+A%3E"],[4651,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[4652,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[4685,"impl-Display-for-PolarsError"],[4686,"impl-Debug-for-PolarsError"],[4687,"impl-Debug-for-PlSmallStr"],[4688,"impl-Display-for-PlSmallStr"],[4691,"impl-Debug-for-Arc%3CT,+A%3E"],[4692,"impl-Display-for-Arc%3CT,+A%3E"],[4693,"impl-Pointer-for-Arc%3CT,+A%3E"],[4703,"impl-From%3CUtf8Error%3E-for-PolarsError"],[4705,"impl-From%3CTryReserveError%3E-for-PolarsError"],[4706,"impl-From%3CError%3E-for-PolarsError"],[4707,"impl-From%3CError%3E-for-PolarsError"],[4708,"impl-From%3C%26String%3E-for-PlSmallStr"],[4709,"impl-From%3CCompactString%3E-for-PlSmallStr"],[4710,"impl-From%3CString%3E-for-PlSmallStr"],[4712,"impl-From%3C%26str%3E-for-PlSmallStr"],[4716,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[4717,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[4718,"impl-From%3CCompactString%3E-for-Arc%3Cstr%3E"],[4719,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[4720,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[4721,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[4722,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[4723,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[4724,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[4725,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[4726,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[4727,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[4728,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[4729,"impl-From%3CT%3E-for-Arc%3CT%3E"],[4731,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[4733,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[4746,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[4747,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[4748,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[4749,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[4750,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[4751,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[4752,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[4753,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[5090,"impl-From%3Ci16%3E-for-Scalar"],[5091,"impl-From%3Cf32%3E-for-Scalar"],[5092,"impl-From%3Cf64%3E-for-Scalar"],[5093,"impl-From%3Cu32%3E-for-Scalar"],[5095,"impl-From%3Ci8%3E-for-Scalar"],[5096,"impl-From%3Cu16%3E-for-Scalar"],[5097,"impl-From%3Cu8%3E-for-Scalar"],[5098,"impl-From%3Ci64%3E-for-Scalar"],[5099,"impl-From%3Ci32%3E-for-Scalar"],[5100,"impl-From%3Cu64%3E-for-Scalar"],[5162,"impl-Add%3CT%3E-for-%26Series"],[5163,"impl-Add%3CT%3E-for-Series"],[5164,"impl-Add-for-Series"],[5165,"impl-Add-for-%26Series"],[5237,"impl-Div%3CT%3E-for-Series"],[5238,"impl-Div%3CT%3E-for-%26Series"],[5239,"impl-Div-for-%26Series"],[5240,"impl-Div-for-Series"],[5252,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5253,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5254,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5255,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5256,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5257,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5274,"impl-Debug-for-Series"],[5275,"impl-Display-for-Series"],[5287,"impl-FromIterator%3COption%3CString%3E%3E-for-Series"],[5288,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[5289,"impl-FromIterator%3Cf32%3E-for-Series"],[5290,"impl-FromIterator%3COption%3C%26str%3E%3E-for-Series"],[5291,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[5292,"impl-FromIterator%3C%26i64%3E-for-Series"],[5293,"impl-FromIterator%3C%26str%3E-for-Series"],[5294,"impl-FromIterator%3C%26f32%3E-for-Series"],[5295,"impl-FromIterator%3Ci64%3E-for-Series"],[5296,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[5297,"impl-FromIterator%3C%26i32%3E-for-Series"],[5298,"impl-FromIterator%3Ci32%3E-for-Series"],[5299,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[5300,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[5301,"impl-FromIterator%3Cbool%3E-for-Series"],[5302,"impl-FromIterator%3Cf64%3E-for-Series"],[5303,"impl-FromIterator%3C%26f64%3E-for-Series"],[5304,"impl-FromIterator%3C%26bool%3E-for-Series"],[5305,"impl-FromIterator%3C%26u64%3E-for-Series"],[5306,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[5307,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[5308,"impl-FromIterator%3C%26u32%3E-for-Series"],[5309,"impl-FromIterator%3Cu64%3E-for-Series"],[5310,"impl-FromIterator%3CString%3E-for-Series"],[5311,"impl-FromIterator%3Cu32%3E-for-Series"],[5312,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[5313,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[5314,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[5315,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[5316,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[5317,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[5318,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[5333,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5334,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5335,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5336,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5337,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5338,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5381,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5382,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5383,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5384,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5385,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5386,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5400,"impl-Mul-for-Series"],[5401,"impl-Mul%3CT%3E-for-%26Series"],[5402,"impl-Mul-for-%26Series"],[5403,"impl-Mul%3CT%3E-for-Series"],[5410,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[5411,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[5412,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[5413,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[5414,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[5415,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[5416,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[5417,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[5418,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[5419,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[5420,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[5421,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[5422,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[5423,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[5424,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[5425,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[5426,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[5427,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[5428,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[5429,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[5430,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[5431,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[5432,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[5433,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[5434,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[5435,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[5436,"impl-NamedFrom%3CT,+T%3E-for-Series"],[5437,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[5438,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[5439,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[5440,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[5441,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[5442,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[5443,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[5444,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[5445,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[5446,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[5451,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5452,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5453,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5454,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5455,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5456,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5465,"impl-Rem%3CT%3E-for-Series"],[5466,"impl-Rem%3CT%3E-for-%26Series"],[5467,"impl-Rem-for-%26Series"],[5499,"impl-Sub-for-Series"],[5500,"impl-Sub%3CT%3E-for-Series"],[5501,"impl-Sub%3CT%3E-for-%26Series"],[5502,"impl-Sub-for-%26Series"],[5530,"impl-TryFrom%3C(PlSmallStr,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5532,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5533,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5534,"impl-TryFrom%3C(PlSmallStr,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5696,"impl-Flags-for-SuperTypeFlags"],[5697,"impl-SuperTypeFlags"],[5767,"impl-Debug-for-SuperTypeFlags"],[5768,"impl-Binary-for-SuperTypeFlags"],[5769,"impl-Octal-for-SuperTypeFlags"],[5770,"impl-LowerHex-for-SuperTypeFlags"],[5771,"impl-UpperHex-for-SuperTypeFlags"],[5780,"impl-SuperTypeFlags"],[5781,"impl-Flags-for-SuperTypeFlags"],[5783,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5784,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5787,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5788,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5791,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5792,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"]],"c":"OjAAAAEAAAAAAAwAEAAAAJwP5w8jECYQJxAoECkQKhAvEDIQNxA4EF4Q","e":"OzAAAAEAAH8RPQIAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAIAIgAHACsADQBAAAAAQwABAEYABQBOAAEAUQAAAFMAAABVAAoAYQAAAGQAAwBpAAAAbAADAHEAAgB4AA0AhwADAIwAAgCQAAQAlgAAAJgAAQCcAAUApAADAKoAAwCvAAUAtgABALsABQDDAAIAygAFANEAAwDYAAIA3QACAOEABgDpAAAA7gAMAAABAwAGAQYADgEbAC0BAwAyAQAANAEEADoBAQBAAQAAQgEEAEgBAABNAQUAVQEBAFkBAwBeAQkAbgEBAHQBAAB4AQgAggEIAIwBAACOAQUAlgEAAJgBIwC9ASkA6wECAPEBJwAfAgUAKQIAACsCJgBUAkwAqAIMALwCJADkAg4A9AIBAPcCGQAUAwkAIAMBACQDAQAnAxUAPgMJAEkDCgBeAwAAYQMAAGYDDQB1AxAAigMSAJ8DAAChAwkArQMDALMDAQC3Aw0AzgMAANADAADYAwcA4QMHAPYDAQD6AwAA/QMDAAUEBQAMBAQAGAQLACsEBAAyBA0AQgQGAEwECABWBAEAWgQWAHIECAB8BAAAfgQAAIAEAACCBAEAhwQQAJkEAACbBAAAnQQDAKIEAQClBAIAqQQHALIEAAC0BAUAvAQBAL8EAADBBAEAxAQDAMkEAwDOBAIA0gQDANgEAADbBAAA5AQAAOkEAADsBAEA8QQBAPQEAAD3BAEAAgUBAAwFAgASBQYAGwUCACAFAQAjBQAAJQUBACsFAQAuBQIANgUBADwFAAA/BQAAQgUAAEQFAABGBQAASAUAAE0FBABUBQEAVwUHAGAFAQBjBQAAZwUAAGkFAwBuBQEAcQUFAH0FFgCVBQEAmQUEAJ8FAwCmBQcAsQURAMUFCwDSBQEA1QUDAOUFCQD7BQ0ACwYCAA8GBQAXBgAAGQYOACsGAAAtBgAAMgYBADUGAQA4BgMAPQYAAD8GAABCBgAARQYAAEcGAQBKBgAATAYCAFAGDQBfBgAAYQYBAGQGAABmBgEAaQYAAGsGAQBuBgAAcAYBAHMGAwB6BgAAfgYBAIIGAACFBgAAhwYAAIkGAwCOBgAAkQYIAJsGAgCgBgMApQYAAKcGAgCsBgAArgYAALMGAgC3BgEAugYAALwGAQC/BgAAwQYBAMQGAADGBgEAyQYAAMsGAQDOBgAA0AYAANMGPgAYBwQAHwcJACoHBAAwBwMANQcEADsHAAA9B2MAogd0ABgIhgCgCAAAowhTAP4IAQABCQIABgkCAAoJAAAMCQAADwkAACUJAQApCRcARQklAG0JBgB2CR4AmAkBAJ0JQgDiCQAACAoLABYKAAAYCgIAHAoBAB8KAAAkCgcALQoAADAKAgA1CgMAOgoAADwKGwBZCgoAZQoNAHQKIQCXCggAoQobAL4KFgDWCg0A6QoAAOsKAADtCgAA8QofABMLBQAaC1YAcgswAKQLTgD0CwQA+gsBAP0LAgABDAQABwwkADMMAgA3DAkARQwEAEsMFwBlDAEAaAwEAG4MDQB9DAUAhAwAAIYMFwCfDAEApQwCAKoMAQCuDAkAuQwEAL8MAQDEDAAAxgwCAMoMCgDWDAAA2AwFAN8MAADhDAEA5wwEAO0MBADzDBAABQ0KABINAwAYDQUAHw0lAEYNBQBNDQkAWg0AAF0NCwBrDQMAcA0CAHgNFQCQDRMArQ0BALENAgC1DQAAtw0AALwNAwDODQAA1Q0AANgNAQDgDQwA8w0BAPkNAAD8DQEAAQ4CAAUOAAALDgEADg4AABYOAgAeDgAAIQ4AACgOAAAxDgIANQ4AADkOBQBGDgQATg4GAFcOCgBjDgAAaA4EAHUOAAB3DgYAiQ4BAI0OAQCQDhAAow4aAMAOCwDNDgAAzw4AANEOBgDbDgkA5w4DAOwOCAD2DgIA+w4NAAsPCgAXDxMALQ8AADAPAgA0Dx0AUw8HAFwPDgBsDwIAcA8KAHwPAQB/DwMAhA8DAIkPCQCUDwcAnQ8BAKAPHAC+DygA6A8GAPMPAQD2DwEA+w8CAAAQAAAFEAcAFRANACQQAQArEAMAMBABADQQAgA5EAAAOxAgAF8QDABuEAUAdRAHAH4QFgCXEA4ApxAPALgQAAC7EAMAwhAGAMwQDgDdEAEA4BARAPQQBAD8EAUABBEJAA8RAgAUEQcAHRENACwRAwAxERcAShENAFkRAQBcERYAdRETAIoRAACMEQYAlREfALcRAwC8ESAA3hEHAOcRAQDrEQAA8BEkABgSBAAeEggAKRIBACwSMgBgEgAAYhIFAGkSAABrEgAAbxIAAHsSAACIEgAAixIHAJkSAACcEgMApBIAAKYSBgCvEhEAzxIAANMSAwDYEgMA3RIAAN8SAQD6EgMAARMEAAgTAAALEwcAFRMAABcTAQAcEzEAVhMCAFoTDQBpEwAAaxMNAH0TDQCNEwYAlRMAAJcTHQC2EwAAuBMLAMUTAADHEwEA0BMWAOgTBgDxExcAChQAAAwUAgAQFAAAEhQAABQUBQAbFAQAIRQFACsUBAA1FAAAOxQCAEMUBQBKFAsAWRQDAF4UAABiFAIAZhQDAGwUEgCDFAMAiBQAAIoUAACNFAIAmhQDAKEUAAClFAEAqBQgAMwUAADOFAEA1hQBANkUAQDdFAAA4xQBAOYUAwDuFAQA+xQDAAAVAAACFQAABhUAAAgVAgARFQAAGRUDAB8VAAAkFSMAShUDAE8VAQBUFQEAWhUCAF8VAABhFQAAZRUCAGwVAQBvFQAAcRUBAHQVAAB6FQAAfBUDAIwVAQCPFQEAmBUHAKQVBACqFQEArxUBALUVAwDAFQAAxRUDAMoVAADNFQsA2hUAANwVAADeFQQA5BUaAAIWAgAHFg8AGBYBABsWBAAiFgMAKBYIADMWAAA3FgEAOxYBAEEWAABFFhMAWhYCAGEWDgBxFgQAeRYLAIYWBwCRFgAAlhYAAJgWAQCbFgIAnxYDAKQWCQC2FgQAvhYAAMAWAwDGFgEAyRYBAM0WAgDSFgAA1xYCANwWBADiFgkA7RYEAPMWBAA="}],["polars_io",{"t":"KFFKKKNNECNNNNNNNNNNCCNNNNNNNNNONNNNNNNNCMMNNNNNNCONNNNCCCOCMMMOCCCCCCONNNNNNNNONNCNNMGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFIFNNNNNNNOHNNNNNNNNNNNNNNNNNONNNNNNNNNNHNNNNNNNNNNNHCONONNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFGGFFFPPPGFPPNNNNNNNNNNNNNNNNNNNNNNNNCONNNNNNNNNNNNNNNOOHHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNONNNNNOEONNNNNNNNNNNNNNNNNONOOONNNNNNOOOOOOOOOOCOONNNNNOONNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPFPPFPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNOOOFNNNNNNNNNNHNNNNHHNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNJJFNNNNNNHNHNNNNNNNNNFGFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKPGNNNNNNNNNNNNNNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNNOONNNNHONNNNNNNNNNNNNOOOOOOONONNNNNNNNONNPFPPGFFFPPNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNPPPGNNHNNNHNNNNHNHNNNNFPFPFPPGFFIPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHJHHHHHHKFNNNNNNNNHNNMNNNNHNNHFFKKNNHNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNMNNNNNNNMNNNNNNNNNNNNNNNKKEMMMMNNNEJJJJSCCHHHCKPGGPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPPNNNNNNNNNHNNNNPPPGNNNNNNNNNHNNNNN","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriteDataFrameToFile","__clone_box","","async_glob","avro","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","cloud","csv","default","deref","","deref_mut","","deserialize","","drop","","enabled","eq","","equivalent","","","","","","file_cache","finish","","fmt","","from","","hash","","hive","hive_start_idx","init","","into","","ipc","json","mmap","name","ndjson","new","","next_record_batch","offset","parquet","partition","path_utils","pl_async","predicates","prelude","schema","serialize","","to_owned","","try_from","","try_into","","try_parse_dates","type_id","","utils","vzip","","write_df_to_file","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","","Snappy","","__clone_box","arrow_schema","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","deref","","","deref_mut","","","drop","","","eq","equivalent","","","finish","","fmt","from","","","hash","init","","","into","","","new","","schema","set_rechunk","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","ObjectStorePath","PolarsObjectStore","__clone_box","borrow","","","borrow_mut","","","bucket","build_object_store","clone","clone_into","clone_to_uninit","default","deref","","","deref_mut","","","download","drop","","","","eq","execute","expansion","flush","fmt","","from","","","from_url","get","get_range","get_ranges","glob","head","init","","","into","","","new","","","new_with_object_store","object_path_from_str","options","prefix","queue","scheme","sync_update","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","write","write_varint","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","","Checksum","Client","","","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","","Encryption","Endpoint","","FederatedTokenFile","File","Gcp","GoogleConfigKey","Hf","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","","Token","","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","","","","as_ref","","","borrow","","","","","borrow_mut","","","","","build_aws","build_azure","build_gcp","build_http","clone","","","","clone_into","","","","clone_to_uninit","","","","default","deref","","","","","deref_mut","","","","","deserialize","","","","drop","","","","","eq","","","","","equivalent","","","","","","","","","","","","file_cache_ttl","fmt","","","","from","","","","","from_str","","","","from_untyped_config","hash","","","","init","","","","","into","","","","","max_retries","serialize","","","","to_owned","","","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_aws","with_azure","with_gcp","with_max_retries","read","write","AllColumns","AllColumnsSingle","BatchedCsvReader","CommentPrefix","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","Single","Utf8","__clone_box","","","","","_with_predicate","batched","batched_borrowed","borrow","","","","","","","","borrow_mut","","","","","","","","buffer","chunk_size","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","columns","comment_prefix","count_rows","count_rows_from_slice","decimal_comma","default","","","deref","","","","","","","","deref_mut","","","","","","","","deserialize","","","","","drop","","","","","","","","dtype_overwrite","encoding","eol_char","eq","","","","","equivalent","","","","","","","","","","","","","","","fields_to_cast","finish","fmt","","","","","from","","","","","","","","","get_parse_options","has_header","hash","","","","","ignore_errors","infer_file_schema","infer_schema_length","init","","","","","","","","into","","","","","","","","into_reader_with_file_handle","low_memory","map_parse_options","missing_is_null","n_rows","n_threads","new","new_from_str","new_multi","new_single","next_batches","","null_values","parse_options","path","projection","quote_char","raise_if_empty","rechunk","row_index","sample_size","schema","schema_inference","schema_overwrite","separator","serialize","","","","","skip_rows","skip_rows_after_header","to_owned","","","","","truncate_ragged_lines","try_from","","","","","","","","try_into","","","","","","","","try_into_reader_with_file_path","try_parse_dates","type_id","","","","","","","","update_with_inference_result","vzip","","","","","","","","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_has_header","with_ignore_errors","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_parse_options","with_path","with_projection","with_quote_char","with_raise_if_empty","with_rechunk","with_row_index","with_sample_size","with_schema","with_schema_overwrite","with_separator","with_skip_rows","with_skip_rows_after_header","with_truncate_ragged_lines","with_try_parse_dates","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","","","","borrow_mut","","","","deref","","","","deref_mut","","","","drop","","","","dtype","from","","","","init","","","","init_buffers","into","","","","into_series","try_from","","","","try_into","","","","type_id","","","","vzip","","","","buf","time_unit","time_zone","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","","","batch_size","batched","borrow","","","","","borrow_mut","","","","","clone","","","clone_into","","","clone_to_uninit","","","date_format","datetime_format","default","","","deref","","","","","deref_mut","","","","","deserialize","","","drop","","","","","eq","","","equivalent","","","","","","","","","finish","","float_precision","float_scientific","fmt","","","from","","","","","hash","","","include_bom","","include_header","","init","","","","","into","","","","","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","","","serialize_options","time_format","to_owned","","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_float_scientific","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","FILE_CACHE","FILE_CACHE_PREFIX","FileCacheEntry","borrow","borrow_mut","deref","deref_mut","drop","from","get_env_file_cache_ttl","init","init_entries_from_uri_list","into","try_from","try_into","try_open_assume_latest","try_open_check_latest","type_id","update_ttl","uri","vzip","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","LZ4","ZSTD","__clone_box","","","","arrow_schema","batched","batched_async","borrow","","","","","","","","","","","borrow_mut","","","","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","compression","count_rows","data","default","","","","deref","","","","","","","","","","","deref_mut","","","","","","","","","","","deserialize","","","drop","","","","","","","","","","","eq","","","equivalent","","","","","","finish","","","","","finish_with_scan_ops","fmt","","","from","","","","","","","","","","","from_uri","hash","","","init","","","","","","","","","","","into","","","","","","","","","","","maintain_order","memory_mapped","metadata","new","","","","","new_async","schema","","serialize","","","set_rechunk","","to_owned","","","","to_writer","try_from","","","","","","","","","","","try_into","","","","","","","","","","","type_id","","","","","","","","","","","vzip","","","","","","","","","","","with_columns","","with_compat_level","","with_compression","","","with_extension","with_hive_partition_columns","with_include_file_path","with_n_rows","","with_predicate","with_projection","","","with_row_index","","","with_row_limit","write_batch","write_df_to_file","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","","","","","borrow_mut","","","","","clone","clone_into","clone_to_uninit","default","deref","","","","","deref_mut","","","","","deserialize","drop","","","","","eq","equivalent","","","finish","","fmt","from","","","","","hash","infer_schema_len","init","","","","","into","","","","","maintain_order","new","","","remove_bom","serialize","set_rechunk","to_owned","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_batch_size","with_ignore_errors","with_json_format","","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","Mapped","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","","deref_mut","drop","from","","init","into","into_mem_slice","to_bytes","to_file","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","_split_at_unchecked","arced","arr_from_iter","","arr_from_iter_with_dtype","","as_any","as_any_mut","borrow","","borrow_mut","","boxed","check_bound","clone","clone_into","clone_to_uninit","count","deref","","deref_mut","","drop","","dtype","eq","","fields","finish","fmt","from","","","","from_path","full_null","get_fields","infer_schema_len","init","","into","","into_data","into_iter","iter","len","low_memory","new","","new_empty","new_null","propagate_nulls","set_validity","slice","","slice_typed","slice_typed_unchecked","slice_unchecked","","sliced","sliced_unchecked","split_at_boxed","split_at_boxed_unchecked","take_validity","to_boxed","to_owned","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","try_arr_from_iter","","try_arr_from_iter_with_dtype","","try_from","","try_into","","try_new","type_id","","validity","","values","values_iter","vzip","","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_predicate","with_projection","with_rechunk","with_row_index","with_schema","with_schema_overwrite","with_validity","","with_validity_typed","metadata","read","write","FileMetadata","FileMetadataRef","ParquetStatistics","__clone_box","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","column_order","column_orders","created_by","deref","","deref_mut","","deserialize","distinct_count","drop","","eq","fmt","","from","","","init","","into","","key_value_metadata","","max_row_group_height","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","","try_from_thrift","try_into","","type_id","","version","vzip","","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","Prefiltered","RowGroups","__clone_box","","_internal","batched","","borrow","","","","","borrow_mut","","","","","clone","","clone_into","","clone_to_uninit","","default","deref","","","","","deref_mut","","","","","deserialize","","drop","","","","","eq","","equivalent","","","","","","finish","","finishes_this_batch","fmt","","from","","","","","from_uri","get_metadata","","hash","","init","","","","","into","","","","","is_finished","iter","low_memory","materialize_empty_df","new","","next_batches","num_rows","","parallel","read_parallel","","schema","","","","serialize","","set_low_memory","set_metadata","set_rechunk","","to_owned","","try_from","","","","","try_into","","","","","type_id","","","","","use_statistics","","","vzip","","","","","with_arrow_schema_projection","","with_columns","with_hive_partition_columns","","with_include_file_path","","with_predicate","","with_projection","","with_row_index","","with_slice","","Auto","Post","Pre","PrefilterMaskSetting","borrow","borrow_mut","calc_prefilter_cost","deref","deref_mut","drop","ensure_matching_dtypes_if_found","from","init","init_from_env","into","read_this_row_group","should_prefilter","to_deserializer","try_from","try_into","type_id","vzip","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIterColumns","Snappy","StatisticsOptions","Uncompressed","Zstd","ZstdLevel","__clone_box","","","","","","batched","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","compression","data_page_size","default","","","deref","","","","","","","","deref_mut","","","","","","","","deserialize","","","","","","distinct_count","drop","","","","","","","","empty","encode_and_compress","eq","","","","","","equivalent","","","","","","","","","","","","","","","","","","finish","","fmt","","","","","","from","","","","","","","","full","get_writer","hash","","","","","","init","","","","","","","","into","","","","","","","","is_empty","is_full","maintain_order","max_value","min_value","new","null_count","row_group_size","serialize","","","","","","set_parallel","statistics","to_owned","","","","","","to_writer","try_from","","","","","","","","try_into","","","","","","","","try_new","","","type_id","","","","","","","","vzip","","","","","","","","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_df_to_file","write_row_groups","write_partitioned_dataset","POLARS_TEMP_DIR_BASE_PATH","expand_paths","expand_paths_hive","expanded_from_single_directory","get_glob_start_idx","is_cloud_url","resolve_homedir","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","spawn_blocking","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","__clone_box","","apply_predicate","as_stats_evaluator","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","column_stats","deref","","deref_mut","","deserialize","","drop","","dtype","evaluate_io","field_name","fmt","","from","","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","","into","","live_variables","new","","null_count","num_rows","schema","serialize","","should_read","take_indices","to_max","to_min","to_min_max","to_owned","","try_from","","try_into","","type_id","","vzip","","with_schema","SerReader","SerWriter","cloud","finish","","new","","set_rechunk","","","write_partitioned_dataset","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","URL_ENCODE_CHAR_SET","byte_source","compression","get_reader_bytes","materialize_projection","overwrite_schema","slice","ByteSource","Cloud","DynByteSource","DynByteSourceBuilder","MemSlice","MemSliceByteSource","Mmap","ObjectStore","ObjectStoreByteSource","__clone_box","borrow","","","","borrow_mut","","","","clone","clone_into","clone_to_uninit","default","deref","","","","deref_mut","","","","drop","","","","fmt","from","","","","","","","get_range","","","","get_ranges","","","","get_size","","","","init","","","","into","","","","to_owned","try_build_from_path","try_from","","","","try_into","","","","type_id","","","","variant_name","vzip","","","","GZIP","SupportedCompression","ZLIB","ZSTD","borrow","borrow_mut","check","deref","deref_mut","drop","from","init","into","maybe_decompress_bytes","try_from","try_into","type_id","vzip","After","Before","Overlapping","SplitSlicePosition","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","split_slice_at_file","","try_from","try_into","type_id","vzip"],"q":[[0,"polars_io"],[86,"polars_io::avro"],[153,"polars_io::cloud"],[227,"polars_io::cloud::options"],[414,"polars_io::csv"],[416,"polars_io::csv::read"],[677,"polars_io::csv::read::buffer"],[751,"polars_io::csv::read::buffer::Buffer"],[754,"polars_io::csv::read::schema_inference"],[781,"polars_io::csv::write"],[926,"polars_io::file_cache"],[947,"polars_io::ipc"],[1186,"polars_io::json"],[1284,"polars_io::mmap"],[1306,"polars_io::ndjson"],[1308,"polars_io::ndjson::core"],[1412,"polars_io::parquet"],[1415,"polars_io::parquet::metadata"],[1468,"polars_io::parquet::read"],[1612,"polars_io::parquet::read::_internal"],[1634,"polars_io::parquet::write"],[1858,"polars_io::partition"],[1859,"polars_io::path_utils"],[1866,"polars_io::pl_async"],[1888,"polars_io::predicates"],[1956,"polars_io::prelude"],[1967,"polars_io::utils"],[1978,"polars_io::utils::byte_source"],[2059,"polars_io::utils::compression"],[2077,"polars_io::utils::slice"],[2096,"dyn_clone::sealed"],[2097,"polars_io::options"],[2098,"core::result"],[2099,"serde::de"],[2100,"polars_io::shared"],[2101,"polars_core::frame"],[2102,"polars_error"],[2103,"core::fmt"],[2104,"core::hash"],[2105,"std::io"],[2106,"polars_arrow::record_batch"],[2107,"core::option"],[2108,"serde::ser"],[2109,"core::any"],[2110,"polars_io::avro::read"],[2111,"polars_arrow::datatypes::schema"],[2112,"polars_io::avro::write"],[2113,"polars_core::schema"],[2114,"alloc::string"],[2115,"alloc::vec"],[2116,"polars_io::cloud::glob"],[2117,"object_store"],[2118,"alloc::sync"],[2119,"polars_io::cloud::polars_object_store"],[2120,"object_store::path"],[2121,"tokio::io::async_write"],[2122,"core::marker"],[2123,"polars_io::cloud::adaptors"],[2124,"std::io::error"],[2125,"crossterm::command"],[2126,"url"],[2127,"bytes::bytes"],[2128,"core::ops::range"],[2129,"core::ops::function"],[2130,"parquet_format_safe::thrift::varint::decode"],[2131,"object_store::aws::builder"],[2132,"object_store::azure::builder"],[2133,"object_store::gcp::builder"],[2134,"core::convert"],[2135,"core::iter::traits::collect"],[2136,"polars_io::csv::read::reader"],[2137,"alloc::boxed"],[2138,"polars_io::csv::read::read_impl::batched"],[2139,"polars_io::csv::read::options"],[2140,"std::path"],[2141,"polars_utils::pl_str"],[2142,"std::fs"],[2143,"polars_core::datatypes::dtype"],[2144,"polars_core::series"],[2145,"polars_utils::aliases"],[2146,"polars_io::csv::write::writer"],[2147,"polars_io::csv::write::options"],[2148,"core::num::nonzero"],[2149,"polars_io::file_cache::entry"],[2150,"polars_io::ipc::ipc_stream"],[2151,"polars_io::ipc::write"],[2152,"futures_io::if_std"],[2153,"polars_io::ipc::ipc_file"],[2154,"polars_io::ipc::ipc_reader_async"],[2155,"polars_arrow::io::ipc::read::file"],[2156,"polars_utils::mmap::private"],[2157,"polars_arrow::array::struct_"],[2158,"polars_arrow::array"],[2159,"polars_arrow::datatypes"],[2160,"polars_arrow::datatypes::field"],[2161,"polars_arrow::array::growable::structure"],[2162,"polars_arrow::array::struct_::mutable"],[2163,"polars_arrow::bitmap::immutable"],[2164,"polars_arrow::scalar"],[2165,"polars_arrow::array::struct_::iterator"],[2166,"polars_arrow::bitmap::utils::iterator"],[2167,"polars_arrow::bitmap::utils::zip_validity"],[2168,"polars_parquet::parquet::metadata::file_metadata"],[2169,"polars_parquet::parquet::metadata::column_order"],[2170,"polars_parquet::parquet::metadata::column_chunk_metadata"],[2171,"core::iter::traits::exact_size"],[2172,"polars_parquet::arrow::read::statistics"],[2173,"parquet_format_safe::parquet_format"],[2174,"polars_parquet::parquet::metadata::schema_descriptor"],[2175,"polars_parquet::parquet::error"],[2176,"polars_io::parquet::read::reader"],[2177,"polars_io::parquet::read::read_impl"],[2178,"polars_io::parquet::read::options"],[2179,"polars_parquet::parquet::metadata::row_metadata"],[2180,"polars_parquet::arrow::read::deserialize::utils::filter"],[2181,"polars_io::parquet::write::writer"],[2182,"polars_io::parquet::write::batched_writer"],[2183,"polars_io::parquet::write::options"],[2184,"polars_parquet::arrow::write"],[2185,"polars_parquet::parquet::write"],[2186,"core::iter::traits::iterator"],[2187,"polars_parquet::arrow::write::file"],[2188,"std::sync::mutex"],[2189,"core::future::future"],[2190,"tokio::runtime::task::join"],[2191,"polars_core::datatypes::field"],[2192,"avro_schema::file"],[2193,"polars_io::cloud::object_store_setup"],[2194,"polars_io::csv::read::parser"],[2195,"polars_io::file_cache::cache"],[2196,"polars_io::file_cache::utils"],[2197,"polars_io::parquet::read::utils"],[2198,"polars_io::parquet::read::predicates"],[2199,"polars_io::parquet::read::mmap"],[2200,"polars_io::utils::other"]],"i":"``````jl``1010101010``010101010010111000`AfAl323232`23232```3`10Bh4``````343434343343`43Cb````Cj0000Cd0Cl2102222102102102222210210221021021011210210210210210101````EbEjDj21020`2220102102211020101021020222`21021021021``0101210210210210211GfGd1`Gh2Gj0`21223133``2232223223300`00223332232112323233322Dh4234230142301420000304230423042030142301423042301423014233300044422203042301423142030423014230142030423042301423014230142301420000``Ij0``````IfIh2``01IbId324Hd00I`Hn24365710243657`443657436574365743``34361024365710243657436571024365743343657444333666555777424365710243655744436574`410243657102436574443442555103444344444`43436574443657310243657102436574310243657410243657443343344443443444344444434433Jj`0`00`0000000000000`00AGdAGfAGh32103210321032103321032103`210332103210321032103AGj00`Jf000000000`0000``000000000Kj```000``KfKh21Kb0Kd324103243243243242232410324103243241032432433322244410223241032432413131032410324231122223243232410324103241032410324111111111110```L`00000`0`000000000```````````Mb0LlLnM`3LbLd0MlMd3MnMj4Lf987:4362150987:987:987:987:733187:4362150987:4362150987:97:4362150987:97:777:::46250497:4362150987:397:4362150987:4362150987:7434621554697:46987:74362150987:4362150987:4362150987:4362150987:4625215144468468468807`Nl`0```Nd1NfNjNh342103333342103421033421033333203421033042103421033210`3034210342103421034210300200001K`0`0`00000000000Hh01111````Ob00000000Oj10111111001010111110101110110010111110011111111111111111111111111010110111110100000000000111``````A@nAAb1011111110101`0010010010101111000111110110101101ABj`00````00ABh1`ABbABfABd213402134343434402134021343402134343334442103402134121340213402134003`0202132102133422213402134021340213421302134212212121212121AC`00`00`000`0000`0`0000`ACl`0`00````0`00`ACj1ACnAD`ADbADdACfACh16754320167543267543267543267543266673016754320167543267543230167543230675432666777555444333222016754320167543230675432016754320167543233633136675432166754326016754320167543254201675432016754321111060``````````AEd0000000`00AEh1111`11`````AEnAF``Hf21212121211212121212022121222221212102121121AEl233332323232322```AfAl10111`````````````AFh``0`AFf0`0AFlAFj321032222310321032103221033332AFn21402140214214321433321432143214342143AG``00000000000`0000AGb00`000000000`00000","f":"``````{{bd}f}0``{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{j}}}j}{{{b{l}}}l}{{b{b{hc}}}f{}}0{bf}0``{{}l}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{j}}}Ab}{c{{A`{l}}}Ab}{nf}0`{{{b{j}}{b{j}}}Ad}{{{b{l}}{b{l}}}Ad}{{b{b{c}}}Ad{}}00000`{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{{{b{j}}{b{hAn}}}B`}{{{b{l}}{b{hAn}}}B`}{cc{}}0{{{b{j}}{b{hc}}}fBb}{{{b{l}}{b{hc}}}fBb}``{{}n}0{{}c{}}0`````{cAfBd}{cAlBf}{{{b{hBh}}}{{Aj{{Bl{Bj}}}}}}````````{{{b{j}}c}A`Bn}{{{b{l}}c}A`Bn}{bc{}}0{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0`{bC`}0`99{{{b{Cb}}Ahc}{{Aj{f}}}Bf}````````{{bd}f}{{{b{h{Cd{c}}}}}{{Aj{Cf}}}{BdCh}}{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00{{{b{Cj}}}Cj}{{b{b{hc}}}f{}}{bf}{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{nf}00{{{b{Cj}}{b{Cj}}}Ad}{{b{b{c}}}Ad{}}00{{{Cd{c}}}{{Aj{Ah}}}{BdCh}}{{{b{h{Cl{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{Cj}}{b{hAn}}}{{A`{fCn}}}}{cc{}}00{{{b{Cj}}{b{hc}}}fBb}{{}n}00{{}c{}}00{c{{Cd{c}}}{BdCh}}{c{{Cl{c}}}Bf}{{{b{h{Cd{c}}}}}{{Aj{D`}}}{BdCh}}{{{Cd{c}}Ad}{{Cd{c}}}{BdCh}}{bc{}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{bC`}00888{{{Cd{c}}{Bl{{Dd{Db}}}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}{Bl{Cj}}}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{n}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}Db}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{{Dd{n}}}}}{{Cd{c}}}{BdCh}}````{{bd}f}{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00`{{{b{Df}}{Bl{{b{Dh}}}}Ad}{{Aj{{E`{Dj{Dn{Dl}}}}}}}}{{{b{Eb}}}Eb}{{b{b{hc}}}f{}}{bf}{{}Dj}{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{{{b{Eb}}{b{Ed}}{b{hc}}}{{Aj{f}}}{EfEh}}{nf}{{{b{hEj}}}f}11{{{b{Dj}}{b{Dj}}}Ad}{{{b{h}}c}{{A`{{b{he}}El}}}En{}}`{{{b{hEj}}}{{F`{f}}}}{{{b{Dj}}{b{hAn}}}B`}{{{b{Eb}}{b{hAn}}}B`}{cc{}}00{{{b{Fb}}Ad}{{Aj{Dj}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{Ff{n}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Fd}}}}}}{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{{Dd{Db}}}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Fj}}}}{{}n}00{{}c{}}00{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{Ej}}}}{{{b{Df}}Ad}{{Aj{Dj}}}}{{{Dn{Dl}}}Eb}{{{Dn{Dl}}Ed}{{Aj{Ej}}}}{{{b{Df}}}{{Aj{Ed}}}}``{{{b{h}}c}{{A`{{b{he}}El}}}En{}}`{{{b{h}}g}{{A`{eEl}}}{}{}{{Fn{{b{hc}}}{{Fl{e}}}}}}{bc{}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{bC`}00;;;{{{b{hEj}}{b{{Fh{G`}}}}}{{F`{n}}}}{{{b{h}}c}{{A`{nEl}}}Gb}```````````````````````````````````````````````````````{{bd}f}000{{{b{Gd}}}{{b{Df}}}}{{{b{Gf}}}{{b{Df}}}}{{{b{Gh}}}{{b{Df}}}}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Dh}}{b{Df}}}{{Aj{{`{Dl}}}}}}000{{{b{Gd}}}Gd}{{{b{Dh}}}Dh}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{b{b{hc}}}f{}}000{bf}000{{}Dh}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Gd}}}Ab}{c{{A`{Dh}}}Ab}{c{{A`{Gf}}}Ab}{c{{A`{Gh}}}Ab}{nf}0000{{{b{Gd}}{b{Gd}}}Ad}{{{b{Dh}}{b{Dh}}}Ad}{{{b{Gj}}{b{Gj}}}Ad}{{{b{Gf}}{b{Gf}}}Ad}{{{b{Gh}}{b{Gh}}}Ad}{{b{b{c}}}Ad{}}00000000000`{{{b{Gd}}{b{hAn}}}{{A`{fCn}}}}{{{b{Dh}}{b{hAn}}}B`}{{{b{Gf}}{b{hAn}}}{{A`{fCn}}}}{{{b{Gh}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0000{{{b{Df}}}{{A`{Gd}}}}{{{b{Df}}}{{A`{Gjc}}}{}}{{{b{Df}}}{{A`{Gf}}}}{{{b{Df}}}{{A`{Gh}}}}{{{b{Df}}g}{{Aj{Dh}}}{{Gl{Df}}}{{Gn{Db}}}{{Hb{}{{H`{{E`{ce}}}}}}}}{{{b{Gd}}{b{hc}}}fBb}{{{b{Dh}}{b{hc}}}fBb}{{{b{Gf}}{b{hc}}}fBb}{{{b{Gh}}{b{hc}}}fBb}{{}n}0000{{}c{}}0000`{{{b{Gd}}c}A`Bn}{{{b{Dh}}c}A`Bn}{{{b{Gf}}c}A`Bn}{{{b{Gh}}c}A`Bn}{bc{}}000{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000088888{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Gdc}}}}}}}}{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Gfc}}}}}}}}{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Ghc}}}}}}}}{{Dhn}Dh}`````````````````{{bd}f}0000{{{Hd{c}}{Bl{{Dn{Hf}}}}}{{Hd{c}}}Hh}{{{Hd{{Hj{Hh}}}}{Bl{Hl}}}{{Aj{Hn}}}}{{{b{h{Hd{c}}}}}{{Aj{I`}}}Hh}{b{{b{c}}}{}}0000000{{{b{h}}}{{b{hc}}}{}}0000000``{{{b{Ib}}}Ib}{{{b{Id}}}Id}{{{b{If}}}If}{{{b{Ih}}}Ih}{{{b{Ij}}}Ij}{{b{b{hc}}}f{}}0000{bf}0000``{{{b{Il}}G`{Bl{G`}}{Bl{{b{Ih}}}}G`Ad}{{Aj{n}}}}{{{b{{Fh{G`}}}}G`{Bl{G`}}{Bl{{b{Ih}}}}G`Ad}{{Aj{n}}}}`{{}Ib}{{}Id}{{}If}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{Ib}}}Ab}{c{{A`{Id}}}Ab}{c{{A`{If}}}Ab}{c{{A`{Ih}}}Ab}{c{{A`{Ij}}}Ab}{nf}0000000```{{{b{Ib}}{b{Ib}}}Ad}{{{b{Id}}{b{Id}}}Ad}{{{b{If}}{b{If}}}Ad}{{{b{Ih}}{b{Ih}}}Ad}{{{b{Ij}}{b{Ij}}}Ad}{{b{b{c}}}Ad{}}00000000000000`{{{Hd{c}}}{{Aj{Ah}}}Hh}{{{b{Ib}}{b{hAn}}}B`}{{{b{Id}}{b{hAn}}}B`}{{{b{If}}{b{hAn}}}B`}{{{b{Ih}}{b{hAn}}}B`}{{{b{Ij}}{b{hAn}}}B`}{cc{}}000000{{{b{Df}}}Ih}1{{{b{Ib}}}{{Dn{Id}}}}`{{{b{Ib}}{b{hc}}}fBb}{{{b{Id}}{b{hc}}}fBb}{{{b{If}}{b{hc}}}fBb}{{{b{Ih}}{b{hc}}}fBb}{{{b{Ij}}{b{hc}}}fBb}```{{}n}0000000{{}c{}}0000000{{Ibc}{{Hd{c}}}Hh}`{{Ibc}Ib{{In{Id}{{Fl{Id}}}}}}```{c{{Hd{c}}}Hh};{J`Ih}{G`Ih}{{{b{hI`}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{hHn}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}`````````````{{{b{Ib}}c}A`Bn}{{{b{Id}}c}A`Bn}{{{b{If}}c}A`Bn}{{{b{Ih}}c}A`Bn}{{{b{Ij}}c}A`Bn}``{bc{}}0000`{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{{Ib{Bl{Jb}}}{{Aj{{Hd{Jd}}}}}}`{bC`}0000000{{{b{hIb}}{b{Jf}}}f}{{}c{}}0000000{{Ibn}Ib}{{Ib{Bl{{Dn{{Fh{J`}}}}}}}Ib}{{Id{Bl{c}}}Id{{Gn{Ih}}}}{{IdAd}Id}{{Ib{Bl{{Dn{{Dd{Jh}}}}}}}Ib}{{IdIf}Id}{{IdG`}Id}{{IbAd}Ib}0{{Ib{Bl{n}}}Ib}1500{{Id{Bl{Ij}}}Id}{{IbId}Ib}{{Ib{Bl{c}}}Ib{{Gn{Jb}}}}{{Ib{Bl{{Dn{{Dd{n}}}}}}}Ib}{{Id{Bl{G`}}}Id}66{{Ib{Bl{j}}}Ib}>{{Ib{Bl{Hl}}}Ib}09??<<`````````````````````{{{b{hJj}}{b{{Fh{G`}}}}AdAdAd}{{Aj{f}}}}{{{b{hJj}}Ad}f}{b{{b{c}}}{}}000{{{b{h}}}{{b{hc}}}{}}000{n{{b{c}}}{}}000{n{{b{hc}}}{}}000{nf}000{{{b{Jj}}}Jh}{cc{}}000{{}n}000{{{b{{Fh{n}}}}n{b{D`}}{Bl{G`}}IfAd}{{Aj{{Dd{Jj}}}}}}{{}c{}}000{Jj{{Aj{Jl}}}}{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{bC`}0004444````{{bd}f}>={{{b{Jf}}}Jf}{{b{b{hc}}}f{}}{bf}{{}Jf}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{{{b{{Jn{Jh}}}}}Jh}{{{b{Jf}}{b{hAn}}}B`}{cc{}}{{{b{Jf}}}n}{{{b{Jf}}}Hl}{{{b{Df}}AdAd}Jh}{{{b{K`}}G`{Bl{n}}Ad{Bl{{b{D`}}}}nn{Bl{{b{Ih}}}}{Bl{G`}}G`{Bl{{b{Ij}}}}AdAd{b{h{Bl{n}}}}Ad}{{Aj{{E`{D`nn}}}}}}{{}n}{{}c{}}{bc{}}{c{{A`{e}}}{}{}}{{{b{K`}}{b{Ib}}}{{Aj{Jf}}}}{{}{{A`{c}}}{}}{bC`}5{{JfHl}Jf}`````````{{bd}f}00`{{{Kb{c}}{b{D`}}}{{Aj{{Kd{c}}}}}Bf}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Kf}}}Kf}{{{b{Kh}}}Kh}{{{b{Kj}}}Kj}{{b{b{hc}}}f{}}00{bf}00``{{}Kf}{{}Kh}{{}Kj}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Kf}}}Ab}{c{{A`{Kh}}}Ab}{c{{A`{Kj}}}Ab}{nf}0000{{{b{Kf}}{b{Kf}}}Ad}{{{b{Kh}}{b{Kh}}}Ad}{{{b{Kj}}{b{Kj}}}Ad}{{b{b{c}}}Ad{}}00000000{{{b{h{Kb{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Kd{c}}}}}{{Aj{f}}}Bf}``{{{b{Kf}}{b{hAn}}}B`}{{{b{Kh}}{b{hAn}}}B`}{{{b{Kj}}{b{hAn}}}B`}{cc{}}0000{{{b{Kf}}{b{hc}}}fBb}{{{b{Kh}}{b{hc}}}fBb}{{{b{Kj}}{b{hc}}}fBb}{{{Kb{c}}Ad}{{Kb{c}}}Bf}`0`{{}n}0000{{}c{}}0000``{{{Kb{c}}n}{{Kb{c}}}Bf}{c{{Kb{c}}}Bf}````{{{b{Kf}}c}A`Bn}{{{b{Kh}}c}A`Bn}{{{b{Kj}}c}A`Bn}``{bc{}}00{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000099999{{{Kb{c}}Kl}{{Kb{c}}}Bf}{{{Kb{c}}{Bl{Db}}}{{Kb{c}}}Bf}0{{{Kb{c}}{Bl{n}}}{{Kb{c}}}Bf}{{{Kb{c}}{Bl{Ad}}}{{Kb{c}}}Bf}{{{Kb{c}}Db}{{Kb{c}}}Bf}0{{{Kb{c}}G`}{{Kb{c}}}Bf}{{{Kb{c}}Kj}{{Kb{c}}}Bf}15{{{b{h{Kd{c}}}}{b{Ah}}}{{Aj{f}}}Bf}```{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}Kn}{{}n}{{{b{{Fh{{Dn{Df}}}}}}{Bl{{b{Dh}}}}}{{Aj{{Dd{{Dn{L`}}}}}}}}{{}c{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{{{b{L`}}}{{Aj{Jd}}}}0{bC`}{{{b{L`}}Kn}f}{{{b{L`}}}{{b{{Dn{Df}}}}}}6`````````````{{bd}f}000{{{b{h{Lb{c}}}}}{{Aj{Cf}}}Bd}{{{Ld{c}}{b{D`}}}{{Aj{{Lf{c}}}}}Bf}{{{Ld{c}}{b{D`}}}{{Aj{{`{c}}}}}{LhEhLj}}{b{{b{c}}}{}}0000000000{{{b{h}}}{{b{hc}}}{}}0000000000{{{b{Ll}}}Ll}{{{b{Ln}}}Ln}{{{b{M`}}}M`}{{{b{Mb}}}Mb}{{b{b{hc}}}f{}}000{bf}000`{{{b{Md}}{Bl{{b{Mf}}}}}{{Aj{Mh}}}}{{{b{Md}}{Bl{{b{Mf}}}}LnAd}{{Aj{Ah}}}}{{}Mj}{{}Ln}{{}M`}{{}Mb}{n{{b{c}}}{}}0000000000{n{{b{hc}}}{}}0000000000{c{{A`{Ll}}}Ab}{c{{A`{M`}}}Ab}{c{{A`{Mb}}}Ab}{nf}0000000000{{{b{Ll}}{b{Ll}}}Ad}{{{b{M`}}{b{M`}}}Ad}{{{b{Mb}}{b{Mb}}}Ad}{{b{b{c}}}Ad{}}00000{{{Ml{c}}}{{Aj{Ah}}}Hh}{{{Lb{c}}}{{Aj{Ah}}}Bd}{{{b{h{Mn{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Ld{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Lf{c}}}}}{{Aj{f}}}Bf}{{{Ml{c}}{Bl{{Dn{Hf}}}}Ad}{{Aj{Ah}}}Hh}{{{b{Ll}}{b{hAn}}}B`}{{{b{M`}}{b{hAn}}}B`}{{{b{Mb}}{b{hAn}}}B`}{cc{}}0000000000{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{Md}}}}{{{b{Ll}}{b{hc}}}fBb}{{{b{M`}}{b{hc}}}fBb}{{{b{Mb}}{b{hc}}}fBb}{{}n}0000000000{{}c{}}0000000000`{{{Ml{c}}{Bl{Jb}}}{{Ml{c}}}Hh}{{{b{Md}}}{{Aj{Mf}}}}{c{{Ml{c}}}Hh}{c{{Lb{c}}}Bd}{c{{Mn{c}}}Bf}{{}Mj}{c{{Ld{c}}}Bf}{c{{Ld{c}}}{LhEhLj}}{{{b{h{Ml{c}}}}}{{Aj{N`}}}Hh}{{{b{h{Lb{c}}}}}{{Aj{D`}}}Bd}{{{b{Ll}}c}A`Bn}{{{b{M`}}c}A`Bn}{{{b{Mb}}c}A`Bn}{{{Ml{c}}Ad}{{Ml{c}}}Hh}{{{Lb{c}}Ad}{{Lb{c}}}Bd}{bc{}}000{{{b{M`}}c}{{Ld{c}}}Bf}{c{{A`{e}}}{}{}}0000000000{{}{{A`{c}}}{}}0000000000{bC`}0000000000{{}c{}}0000000000{{{Ml{c}}{Bl{{Dd{Db}}}}}{{Ml{c}}}Hh}{{{Lb{c}}{Bl{{Dd{Db}}}}}{{Lb{c}}}Bd}{{{Mn{c}}Nb}{{Mn{c}}}{}}{{{Ld{c}}Nb}{{Ld{c}}}Bf}{{{Mn{c}}{Bl{Mb}}}{{Mn{c}}}{}}{{Mj{Bl{Mb}}}Mj}{{{Ld{c}}{Bl{Mb}}}{{Ld{c}}}Bf}{{MjJb}Mj}{{{Ml{c}}{Bl{{Dd{Jl}}}}}{{Ml{c}}}Hh}{{{Ml{c}}{Bl{{E`{J`{Dn{Df}}}}}}}{{Ml{c}}}Hh}{{{Ml{c}}{Bl{n}}}{{Ml{c}}}Hh}{{{Lb{c}}{Bl{n}}}{{Lb{c}}}Bd}{{Lnc}Ln{{Gn{{Bl{{Dn{Hf}}}}}}}}{{{Ml{c}}{Bl{{Dd{n}}}}}{{Ml{c}}}Hh}{{{Lb{c}}{Bl{{Dd{n}}}}}{{Lb{c}}}Bd}{{Ln{Bl{{Dn{{Fh{J`}}}}}}}Ln}{{{Ml{c}}{Bl{j}}}{{Ml{c}}}Hh}{{{Lb{c}}{Bl{j}}}{{Lb{c}}}Bd}{{Lnc}Ln{{Gn{{Bl{j}}}}}}{{Lnc}Ln{{Gn{{Bl{n}}}}}}{{{b{h{Lf{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{M`}}Ahc}{{Aj{f}}}Bf}```````{{bd}f}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Nd}}}Nd}{{b{b{hc}}}f{}}{bf}{{}Nd}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Nd}}}Ab}{nf}0000{{{b{Nd}}{b{Nd}}}Ad}{{b{b{c}}}Ad{}}00{{{b{h{Nf{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{Nh{c}}}{{Aj{Ah}}}Hh}{{{b{Nd}}{b{hAn}}}B`}{cc{}}0000{{{b{Nd}}{b{hc}}}fBb}{{{Nh{c}}{Bl{Kl}}}{{Nh{c}}}Hh}{{}n}0000{{}c{}}0000`{c{{Nf{c}}}Bf}{c{{Nj{c}}}Bf}{c{{Nh{c}}}Hh}{{{b{{Fh{G`}}}}}{{Aj{{b{{Fh{G`}}}}}}}}{{{b{Nd}}c}A`Bn}{{{Nh{c}}Ad}{{Nh{c}}}Hh}{bc{}}{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}0000:::::{{{Nh{c}}Kl}{{Nh{c}}}Hh}5{{{Nf{c}}Nl}{{Nf{c}}}Bf}{{{Nh{c}}Nl}{{Nh{c}}}Hh}{{{Nh{c}}{Bl{{Dd{J`}}}}}{{Nh{c}}}Hh}{{{Nh{c}}Hl}{{Nh{c}}}Hh}{{{Nh{c}}{b{D`}}}{{Nh{c}}}Hh}{{{b{h{Nj{c}}}}{b{Ah}}}{{Aj{f}}}Bf}`````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{{{b{K`}}}{{b{{Fh{G`}}}}}}{n{{b{hc}}}{}}{nf}{cc{}}{{{b{hc}}}K`Hh}{{}n}{{}c{}}{K`Nn}{{{b{Hh}}}{{Bl{{b{{Fh{G`}}}}}}}}{{{b{Hh}}}{{Bl{{b{Jd}}}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}6`{{{b{hc}}{Bl{Kl}}}{{Aj{D`}}}O`}``{{bd}f}{{{b{Ob}}n}{{E`{ObOb}}}}{Ob{{Dn{Od}}}}{cOb{{Hb{}{{H`{{Bl{f}}}}}}}}{cOb{{Hb{}{{H`{f}}}}}}{{Ofc}Ob{{Hb{}{{H`{f}}}}}}{{Ofc}Ob{{Hb{}{{H`{{Bl{f}}}}}}}}{{{b{Ob}}}{{b{Oh}}}}{{{b{hOb}}}{{b{hOh}}}}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{Ob{{Hj{Od}}}}{{{b{Ob}}n}Ad}{{{b{Ob}}}Ob}{{b{b{hc}}}f{}}{bf}{{{Oj{c}}}{{Aj{n}}}Hh}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{nf}0{{{b{Ob}}}{{b{Of}}}}{{{b{Ob}}{b{{b{Od}}}}}Ad}{{{b{Ob}}{b{Ob}}}Ad}{{{b{Ob}}}{{b{{Fh{Ol}}}}}}{{{Oj{c}}}{{Aj{Ah}}}Hh}{{{b{Ob}}{b{hAn}}}{{A`{fCn}}}}{cc{}}{OnOb}1{A@`Ob}{c{{Aj{{Oj{Jd}}}}}{{Gn{Jb}}}}{{nOf}Ob}{{{b{Of}}}{{b{{Fh{Ol}}}}}}{{{Oj{c}}{Bl{Kl}}}{{Oj{c}}}Hh}{{}n}0{{}c{}}0{Ob{{E`{{Dd{Ol}}{Dd{{Hj{Od}}}}{Bl{A@b}}}}}}{{{b{Ob}}}}{{{b{Ob}}}{{A@j{{Dd{{Hj{A@d}}}}A@fA@h}}}}{{{b{Ob}}}n}{{{Oj{c}}Ad}{{Oj{c}}}Hh}{c{{Oj{c}}}Hh}{{Of{Dd{{Hj{Od}}}}{Bl{A@b}}}Ob}{OfOb}{{Ofn}Ob}{{{b{Ob}}}Ob}{{{b{hOb}}{Bl{A@b}}}f}{{{b{hOb}}nn}f}0{{bnn}c{}}011{{Obnn}Ob}0{{{b{Ob}}n}{{E`{{Hj{Od}}{Hj{Od}}}}}}0{{{b{hOb}}}{{Bl{A@b}}}}{{{b{Ob}}}{{Hj{Od}}}}{bc{}}{{{b{Ob}}{b{Ob}}}A@b}{{{b{Ob}}b}A@b}10{e{{A`{Obc}}}{}{{Hb{}{{H`{{A`{{Bl{f}}c}}}}}}}}{e{{A`{Obc}}}{}{{Hb{}{{H`{{A`{fc}}}}}}}}{{Ofe}{{A`{Obc}}}{}{{Hb{}{{H`{{A`{fc}}}}}}}}{{Ofe}{{A`{Obc}}}{}{{Hb{}{{H`{{A`{{Bl{f}}c}}}}}}}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{{Of{Dd{{Hj{Od}}}}{Bl{A@b}}}{{A`{ObA@l}}}}{bC`}0{{{b{Ob}}}{{Bl{{b{A@b}}}}}}0{{{b{Ob}}}{{b{{Fh{{Hj{Od}}}}}}}}{{{b{Ob}}}A@f}{{}c{}}0{{{Oj{c}}{Bl{Kl}}}{{Oj{c}}}Hh}{{{Oj{c}}Ad}{{Oj{c}}}Hh}{{{Oj{c}}{Bl{n}}}{{Oj{c}}}Hh}0{{{Oj{c}}{Bl{e}}}{{Oj{c}}}Hh{{Gn{Jb}}}}{{{Oj{c}}{Bl{{Dn{Hf}}}}}{{Oj{c}}}Hh}{{{Oj{c}}{Bl{{Dn{{Fh{J`}}}}}}}{{Oj{c}}}Hh}4{{{Oj{c}}{Bl{{b{hj}}}}}{{Oj{c}}}Hh}{{{Oj{c}}Hl}{{Oj{c}}}Hh}{{{Oj{c}}{b{D`}}}{{Oj{c}}}Hh}{{{b{Ob}}{Bl{A@b}}}{{Hj{Od}}}}{{Ob{Bl{A@b}}}Ob}0``````{{bd}f}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{A@n}}}A@n}{{b{b{hc}}}f{}}{bf}{{{b{A@n}}n}AA`}``{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{{{b{Ol}}c}{{A`{AAbA@l}}}{{AAf{}{{H`{{b{AAd}}}}}}}}`{nf}0{{{b{AAb}}{b{AAb}}}Ad}{{{b{AAb}}{b{hAn}}}{{A`{fCn}}}}{{{b{A@n}}{b{hAn}}}{{A`{fCn}}}}{AAhAAb}{cc{}}0{{}n}0{{}c{}}0{{{b{A@n}}}{{b{{Bl{{Dd{AAj}}}}}}}}```````{{{b{A@n}}}{{b{AAl}}}}`{bc{}}{c{{A`{e}}}{}{}}0{AAn{{A`{A@nAB`}}}}{{}{{A`{c}}}{}}0{bC`}0`77``````````{{bd}f}0`{{{ABb{c}}n}{{Aj{ABd}}}Hh}{{ABfn}{{Aj{ABd}}}}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{ABh}}}ABh}{{{b{ABj}}}ABj}{{b{b{hc}}}f{}}0{bf}0{{}ABj}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{ABh}}}Ab}{c{{A`{ABj}}}Ab}{nf}0000{{{b{ABh}}{b{ABh}}}Ad}{{{b{ABj}}{b{ABj}}}Ad}{{b{b{c}}}Ad{}}00000{{{ABb{c}}}{{Aj{Ah}}}Hh}{ABf{{Aj{Ah}}}}{{{b{ABd}}n}Ad}{{{b{ABh}}{b{hAn}}}B`}{{{b{ABj}}{b{hAn}}}B`}{cc{}}0000{{{b{Df}}{Bl{{b{Dh}}}}{Bl{ABl}}}{{Aj{ABf}}}}{{{b{h{ABb{c}}}}}{{Aj{{b{ABl}}}}}Hh}{{{b{hABf}}}{{Aj{{b{ABl}}}}}}{{{b{ABh}}{b{hc}}}fBb}{{{b{ABj}}{b{hc}}}fBb}{{}n}0000{{}c{}}0000{{{b{ABd}}}Ad}``{{{Bl{{b{{Fh{n}}}}}}{b{Cf}}{Bl{{b{{Fh{Jl}}}}}}{Bl{{b{j}}}}}Ah}`{c{{ABb{c}}}Hh}{{{b{hABd}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{h{ABb{c}}}}}{{Aj{n}}}Hh}{{{b{hABf}}}{{Aj{n}}}}`{{{ABb{c}}ABj}{{ABb{c}}}Hh}{{ABfABj}ABf}{{{b{ABd}}}{{b{N`}}}}{{{b{h{ABb{c}}}}}{{Aj{N`}}}Hh}{{{b{hABf}}}{{Aj{N`}}}}`{{{b{ABh}}c}A`Bn}{{{b{ABj}}c}A`Bn}{{{ABb{c}}Ad}{{ABb{c}}}Hh}{{{b{h{ABb{c}}}}ABl}fHh}1{{ABfAd}ABf}{bc{}}0{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000064`{{}c{}}0000{{{ABb{c}}{b{{Dn{Cf}}}}{Bl{{b{Cf}}}}Ad}{{Aj{{ABb{c}}}}}Hh}{{ABf{b{{Dn{Cf}}}}{Bl{{b{Cf}}}}Ad}{{Aj{ABf}}}}{{{ABb{c}}{Bl{{Dd{Db}}}}}{{ABb{c}}}Hh}{{{ABb{c}}{Bl{{Dd{Jl}}}}}{{ABb{c}}}Hh}{{ABf{Bl{{Dd{Jl}}}}}ABf}{{{ABb{c}}{Bl{{E`{J`{Dn{Df}}}}}}}{{ABb{c}}}Hh}{{ABf{Bl{{E`{J`{Dn{Df}}}}}}}ABf}{{{ABb{c}}{Bl{{Dn{Hf}}}}}{{ABb{c}}}Hh}{{ABf{Bl{{Dn{Hf}}}}}ABf}{{{ABb{c}}{Bl{{Dd{n}}}}}{{ABb{c}}}Hh}{{ABf{Bl{{Dd{n}}}}}ABf}{{{ABb{c}}{Bl{j}}}{{ABb{c}}}Hh}{{ABf{Bl{j}}}ABf}{{{ABb{c}}{Bl{{E`{nn}}}}}{{ABb{c}}}Hh}{{ABf{Bl{{E`{nn}}}}}ABf}````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{A@b}}}ABn}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{{{b{Cf}}{b{Cf}}}{{Aj{f}}}}{cc{}}{{}n}{{}AC`}{{}c{}}{{{Bl{{b{Hf}}}}{b{ACb}}{b{Cf}}}{{Aj{Ad}}}}{{{b{AC`}}ABn{b{Of}}}Ad}{{{Dd{{E`{{b{AAd}}Nn}}}}Ol{Bl{ACd}}}{{Aj{{Hj{Od}}}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}6````````````````{{bd}f}00000{{{ACf{c}}{b{D`}}}{{Aj{{ACh{c}}}}}Bf}{b{{b{c}}}{}}0000000{{{b{h}}}{{b{hc}}}{}}0000000{{{b{ACj}}}ACj}{{{b{ACl}}}ACl}{{{b{ACn}}}ACn}{{{b{AD`}}}AD`}{{{b{ADb}}}ADb}{{{b{ADd}}}ADd}{{b{b{hc}}}f{}}00000{bf}00000``{{}ACj}{{}ACl}{{}ADb}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{ACj}}}Ab}{c{{A`{ACl}}}Ab}{c{{A`{ACn}}}Ab}{c{{A`{AD`}}}Ab}{c{{A`{ADb}}}Ab}{c{{A`{ADd}}}Ab}`{nf}00000009{{{b{{ACh{c}}}}{b{Ah}}}{{`{{ADh{}{{H`{{Aj{{ADf{A@l}}}}}}}}}}}Bf}{{{b{ACj}}{b{ACj}}}Ad}{{{b{ACl}}{b{ACl}}}Ad}{{{b{ACn}}{b{ACn}}}Ad}{{{b{AD`}}{b{AD`}}}Ad}{{{b{ADb}}{b{ADb}}}Ad}{{{b{ADd}}{b{ADd}}}Ad}{{b{b{c}}}Ad{}}00000000000000000{{{b{{ACh{c}}}}}{{Aj{Kn}}}Bf}{{{ACf{c}}{b{hAh}}}{{Aj{Kn}}}Bf}{{{b{ACj}}{b{hAn}}}B`}{{{b{ACl}}{b{hAn}}}B`}{{{b{ACn}}{b{hAn}}}B`}{{{b{AD`}}{b{hAn}}}B`}{{{b{ADb}}{b{hAn}}}{{A`{fCn}}}}{{{b{ADd}}{b{hAn}}}B`}{cc{}}0000000{{}ADb}{{{b{{ACh{c}}}}}{{b{{ADl{{ADj{c}}}}}}}Bf}{{{b{ACj}}{b{hc}}}fBb}{{{b{ACl}}{b{hc}}}fBb}{{{b{ACn}}{b{hc}}}fBb}{{{b{AD`}}{b{hc}}}fBb}{{{b{ADb}}{b{hc}}}fBb}{{{b{ADd}}{b{hc}}}fBb}{{}n}0000000{{}c{}}0000000{{{b{ADb}}}Ad}0```{c{{ACf{c}}}{BfBf}}``{{{b{ACj}}c}A`Bn}{{{b{ACl}}c}A`Bn}{{{b{ACn}}c}A`Bn}{{{b{AD`}}c}A`Bn}{{{b{ADb}}c}A`Bn}{{{b{ADd}}c}A`Bn}{{{ACf{c}}Ad}{{ACf{c}}}Bf}`{bc{}}00000{{{b{ACj}}c}{{ACf{c}}}Bf}{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{G`{{Aj{ACn}}}}{ADn{{Aj{AD`}}}}{AE`{{Aj{ADd}}}}{bC`}0000000{{}c{}}0000000{{{ACf{c}}ACl}{{ACf{c}}}Bf}{{{ACf{c}}{Bl{n}}}{{ACf{c}}}Bf}0{{{ACf{c}}ADb}{{ACf{c}}}Bf}{{{b{h{ACh{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{ACj}}Ahc}{{Aj{f}}}Bf}{{{b{{ACh{c}}}}{Dd{{ADf{A@l}}}}}{{Aj{f}}}Bf}{{{b{hAh}}{b{Il}}e{b{g}}n}{{Aj{f}}}{{Gn{J`}}}{{Hb{}{{H`{c}}}}}{CbLjAEb}}`{{{b{{Fh{Jb}}}}Ad{Bl{{b{Dh}}}}}{{Aj{{Dn{{Fh{Jb}}}}}}}}{{{b{{Fh{Jb}}}}Ad{Bl{{b{Dh}}}}Ad}{{Aj{{E`{{Dn{{Fh{Jb}}}}n}}}}}}{{{b{{Fh{c}}}}{b{{Fh{c}}}}}Ad{{Gl{Il}}}}{{{b{{Fh{G`}}}}}{{Bl{n}}}}{cAd{{Gl{Il}}}}{{{b{Il}}}Jb}``{{{b{AEd}}c}{}AEf}{{{b{AEd}}c}{}{AEfLj}}{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}{{b{AEd}}}}{{}n}{{}c{}}{{{b{AEh}}}Kn}{{{b{AEd}}c}AEj{AEfLj}}{{{b{AEd}}e}{{AEj{c}}}Lj{{Fn{}{{Fl{c}}}}Lj}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{{ADne}{}AEf{{Fn{}{{Fl{c}}}}}}{bC`}71````{{bd}f}0{{{b{hAh}}{Bl{{b{Hf}}}}Ad}{{Aj{f}}}}{{{b{Hf}}}{{Bl{{b{AEl}}}}}}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{AEn}}}AEn}{{{b{AF`}}}AF`}{{b{b{hc}}}f{}}0{bf}0{{{b{AF`}}}{{b{{Fh{AEn}}}}}}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{AEn}}}Ab}{c{{A`{AF`}}}Ab}{nf}0{{{b{AEn}}}{{b{Jh}}}}{{{b{Hf}}{b{Ah}}}{{Aj{Jl}}}}{{{b{AEn}}}{{b{J`}}}}{{{b{AEn}}{b{hAn}}}B`}{{{b{AF`}}{b{hAn}}}B`}{cc{}}0{JlAEn}{AFbAEn}{{{b{AEn}}}{{Bl{{b{Jl}}}}}}00{{{b{AF`}}{b{Df}}}{{Aj{{b{AEn}}}}}}{{}n}0{{}c{}}0{{{b{Hf}}}{{Bl{{Dd{J`}}}}}}{{AFb{Bl{Jl}}{Bl{Jl}}{Bl{Jl}}}AEn}{{Hl{Dd{AEn}}{Bl{n}}}AF`}{{{b{AEn}}}{{Bl{n}}}}{{{b{AF`}}}{{Bl{n}}}}{{{b{AF`}}}{{b{Hl}}}}{{{b{AEn}}c}A`Bn}{{{b{AF`}}c}A`Bn}{{{b{AEl}}{b{AF`}}}{{Aj{Ad}}}}{{{b{hAF`}}{b{{Fh{n}}}}}f}=={{{b{AEn}}}{{Bl{Jl}}}}{bc{}}0{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{bC`}0??{{{b{hAF`}}Hl}f}```{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{cAfBd}{cAlBf}{{AfAd}Af}00````````{{{b{hc}}}{{Aj{K`}}}{BdHhAFd}}{{{Bl{{b{{Fh{J`}}}}}}{b{D`}}{Bl{{b{{Fh{Jl}}}}}}Ad}{{Bl{{Dd{n}}}}}}{{{b{hD`}}{b{D`}}}{{Aj{f}}}}``````````{{bd}f}{b{{b{c}}}{}}000{{{b{h}}}{{b{hc}}}{}}000{{{b{AFf}}}AFf}{{b{b{hc}}}f{}}{bf}{{}AFh}{n{{b{c}}}{}}000{n{{b{hc}}}{}}000{nf}000{{{b{AFf}}{b{hAn}}}B`}{cc{}}0{NnAFh}{AFjAFh}{AFlAFh}33{{{b{AFn}}{Ff{n}}}{{Aj{Nn}}}}{{{b{AFl}}{Ff{n}}}{{Aj{Nn}}}}{{{b{AFj}}{Ff{n}}}{{Aj{Nn}}}}{{{b{AFh}}{Ff{n}}}{{Aj{Nn}}}}{{{b{AFn}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Nn}}}}}}{{{b{AFl}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Nn}}}}}}{{{b{AFj}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Nn}}}}}}{{{b{AFh}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Nn}}}}}}{{{b{AFn}}}{{Aj{n}}}}{{{b{AFl}}}{{Aj{n}}}}{{{b{AFj}}}{{Aj{n}}}}{{{b{AFh}}}{{Aj{n}}}}{{}n}000{{}c{}}000{bc{}}{{{b{AFf}}{b{Df}}{Bl{{b{Dh}}}}}{{Aj{AFh}}}}{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{bC`}000{{{b{AFh}}}{{b{Df}}}}6666````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{{Fh{G`}}}}}{{Bl{AG`}}}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}>={{{b{{Fh{G`}}}}{b{h{Dd{G`}}}}}{{Aj{{b{{Fh{G`}}}}}}}};:9>````76432{{{b{AGb}}{b{hAn}}}B`}2{{}n}{{}c{}}{{{b{hn}}nnn}{{E`{nn}}}}{{nn{Ff{n}}}AGb}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}5","D":"D@`","p":[[1,"reference"],[5,"Private",2096],[1,"unit"],[0,"mut"],[5,"RowIndex",0,2097],[5,"HiveOptions",0,2097],[1,"usize"],[6,"Result",2098],[10,"Deserializer",2099],[1,"bool"],[10,"SerReader",1956,2100],[5,"DataFrame",2101],[8,"PolarsResult",2102],[10,"SerWriter",1956,2100],[5,"Formatter",2103],[8,"Result",2103],[10,"Hasher",2104],[10,"Read",2105],[10,"Write",2105],[10,"ArrowReader",0,2100],[8,"RecordBatch",2106],[6,"Option",2107],[10,"Serializer",2108],[5,"TypeId",2109],[10,"WriteDataFrameToFile",0,2100],[5,"AvroReader",86,2110],[8,"ArrowSchema",2111],[10,"Seek",2105],[6,"AvroCompression",86],[5,"AvroWriter",86,2112],[5,"Error",2103],[8,"Schema",2113],[5,"String",2114],[5,"Vec",2115],[1,"str"],[5,"CloudOptions",227],[5,"CloudLocation",153,2116],[10,"ObjectStore",2117],[5,"Arc",2118],[1,"tuple"],[5,"PolarsObjectStore",153,2119],[5,"Path",2120],[10,"AsyncWrite",2121],[10,"Unpin",2122],[5,"CloudWriter",153,2123],[5,"Error",2124],[10,"Command",2125],[8,"Result",2124],[5,"Url",2126],[5,"Bytes",2127],[5,"Range",2128],[1,"slice"],[5,"ObjectMeta",2117],[17,"Output"],[10,"FnOnce",2129],[1,"u8"],[10,"VarInt",2130],[6,"AmazonS3ConfigKey",227,2131],[6,"AzureConfigKey",227,2132],[6,"GoogleConfigKey",227,2133],[6,"CloudType",227],[10,"AsRef",2134],[10,"Into",2134],[17,"Item"],[10,"IntoIterator",2135],[5,"CsvReader",416,2136],[10,"PhysicalIoExpr",1888],[10,"MmapBytesReader",1284],[5,"Box",2137],[8,"SchemaRef",2113],[5,"OwnedBatchedCsvReader",416,2138],[5,"BatchedCsvReader",416,2138],[5,"CsvReadOptions",416,2139],[5,"CsvParseOptions",416,2139],[6,"CsvEncoding",416,2139],[6,"CommentPrefix",416,2139],[6,"NullValues",416,2139],[5,"Path",2140],[10,"Fn",2129],[5,"PlSmallStr",2141],[5,"PathBuf",2140],[5,"File",2142],[5,"SchemaInferenceResult",754],[6,"DataType",2143],[6,"Buffer",677],[5,"Series",2144],[8,"PlHashSet",2145],[6,"ReaderBytes",1284],[5,"CsvWriter",781,2146],[5,"BatchedWriter",781,2146],[5,"CsvWriterOptions",781,2147],[5,"SerializeOptions",781,2147],[6,"QuoteStyle",781,2147],[8,"NonZeroUsize",2148],[1,"u64"],[5,"FileCacheEntry",926,2149],[5,"IpcStreamReader",947,2150],[5,"IpcWriter",947,2151],[5,"BatchedWriter",947,2151],[10,"AsyncWrite",2152],[10,"Send",2122],[5,"IpcScanOptions",947,2153],[5,"IpcReadOptions",947,2154],[5,"IpcWriterOptions",947,2151],[6,"IpcCompression",947,2151],[5,"IpcReaderAsync",947,2154],[5,"FileMetadata",2155],[1,"i64"],[5,"IpcStreamWriterOption",947,2150],[5,"IpcReader",947,2153],[5,"IpcStreamWriter",947,2150],[8,"ArrowSchemaRef",2111],[5,"CompatLevel",2143],[5,"JsonWriterOptions",1186],[5,"JsonWriter",1186],[5,"JsonReader",1186],[5,"BatchedWriter",1186],[6,"JsonFormat",1186],[5,"MemSlice",2156],[10,"BufRead",2105],[5,"StructArray",1308,2157],[10,"Array",2158],[6,"ArrowDataType",2159],[10,"Any",2109],[5,"JsonLineReader",1308],[5,"Field",2160],[5,"GrowableStruct",2161],[5,"MutableStructArray",2162],[5,"Bitmap",2163],[10,"Scalar",2164],[5,"StructValueIter",2165],[5,"BitmapIter",2166],[6,"ZipValidity",2167],[6,"PolarsError",2102],[5,"FileMetadata",1415,2168],[6,"ColumnOrder",2169],[5,"ParquetStatistics",1415],[5,"ColumnChunkMetadata",2170],[10,"ExactSizeIterator",2171],[5,"MutableStatistics",2172],[5,"KeyValue",2173],[5,"SchemaDescriptor",2174],[5,"FileMetaData",2173],[6,"ParquetError",2175],[5,"ParquetReader",1468,2176],[5,"BatchedParquetReader",1468,2177],[5,"ParquetAsyncReader",1468,2176],[5,"ParquetOptions",1468,2178],[6,"ParallelStrategy",1468,2178],[8,"FileMetadataRef",1415],[1,"f64"],[6,"PrefilterMaskSetting",1612,2177],[5,"RowGroupMetadata",2179],[6,"Filter",2180],[5,"ParquetWriter",1634,2181],[5,"BatchedWriter",1634,2182],[5,"ParquetWriteOptions",1634,2183],[6,"ParquetCompression",1634,2183],[5,"GzipLevel",1634,2183],[5,"BrotliLevel",1634,2183],[5,"StatisticsOptions",1634,2184],[5,"ZstdLevel",1634,2183],[8,"RowGroupIterColumns",1634,2185],[10,"Iterator",2186],[5,"FileWriter",2187],[5,"Mutex",2188],[1,"u32"],[1,"i32"],[10,"Sync",2122],[5,"RuntimeManager",1866],[10,"Future",2189],[10,"GetSize",1866],[5,"JoinHandle",2190],[10,"StatsEvaluator",1888],[5,"ColumnStats",1888],[5,"BatchStats",1888],[5,"Field",2191],[10,"Sized",2122],[6,"DynByteSourceBuilder",1978],[6,"DynByteSource",1978],[5,"ObjectStoreByteSource",1978],[5,"MemSliceByteSource",1978],[10,"ByteSource",1978],[6,"SupportedCompression",2059],[6,"SplitSlicePosition",2077],[5,"Utf8Field",677],[5,"CategoricalField",677],[5,"DatetimeField",677],[15,"Datetime",751]],"r":[[0,2100],[1,2097],[2,2097],[3,2100],[4,2100],[5,2100],[87,2110],[88,2112],[89,2192],[153,2116],[154,2123],[155,2119],[156,2119],[165,2193],[194,2116],[206,2193],[230,2131],[235,2132],[259,2133],[418,2138],[419,2139],[420,2139],[421,2139],[422,2139],[423,2136],[427,2139],[428,2138],[474,2194],[475,2194],[556,754],[782,2146],[783,2146],[784,2147],[788,2147],[789,2147],[926,2195],[927,2196],[928,2149],[935,2195],[937,2196],[947,2151],[948,2151],[949,2154],[950,2153],[951,2154],[952,2153],[953,2150],[954,2150],[955,2150],[956,2151],[957,2151],[1309,2157],[1415,2168],[1433,2172],[1469,2177],[1472,2178],[1473,2176],[1474,2178],[1475,2176],[1553,2197],[1615,2177],[1618,2177],[1622,2197],[1627,2198],[1629,2199],[1634,2182],[1636,2183],[1638,2183],[1641,2183],[1642,2183],[1643,2181],[1644,2185],[1646,2184],[1649,2183],[1956,2100],[1957,2100],[1958,0],[1966,1858],[1967,2200],[1968,2200],[1969,2200],[1970,2200],[1974,2200],[1975,2200],[1976,2200]],"b":[[1313,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1314,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1315,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1316,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1336,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1337,"impl-PartialEq-for-StructArray"],[1342,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[1344,"impl-From%3CMutableStructArray%3E-for-StructArray"],[1364,"impl-StructArray"],[1365,"impl-Array-for-StructArray"],[1368,"impl-Array-for-StructArray"],[1369,"impl-StructArray"],[1381,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1382,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1383,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1384,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1392,"impl-Array-for-StructArray"],[1393,"impl-StructArray"],[1409,"impl-Array-for-StructArray"],[1410,"impl-StructArray"],[2015,"impl-From%3CMemSlice%3E-for-DynByteSource"],[2016,"impl-From%3CObjectStoreByteSource%3E-for-DynByteSource"],[2017,"impl-From%3CMemSliceByteSource%3E-for-DynByteSource"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADAGuAAAAAEAAwARABcACAAhAAgAKwACADAABQA4AAAAOgACAD4AAgBDABMAXwAAAGEAGAB9AAMAhAABAIcADQCYAAAAnAAAAJ4ABgCnAA8AuQACAL8AAwDFAAIAzQAAANAAAADVAA4A6gABAPYAAAACAQEABQEBABsBEAAvATYAawEDAHABCAB+ARwAowEEAKwBAQCwASoA3QE4ABcCBAAjAgAAJQIRAEACAABCAgIASQIrAHYCCACAAgcAmAIAAKYCEgC6AhcA1gIEAN8CIAABAwEABQMAAAcDBgAPAwAAFwMXADEDIQBUAwAAVgMCAF4DAgBiAwAAZAMFAHADAgB3AwMAfAMWAJ8DBwCoAwIArAMBALADBAC2AwAAuQMAALwDAAC+AwAAwQMDAMYDIwDrAzYAIwQDADIEDgBOBAYAVwQ1AI8EAQCVBAEAmQQAAJwEAACfBAEAogQBAKkEJADPBAAA1QQAANcEBADjBBkA/wQBAAUFAQAIBQcAEQUBABQFCQAfBQEAIgUJAC0FDQA8BQEAPwUAAEEFAABDBQAARQUCAEsFAABNBQAAVgUDAF0FAQBgBQ0AbwUCAHUFAQB5BQkAhAUAAIkFAACLBQcAlgUDAJwFBQCkBQEAsgUCALYFAwC7BQEAvgUAAMEFAADDBQAAxwUzAAAGCQAPBgAAEQYCABUGAAAXBgEAGgYBAB0GAwAiBhMAOAYFAD8GAABBBgUASAYAAEoGAQBNBgkAWQYBAFwGCABmBgAAaAYBAGsGAABtBgEAcAYBAHMGKACeBjsA3AYFAOoGDwACBwEABQcBAAgHAAAKBwUAEgcpAEEHAQBEBwAASwcCAE8HBABVBwEAWAcAAFoHBgBjBwQAaQcJAHQHBwB+BwIAiQcBAJMHAwCaBw0AqQcAAKsHAACvBw0AvgcBAMEHAADDBxoA4AcCAOYHDgD5BxMADggDABMIAgAXCAAAGggNACkIAAAsCAQA"}],["polars_lazy",{"t":"CQCCCPPPGPPPPPPPPPPPPPFPPPPPPPPKPGPPPPGFPPPFFPPPKPKPPPPPPPPPPPPPPPPPPFPPPPPPPPPFPPPPPPPPPGPPPPGKFPPPPPPPFIPPPPPPPPPGKPPPPPIPPPPPPPPPPPPPPKPPPPPPPPPPPPPPPFPPPPPPPPPPFKPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPGPPPPPPGPPPPPPPPPPGPPPPPPPPPPPKPPPPPPPPPPFPPPPPPPPGPPPPPPPPPPPFPPPPPPPGPPPPPPFPGFPPPPPPPGPFPPPPPPPPPPPPPPPPPPPKPPFPPFPPPPFPPGGPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHNONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNCNNNNNNNNMMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNOONOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNNHNHNOONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNNONNNNNNHHNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNNHNNNHNNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPGPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPGPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPCCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFHHOHHHHHHHHHHHHHHHHHHHHHHHHHHOOHHHHHOOHHHHHHHHHOOOHOOOOHHHHHHHOOHHHHOOOOOJJFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOITTTTTTTFKFFKFFFTFTTTTTTFFFTNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNOONOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONONNNNNNNMNNOOOONNNNNNNNNNNOCNNMNNOONNNNNMNNOOONNNNNNNOONNNNNNNNNNNNNNNONNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNMNNNMNNNNNNNNNNNNNNMNNNNNNNHHKFFPPPPPPPFPPPPPPGFPFPPPPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPPFKPPGFPFPPPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNNOOOONONNNONNNNNNNOOOONONOOOHOMOMNONNNNNNNNNNNNNNNNONOOOONONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","Abs","Add","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","Array","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","","BinaryUdfOutputField","Boolean","BooleanFunction","Business","Cast","CastTimeUnit","Categorical","CategoricalFunction","CategoricalNameSpace","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","Clip","Coalesce","Column","ColumnBinaryUdf","Columns","ColumnsUdf","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","Count","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeArgs","DatetimeFunction","Day","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","Duration","DurationArgs","EndsWith","Entropy","Eq","EqValidity","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","ExclusiveOr","Exp","Explode","","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","Extract","ExtractAll","ExtractGroups","Field","FieldByIndex","FieldByName","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","Find","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","Generic","GetCategories","GetOutput","GroupsToRows","Gt","GtEq","Hash","Head","HexDecode","HexEncode","Hist","Hour","Implode","IndexColumn","InterSect","Interpolate","InterpolateBy","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","Join","JoinOptions","JsonDecode","JsonEncode","JsonPathMatch","KeepName","Kurtosis","Last","Len","LenBytes","LenChars","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lowercase","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Microsecond","Millennium","Millisecond","Min","MinHorizontal","Minus","Minute","Mode","Modulus","Month","MonthEnd","MonthStart","MultipleFields","Multiply","NUnique","Name","Nanosecond","Negate","NestedType","Not","NotEq","NotEqValidity","Nth","NullCount","OffsetBy","Operator","Or","OrdinalDay","Over","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Plus","Pow","PowFunction","PrefixFields","QCut","Quantile","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","Root","Round","","RoundSF","SearchSorted","Second","Selector","","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","","Sort","SortBy","SpecialEq","Split","SplitExact","SplitN","Sqrt","StartsWith","Std","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","StructExpr","StructFunction","StructNameSpace","Sub","SubPlan","SuffixFields","Sum","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Ternary","Then","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","TrueDivide","Truncate","UdfSchema","Unique","UniqueCounts","UnpivotArgsDSL","UpperBound","Uppercase","UserDefinedFunction","ValueCounts","Var","Week","WeekDay","When","Wildcard","Window","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","Year","ZFill","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","_into_selector","_rename_fields_impl","_selector_add","_selector_and","_selector_sub","_selector_xor","abs","add","","agg_groups","alias","all","","","","all_horizontal","allow_parallel","ambiguous","and","any","","","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","","","arg_min","","","arg_sort","arg_sort_by","arg_unique","arg_where","args","","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","","binary_expr","bitand","bitxor","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bottom_k","bottom_k_by","business_day_count","cache","call","","call_udf","","call_unchecked","cast","","cast_with_options","cat","","cbrt","ceil","clip","clip_max","clip_min","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","","cos","cosh","cot","count","count_matches","","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","","","","","","","","","","","degrees","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deserialize","","","","","","","","","","","","","","","","","","","","","","","","diff","","div","dot","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","drop_nans","drop_nulls","","dt","","dtype_col","dtype_cols","duration","entropy","eq","","","","","","","","","","","","","","","","","","","","","","eq_missing","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eval","","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","extend_constant","field_by_index","field_by_name","field_by_names","fill_nan","fill_null","fill_null_with_strategy","filter","first","","","flatten","float_type","floor","floor_div","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fold_exprs","force_parallel","format","format_str","forward_fill","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_type","fun","function_expr","function_with_options","functions","gather","","gather_every","","get","","","get_categories","get_field","","get_fields_lens","get_output","get_schema","gt","gt_eq","has_multiple_outputs","hash","","","","","","","","","","","","","","","","","","","","head","","hist","hour","hours","implode","index","index_cols","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","input_fields","int_range","int_ranges","interpolate","interpolate_by","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_iter","into_list_name_space","","into_tree_formatter","is_arithmetic","is_between","is_column","is_column_selection","is_comparison","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_nan","is_not_nan","is_not_null","","is_null","","is_regex_projection","is_simple_projection","is_unique","join","","json_encode","keep","kurtosis","last","","","len","","","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","","map_dtypes","map_expr","map_field","map_fields","","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","max","","","","max_horizontal","mean","","","mean_horizontal","median","","","","meta","microsecond","microseconds","milliseconds","min","","","","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","","","name","","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","","","","","","nodes","nodes_owned","not","","nth","null_count","on","options","or","otherwise","","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","replace_strict","reshape","return_type","reverse","","","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_skew","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","","search_sorted","second","seconds","serialize","","","","","","","","","","","","","","","","","","","","","","","","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","","","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","","sort","","","sort_by","spearman_rank_corr","sqrt","std","","","str","strict","strict_cast","string","struct_","sub","","suffix","suffix_fields","sum","","","","sum_horizontal","super_type","swap_operands","tail","","tan","tanh","ternary_expr","then","","time_ranges","time_unit","","time_zone","to_array","to_field","to_list","to_lowercase","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_string","","","","","","","","","to_struct","","to_uppercase","top_k","top_k_by","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_serialize","","","try_to_compact_string","","","","","","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","udf","undo_aliases","union","unique","","","unique_counts","unique_stable","","","upper_bound","value_counts","value_name","var","","","variable_name","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weeks","when","","","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fields","with_fractional_seconds","with_hms","","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","","interpol","propagate_nans","","quantile","closed","ignore_nulls","","by","","dtype","expr","","","","","falsy","function","","","","idx","input","","","","left","length","offset","op","options","","","","","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","allow_duplicates","base","","bin_count","breaks","ddof","decimals","descending","","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","","include_category","labels","","left_closed","","limit","","method","","n","name","normalize","","offset","options","","","","parallel","probs","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","","fill_char","","ignore_nulls","","inclusive","infer_schema_len","length","","literal","","","n","","pat","strict","","time_unit","time_zone","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","size_bytes","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","Abs","All","AllHorizontal","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","Business","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","Entropy","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exp","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","Fused","GatherEvery","Generic","GetCategories","Hash","Head","HexDecode","HexEncode","Hist","Hour","Interpolate","InterpolateBy","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","JsonDecode","JsonEncode","JsonPathMatch","Kurtosis","LenBytes","LenChars","ListExpr","Log","Log1p","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MonthEnd","MonthStart","MultipleFields","Nanosecond","Negate","Not","NullCount","OffsetBy","OrdinalDay","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Pow","PowFunction","PrefixFields","QCut","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameFields","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","RollingExpr","RollingExprBy","Round","","RoundSF","SearchSorted","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","Truncate","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Year","ZFill","cat","pow","rolling","rolling_by","trigonometry","closed","ignore_nulls","","allow_duplicates","base","","bin_count","breaks","ddof","decimals","descending","","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","","include_category","labels","","left_closed","","limit","","method","","n","name","normalize","","offset","options","","","","parallel","probs","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","","fill_char","","ignore_nulls","","inclusive","infer_schema_len","length","","literal","","","n","","pat","strict","","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Skew","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","ArcCos","ArcCosh","ArcSin","ArcSinh","ArcTan","ArcTanh","Cos","Cosh","Cot","Degrees","Radians","Sin","Sinh","Tan","Tanh","TrigonometricFunction","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","equivalent","","","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","DatetimeArgs","DurationArgs","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","cast","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","dtype_col","dtype_cols","duration","fold_exprs","format_str","hour","hours","index_cols","int_range","int_ranges","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","pearson_corr","quantile","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","","time_zone","weeks","year","CALL_COLUMNS_UDF_PYTHON","CALL_DF_UDF_PYTHON","PythonFunction","PythonGetOutput","PythonUdfExpression","__clone_box","borrow","","","borrow_mut","","","call_udf","","clone","clone_into","clone_to_uninit","deref","","","deref_mut","","","deserialize","drop","","","eq","equivalent","","","fmt","from","","","","get_field","get_output","init","","","into","","","new","","serialize","to_owned","try_from","","","try_into","","","try_serialize","","type_id","","","vzip","","","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","join","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","CLUSTER_WITH_COLUMNS","COLLAPSE_JOINS","COMM_SUBEXPR_ELIM","COMM_SUBPLAN_ELIM","EAGER","FAST_PROJECTION","FILE_CACHING","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","NEW_STREAMING","OptFlags","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ROW_ESTIMATE","SIMPLIFY_EXPR","SLICE_PUSHDOWN","STREAMING","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","TYPE_COERCION","__clone_box","","","","","","","","","_collect_post_opt","_with_eager","agg","all","allow_missing_columns","allow_parallel","anonymous_scan","anti_join","apply","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","","","","","","borrow_mut","","","","","","","","","","bottom_k","cache","","","cancel","cast","cast_all","clone","","","","","","","","","clone_into","","","","","","","","","clone_to_uninit","","","","","","","","","cloud_options","","","","","","coalesce","collect","collect_concurrently","collect_schema","complement","concat_impl","","","contains","count","cross_join","default","","","","","deref","","","","","","","","","","deref_mut","","","","","","","","","","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","difference","drop","","","","","","","","","","","","drop_no_validate","drop_nulls","empty","explain","explode","extend","fetch","","fetch_blocking","fill_nan","fill_null","filter","finish","","","","","finish_no_glob","","","first","fmt","","","","","force_parallel","from","","","","","","","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","full_join","get_current_optimizations","glob","","","","group_by","group_by_dynamic","group_by_stable","head","hive_options","","how","include_file_paths","","infer_schema_length","init","","","","","","","","","","inner_join","insert","intersection","intersects","into","","","","","","","","","","into_iter","is_all","is_empty","iter","iter_names","join","join_builder","join_nulls","join_where","last","lazy","","left_join","left_on","limit","logical_plan","","low_memory","","map","map_python","max","mean","median","merge_sorted","min","n_rows","","","","","","name","new","","","new_paths","","new_with_sources","","not","null_count","on","optimize","parallel","pivot","profile","quantile","rechunk","","","","","remove","rename","reverse","right_on","rolling","row_index","","","","","","scan_from_python_function","scan_ipc","scan_ipc_files","scan_ipc_sources","scan_parquet","scan_parquet_files","scan_parquet_sources","schema","","schema_only","schema_with_arenas","select","select_seq","semi_join","set","set_cached_arena","shift","shift_and_fill","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","sort","sort_by_exprs","sources","","","std","sub","sub_assign","suffix","sum","symmetric_difference","tail","","to_alp","to_alp_optimized","to_dot","to_owned","","","","","","","","","toggle","top_k","try_from","","","","","","","","","","try_into","","","","","","","","","","type_id","","","","","","","","","","union","unique","unique_generic","unique_stable","unique_stable_generic","unnest","unpivot","use_statistics","validate","var","vzip","","","","","","","","","","with","with_batch_size","with_cache","with_cloud_options","","with_cluster_with_columns","with_collapse_joins","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_glob","with_has_header","with_ignore_errors","","with_include_file_paths","","with_infer_schema_length","","with_low_memory","with_missing_is_null","with_n_rows","","","","","with_new_streaming","with_null_values","with_optimizations","with_paths","","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_raise_if_empty","with_rechunk","","","with_row_estimate","with_row_index","","","","","","with_schema","","with_schema_modify","with_schema_overwrite","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_sources","","","with_streaming","with_truncate_ragged_lines","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Decimal","Dense","Distinct","DslPlan","Duration","","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","Full","GroupBy","HConcat","HStack","IEJoin","IR","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","","OneToMany","OneToOne","Ordinal","OtherScalar","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","Right","RollingGroupOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","UnionArgs","__clone_box","","","","","","","","","","","","","","","","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","clone","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","closed_window","","cmp","coalesce","compare","compression","","compute_schema","data_page_size","days","days_only","default","","","","","","","","","","","","deref","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","descending","describe","describe_tree_format","deserialize","","","","","","","","","","","","","","","","diagonal","display","drop","","","","","","","","","","","","","","","","","","eq","","","","","","","","","","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","every","fmt","","","","","","","","","","","","","","","","","","","fmt_str","from","","","","","","","","","","","","","","","","","","","from_partitioned_ds","get_datatype","group_by_dynamic","hash","","","","","","","","","","","","","","","how","include_bom","include_boundaries","include_header","index_column","","init","","","","","","","","","","","","","","","","","","into","","","","","","","","","","","","","","","","","","into_iter","is_asof","is_constant_duration","is_full_days","is_ie","is_scalar","is_valid_join","is_zero","join_nulls","label","lit","","","","maintain_order","","","","materialize","method","months","months_only","mul","n_rows","nanoseconds","needs_checks","neg","negative","new","","next_batch","offset","","output_schema","parallel","parse","parsed_int","partial_cmp","period","","predicate","prepare_cloud_plan","rechunk","rolling","row_group_size","scan","schema","","serialize","","","","","","","","","","","","","","","","serialize_options","should_coalesce","skip_rows","slice","start_by","statistics","suffix","","to_alp","to_any_value","to_owned","","","","","","","","","","","","","","","","to_string","","","to_supertypes","to_writer","","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","try_to_compact_string","","","type_id","","","","","","","","","","","","","","","","","","validation","vzip","","","","","","","","","","","","","","","","","","weeks","weeks_only","with_coalesce","with_columns","with_suffix","write_df_to_file","","aggs","apply","args","by_column","cached_ir","contexts","df","dsl","expr","exprs","file_info","file_options","function","id","input","","","","","","","","","","","input_left","input_right","inputs","","keys","left_on","len","maintain_order","node","offset","options","","","","","","","payload","predicate","predicates","right_on","scan_type","schema","slice","sort_options","sources","version","dtype","high","low"],"q":[[0,"polars_lazy"],[5,"polars_lazy::dsl"],[1620,"polars_lazy::dsl::AggExpr"],[1627,"polars_lazy::dsl::BooleanFunction"],[1630,"polars_lazy::dsl::Expr"],[1665,"polars_lazy::dsl::FunctionExpr"],[1710,"polars_lazy::dsl::StringFunction"],[1730,"polars_lazy::dsl::TemporalFunction"],[1732,"polars_lazy::dsl::binary"],[1753,"polars_lazy::dsl::cat"],[1754,"polars_lazy::dsl::dt"],[1810,"polars_lazy::dsl::function_expr"],[2027,"polars_lazy::dsl::function_expr::BooleanFunction"],[2030,"polars_lazy::dsl::function_expr::FunctionExpr"],[2075,"polars_lazy::dsl::function_expr::StringFunction"],[2095,"polars_lazy::dsl::function_expr::TemporalFunction"],[2097,"polars_lazy::dsl::function_expr::cat"],[2099,"polars_lazy::dsl::function_expr::pow"],[2103,"polars_lazy::dsl::function_expr::rolling"],[2137,"polars_lazy::dsl::function_expr::rolling_by"],[2170,"polars_lazy::dsl::function_expr::trigonometry"],[2214,"polars_lazy::dsl::functions"],[2289,"polars_lazy::dsl::python_udf"],[2351,"polars_lazy::dsl::string"],[2412,"polars_lazy::dsl::udf"],[2418,"polars_lazy::frame"],[2906,"polars_lazy::frame::pivot"],[2908,"polars_lazy::prelude"],[3532,"polars_lazy::prelude::DslPlan"],[3584,"polars_lazy::prelude::LiteralValue"],[3587,"dyn_clone::sealed"],[3588,"polars_plan::dsl::meta"],[3589,"polars_plan::dsl::expr"],[3590,"polars_plan::dsl::struct_"],[3591,"polars_utils::pl_str"],[3592,"alloc::sync"],[3593,"polars_error"],[3594,"core::result"],[3595,"polars_plan::dsl::selector"],[3596,"core::convert"],[3597,"polars_plan::dsl::array"],[3598,"polars_plan::dsl::list"],[3599,"polars_plan::dsl::expr_dyn_fn"],[3600,"polars_core::frame::column"],[3601,"core::option"],[3602,"core::ops::function"],[3603,"core::marker"],[3604,"polars_plan::plans::visitor"],[3605,"polars_plan::dsl::function_expr"],[3606,"polars_core::datatypes::dtype"],[3607,"polars_core::chunked_array::ops::sort::options"],[3608,"polars_plan::dsl::function_expr::schema"],[3609,"polars_core::datatypes::field"],[3610,"core::any"],[3611,"alloc::vec"],[3612,"polars_plan::dsl::binary"],[3613,"core::clone"],[3614,"polars_plan::dsl::udf"],[3615,"polars_core::chunked_array::cast"],[3616,"polars_plan::dsl::cat"],[3617,"polars_plan::dsl::arity"],[3618,"polars_plan::dsl::function_expr::boolean"],[3619,"polars_plan::dsl::function_expr::cat"],[3620,"polars_plan::dsl::function_expr::datetime"],[3621,"polars_plan::dsl::function_expr::pow"],[3622,"polars_plan::dsl::function_expr::strings"],[3623,"polars_plan::dsl::function_expr::struct_"],[3624,"polars_plan::dsl::functions::temporal"],[3625,"polars_plan::dsl::options"],[3626,"core::iter::traits::collect"],[3627,"polars_lazy::dsl::eval"],[3628,"polars_core::utils"],[3629,"polars_time::windows::duration"],[3630,"polars_time::windows::group_by"],[3631,"polars_core::datatypes::time_unit"],[3632,"serde::de"],[3633,"polars_plan::plans"],[3634,"polars_core::series"],[3635,"polars_core::series::ops"],[3636,"polars_plan::dsl::dt"],[3637,"polars_lazy::dsl::list"],[3638,"polars_arrow::legacy::kernels::ewm"],[3639,"polars_core::chunked_array::ops"],[3640,"core::fmt"],[3641,"polars_plan::plans::apply"],[3642,"polars_ops::frame::join::iejoin"],[3643,"polars_plan::dsl::function_expr::binary"],[3644,"polars_plan::dsl::function_expr::range"],[3645,"polars_plan::dsl::function_expr::list"],[3646,"polars_plan::dsl::function_expr::business"],[3647,"polars_plan::dsl::function_expr::array"],[3648,"alloc::string"],[3649,"polars_plan::plans::options"],[3650,"polars_schema::schema"],[3651,"core::hash"],[3652,"polars_ops::series::ops::interpolation::interpolate"],[3653,"polars_ops::series::ops::is_between"],[3654,"polars_plan::dsl::name"],[3655,"polars_plan::plans::lit"],[3656,"polars_core::utils::supertype"],[3657,"polars_plan::dsl::python_udf"],[3658,"polars_utils::idx_vec"],[3659,"polars_arrow::legacy::kernels::rolling::no_nulls"],[3660,"polars_ops::series::ops::rank"],[3661,"polars_time::group_by::dynamic"],[3662,"polars_core::chunked_array::ops::rolling_window"],[3663,"polars_core::datatypes"],[3664,"polars_core::chunked_array"],[3665,"polars_time::chunkedarray::rolling_window"],[3666,"polars_core::chunked_array::ops::search_sorted"],[3667,"serde::ser"],[3668,"polars_core::series::series_trait"],[3669,"polars_plan::dsl::string"],[3670,"polars_ops::chunked_array::list::to_struct"],[3671,"compact_str"],[3672,"polars_ops::series::ops::business"],[3673,"polars_arrow::legacy::kernels::time"],[3674,"polars_plan::dsl::function_expr::rolling"],[3675,"polars_plan::dsl::function_expr::rolling_by"],[3676,"polars_plan::dsl::function_expr::trigonometry"],[3677,"polars_core::frame"],[3678,"rayon::iter"],[3679,"pyo3::types::any"],[3680,"pyo3::instance"],[3681,"polars_utils::arena"],[3682,"polars_plan::plans::ir"],[3683,"polars_plan::plans::aexpr"],[3684,"polars_plan::frame::opt_state"],[3685,"polars_plan::plans::anonymous_scan"],[3686,"polars_lazy::scan::anonymous_scan"],[3687,"polars_core::schema"],[3688,"polars_utils::index"],[3689,"polars_lazy::frame::exitable"],[3690,"polars_utils::aliases"],[3691,"polars_lazy::scan::csv"],[3692,"polars_lazy::scan::ipc"],[3693,"polars_lazy::scan::ndjson"],[3694,"polars_lazy::scan::parquet"],[3695,"polars_lazy::scan::file_list_reader"],[3696,"polars_io::cloud::options"],[3697,"polars_ops::frame::join::args"],[3698,"bitflags::iter"],[3699,"std::path"],[3700,"polars_plan::plans::ir::scan_sources"],[3701,"polars_io::options"],[3702,"polars_io::csv::write::options"],[3703,"polars_io::ipc::write"],[3704,"polars_io::json"],[3705,"polars_io::parquet::write::options"],[3706,"core::num::nonzero"],[3707,"polars_io::csv::read::options"],[3708,"chrono_tz::timezones"],[3709,"core::cmp"],[3710,"polars_core::frame::group_by::proxy"],[3711,"polars_core::datatypes::any_value"],[3712,"std::io"],[3713,"polars_io::parquet::write::writer"],[3714,"chrono::naive::datetime"],[3715,"polars_plan::dsl::functions::selectors"],[3716,"polars_plan::dsl::functions::horizontal"],[3717,"polars_plan::dsl::functions::arity"],[3718,"polars_plan::dsl"],[3719,"polars_plan::dsl::functions::range"],[3720,"polars_plan::dsl::functions::index"],[3721,"polars_plan::dsl::functions::coerce"],[3722,"polars_plan::dsl::functions::syntactic_sugar"],[3723,"polars_plan::dsl::functions::business"],[3724,"polars_plan::dsl::functions::concat"],[3725,"polars_plan::dsl::functions::correlation"],[3726,"polars_plan::dsl::functions::repeat"],[3727,"polars_plan::client"]],"i":"`````CjAhj`Dl1Gb0Ef311555Hl6`666Gj0Gf68`8`8608``Gh91``997`7`192221962999999111`119499G`82`3:55::::8`9:8Hj```;4449Gl0``<<:59<7<:``<:<3Gd`288=666=5:;<==`999999959999952`616;=:;66=``;==88=688:=:=:`555:=85=855518:35=`988;=5`85Hh77>>>9>`2>;6>>>>>><`2>7>>6>7>0`>>=6>>>6`<>>>>>><7<<`77757;>`777777`>``=<2;>7>`<`66777>6>>6666666>96`>>`>7`>;66`<<``26967FhFjFlFn?j9>BfGb8=<>9CjGnH`HbHdHf=HjHlHnAhF`hl1111??3??`AlAnj`:>0210`00`000`0`00000002102100`0`Dd;1DhDl``3`3`99Ff6358Nf8FhFjFlFn69G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`FfAlDdAnhNflFhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`j0`8En2DhFb4`33`333333FhFjFlFnDl8G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`FhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`FhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF```````AlAnj00021`0`000`0If01````>=<1Bf00?><;:972Ff5Dd5hNflFhFjFlFnDl<G`Ef<<GbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`FfAlDdAnhNflFhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`DljG`EfBf0000GbGdGfGhGjGlCjHbHdHfHhHjHlHnAhAnj00FfAlDd4hNflFhFjFlFnDl;G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`jAn1`1```1Dl22G`EfBf0GbGdGfGhGjGlCjHbHdHfHhHjHlHnAhj000G`00Ef00Gb00Gd00Gf00Gh00Gj00Gl00Hb00Hd00Hf00Hh00Hj00Hl00Hn00Ah00Kb0j000800000l001111`An22Bf33DhFbEnKl77G`Ef06Gb0Gd0Gf0Gh0Gj0Gl0Cj0GnH`HbHdHfHhHjHlHnAhF``67`jFfAlDdAnhNflFhFjFlFnDl<<<<<<<<<<<<<<G`Ef0Bf00000000000GbGdGfGhGjGlCj0000GnH`HbHdHfHh0HjHlHnAh0000F`Bf1`j`An101Al12FfJdBdDdDhKl88hDl::G`EfGbGdGfGhGjGlCjHbHdHfHhHjHlHnAhAnj0GnH`25`FfAlDd6hNflFhFjFlFnDl=G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`0``j0FfAlDdAnhNflFhFjFlFnDl<G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`jN`AnhEf411044444444`4`4114Al3lNf7`57`577`777777707`7Dd0Bf090209`99`191111`479``79``4799GnH`0`69;`Hb21<2<7:<<=<<1<<<44321>=<<`<`<?=<FjFn;>>>>>`>;>77>`>>`>>>`>>8`>>6>>?9<>>>>``>>>>>>>>>>>>>>>>>>>;>>Hf06?==??54DljG`>99999GbGdGfGhGjGlCj=Hd;HhHjHlHnAhAn0?0Al1j0000000201200`0120080`003Nf0`231`BfEf5333`FhFl`GnH`197863Fj3FnDl:G`89GbGdGfGhGjGlCj<;HbHdHfHhHjHlHnAhF`jDd1EfGbGdGfGhGjGlCjAlAnNf<<Ff3<2h2lFhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`FfAlDdAnhNflFhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`Dd0j1DhEnBd3EfGbGdGfGhGjGlCjFfAl>AnhNflFhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF``hAnAl1j01200061206Ff2Dd45NflFhFjFlFnDl9G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`9`FjFn:<<;Ddl=>=>=>==>=>=11>=>>=>j?AJdAJfAJh2102AJjAJlAJnAK`AKbAKd0AKfAKh4AKjAKlAKnAL`3ALb528ALd1ALf11098432323570;5ALhALjALlALnAM`AMbAMdAMfAMhAMjAMlAMn087;87;7;AN`ANb8ANdANfANh0?1ANjANlANnAO`4ALhAObAOdAOfAOhAOjAOl:=;AOnB@`B@bB@dB@fB@h54B@j321B@lB@nBA`03721BAb0`Ed0000000000000000000``Jn000000000000000000000000000000000000000000000000000000CjGb0001111111Gj0Gf33`303`Gh41441422214244444411111444124444444222Gl055355`551Gd644463665555555355555341464466664663336363331365633446666`16366666616466364666366636666664444246`4444446`1646`33444636633333336366646331334`````AJjAJlAJnALhALjALlALnAM`AMbAMdAMfAMhAMjAMlAMn087;87;7;AN`ANb8ANdANfANh0?1ANjANlANnAO`4ALhAObAOdAOfAOhAOjAOl:=;AOnB@`B@bB@dB@fB@h54B@j321B@lB@nBA`03721BAb0`GdGh0`0AAh000`00000000000000000000000000000AAj000`0000000000000000000000000000AAl00000000000000`0000000000000000000000000000````Gn``````````````````````````0H``````10`````````100`1010```````10````10101`````ABhNnABn210212222102102210222222102201102102102210210210102102`A@j00000000000000000000000000000000000000000000000000000000000`F`0000`ACl000000````````0`000000```0ADhABbACjADbADlADnAE`AEb866580ACn77699999999087654321908765432197731877876543219876543219876543219AEd053421888:005:888642:198765432:198765432:8888:19988765432:88:88:989888100530538:::::119888765432:::::::8800528887421426198765432:8:::198765432::::::88118AFd99299843999999916475372646464;9293`9916453;9929164753999999973;9999;99999999979991649;;29;98999:9876543;;92:9876543;2:9876543;2:9876543;;9999993292:9876543;246649999999696666666464646616644969119966164919664464646966916496699`````AEl0AHjAHl0Jh3`011120``1`00111300030311111`0````3``AH`0133``20032``12``4`114211122222221`AEjOhInAFb84AGdAGfAGh:OfAGj;AHnABf<888AD`0007;:9AIh9AEl>9AIf98AHj87AHl76JhAEjOhIn8AFb8AH`AGd9AGfAGh:OfAGj;AHnABf<;:98AEl8765?43>21=<;:908765?43>21=<;:908765?43>21=<;:9:63=3::<;987654321=<;:AIh:198AIf87AHj76AHl65JhAEjOhIn7AFb9AH`AGd9AGfAGh:OfAGj;AHnABf<3<<;:98AEl8765?43>21=1=<;:AIh:198AIf87AHj76AHl65JhAEjOhInAFb9AH`AGdAGfAGh:OfAGj;AHnABf;;;:::999888AEl00888777666555333222111<<;::AD`:1199876AHj65AHl545?>=AIh==4<;AIf;:398276Jh73AIbAEjOhInAFb;AH`AGdAGfAGh=OfAGj>AHnABf86;6;:;:9?8AEl87?65AHj54AHl43Jh?>=AIh=4<;AIf;:498376225??53=?>AEjNhIn36?>=;6<00040AH`111AFbAD`5Oh8=444608`=AIbAGj33:8264>5AGdAGfAGhAHjOf5AHlAHnABfJh8=2=AEj:>>140<In?AElAH`<;:98=76542105;=22223?2AIhAFb32>AIf>=<;AGj;;:987Oh74365AGd3AGfAGhAHjOf6AHlAHnABfJhInAElAH`AEj=3AIhAFb43>AIf>=<;AGj;:9824Oh84376AGd3AGfAGhAHjOf6AHlAHnABfJhIn0=>=8;BAd0BAfBAhBAjBAlBAnBB`BBbBBd55BBfBBhBBj14;3BBl:BBn49BC`BCb0>BCdBAd240;4BCf;13:624733?=BAh0BAj>BCh00","f":"``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{bd}f}00000000000000000000000000{hj}{{l{Ab{{A`{n}}}}}j}{{hj}{{Af{jAd}}}}000{jj}{{jj}}{{AhAh}}2{{jc}j{{Aj{n}}}}{{}j}{Alj}{Anj}{{jB`}j}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}``{{jc}j{{Aj{j}}}}4321{{jcB`}j{{Aj{j}}}}{{jc{Bf{{Ab{Bd}}}}}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{{b{j}}{b{Cdc}}b}{{Af{CfAd}}}{{Ch{{b{j}}b}{{Bj{{Af{CfAd}}}}}}}}{{jc{b{{A`{j}}}}{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jCj{b{{A`{j}}}}B`B`}j}{{ce{Bf{{Ab{Bd}}}}B`}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{jj}{{jjClCn}j}11111{{jj}j}2>=2>=2{{jD`}j}{{cDb}j{{Bb{{A`{j}}}}}}4{cj{{Aj{j}}}}{{{b{Dd}}}{{b{{A`{Df}}}}}}`{jAl}{{{b{Dh}}}{{b{Dj}}}}{{{b{Dl}}}{{b{j}}}}{{{Dn{j}}}j}{{{b{E`}}}j}{{j{Bl{Eb}}}j}`{jEd}{{jEfj}j}{{AhAh}}0{b{{b{c}}}{}}000000000000000000000000000000000{{{b{Cd}}}{{b{Cdc}}}{}}000000000000000000000000000000000?{{jcg{Dn{B`}}}j{{Aj{j}}}{{Aj{j}}Eh}{{Bb{{A`{e}}}}}}{{jj{Ej{B`}}{Dn{El}}}j}`{{{b{En}}{b{n}}}{{Af{nAd}}}}{{F`{Dn{j}}}{{Af{jAd}}}}{{{b{Dh}}{b{Cd{A`{Bh}}}}}{{Af{{Bl{Bh}}Ad}}}}{{{b{Fb}}BhBh}{{Af{BhAd}}}}{{F`{Dn{j}}}j}{{jCn}j}0{{jCnFd}j}`{jFf}{jj}0{{jjj}j}{{jj}j}0{{{b{Fh}}}Fh}{{{b{Fj}}}Fj}{{{b{Fl}}}Fl}{{{b{Fn}}}Fn}{{{b{Dl}}}Dl}{{{b{j}}}j}{{{b{G`}}}G`}{{{b{Ef}}}Ef}{{{b{{Bf{c}}}}}{{Bf{c}}}Eh}{{{b{Gb}}}Gb}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{Cj}}}Cj}{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{{b{Hd}}}Hd}{{{b{Hf}}}Hf}{{{b{Hh}}}Hh}{{{b{Hj}}}Hj}{{{b{Hl}}}Hl}{{{b{Hn}}}Hn}{{{b{Ah}}}Ah}{{{b{F`}}}F`}{{b{b{Cdc}}}f{}}00000000000000000000000000{bf}00000000000000000000000000{{{b{{A`{j}}}}}j}{cj{{Aj{n}}}}{ej{{Aj{n}}}{{Ib{}{{I`{c}}}}}}{{eB`}{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{e{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{c{b{E`}}B`}j{{Bb{{A`{j}}}}}}{{Alc}j{{Aj{j}}}}{{Anc}j{{Aj{j}}}}{jj}00021{{jjId}j}{{jB`}j}{{jceB`}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}111{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}2{{IfjIhB`}j}0{{j{Dn{Ij}}{Bl{c}}B`B`}j{{Il{n}}}}{{jjInJ`}j}{Gnj}{{jjInJ`{Bl{Jb}}{Bl{n}}}j}0```{{}j}{{}{{Bf{{Ab{Jd}}}}}}{{}{{Bf{{Ab{Fb}}}}}}{{}{{Bf{{Ab{Bd}}}}}}{{}Gn}{{}H`}{{}Hd}{{}Hf}{{}Hh}{{}Hj}{{}Hn}{jj}{Ih{{b{c}}}{}}000000000000000{{{b{{Bf{c}}}}}b{}}111111111111111111{Ih{{b{Cdc}}}{}}000000000000000000000000000000000{c{{Af{Dl}}}Jf}{c{{Af{j}}}Jf}{c{{Af{G`}}}Jf}{c{{Af{Ef}}}Jf}{c{{Af{{Bf{{Ab{Bd}}}}}}}Jf}{c{{Af{{Bf{{Ab{Jh}}}}}}}Jf}{c{{Af{{Bf{{Ab{En}}}}}}}Jf}{c{{Af{{Bf{Jj}}}}}Jf}{c{{Af{{Bf{{Ab{Dh}}}}}}}Jf}{c{{Af{Gb}}}Jf}{c{{Af{Gd}}}Jf}{c{{Af{Gf}}}Jf}{c{{Af{Gh}}}Jf}{c{{Af{Gj}}}Jf}{c{{Af{Gl}}}Jf}{c{{Af{Cj}}}Jf}{c{{Af{Hb}}}Jf}{c{{Af{Hd}}}Jf}{c{{Af{Hf}}}Jf}{c{{Af{Hh}}}Jf}{c{{Af{Hj}}}Jf}{c{{Af{Hl}}}Jf}{c{{Af{Hn}}}Jf}{c{{Af{Ah}}}Jf}{{AnClJl}j}{{jClJl}j}{{jj}}{{jc}j{{Aj{j}}}}{Ihf}000000000000000000000000000000000{jj}{Anj}1`{jJn}{{{b{Cn}}}j}{cj{{Bb{{A`{Cn}}}}}}{H`j}{{jIjB`}j}{{{b{Dl}}{b{Dl}}}B`}{{{b{j}}{b{j}}}B`}:{{{b{G`}}{b{G`}}}B`}{{{b{Ef}}{b{Ef}}}B`}{{{b{{Bf{{Ab{c}}}}}}{b{{Bf{{Ab{c}}}}}}}B`K`}{{{b{{Bf{Jj}}}}{b{{Bf{Jj}}}}}B`}{{{b{Gb}}{b{Gb}}}B`}{{{b{Gd}}{b{Gd}}}B`}{{{b{Gf}}{b{Gf}}}B`}{{{b{Gh}}{b{Gh}}}B`}{{{b{Gj}}{b{Gj}}}B`}{{{b{Gl}}{b{Gl}}}B`}{{{b{Cj}}{b{Cj}}}B`}{{{b{Hb}}{b{Hb}}}B`}{{{b{Hd}}{b{Hd}}}B`}{{{b{Hf}}{b{Hf}}}B`}{{{b{Hh}}{b{Hh}}}B`}{{{b{Hj}}{b{Hj}}}B`}{{{b{Hl}}{b{Hl}}}B`}{{{b{Hn}}{b{Hn}}}B`}{{{b{Ah}}{b{Ah}}}B`}{{jc}j{{Aj{j}}}}{{b{b{c}}}B`{}}00000000000000000000000000000000000000000000000000{{KbjB`}j}0{{jKd}j}{{jjIn}j}11`{{jc}j{{Il{n}}}}{{jc}j{{Bb{{A`{Cn}}}}}}{jj}0{{jjj}j}{{lCl}j}{{l{b{E`}}}j}{{le}j{{Aj{n}}}{{Ib{}{{I`{c}}}}}};;{{jKf}j}<{{}j}{Anj}77{{}{{Bf{{Ab{Bd}}}}}}8{{jj}j}{{{b{Dh}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Fb}}{b{CdKh}}}{{Af{fKj}}}}{{{b{En}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Kl}}{b{CdKh}}}{{Af{fKj}}}}{{{b{j}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{G`}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Ef}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{{Bf{c}}}}{b{CdKh}}}{{Af{fKj}}}{}}{{{b{Gb}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{Gd}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{Gf}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{Gh}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{Gj}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{Gl}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{Cj}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{Gn}}{b{CdKh}}}{{Af{fKj}}}}{{{b{H`}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Hb}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Hd}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Hf}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Hh}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Hj}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Hl}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Hn}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Ah}}{b{CdKh}}}{{Af{fKj}}}}{{{b{F`}}{b{CdKh}}}{{Af{fKj}}}}{{jce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}``{{{b{E`}}c}{{Af{jAd}}}{{Bb{{A`{j}}}}}}{{j{Bl{Eb}}}j}{cc{}}00000000000{Ijj}{Clj}{{{b{E`}}}j}{Elj}{Knj}{Dlj}{L`j}7{B`j}{Ebj}{Lbj}{Ldj}{Lfj}{Idj}=={LhEf}{Gl{{Bf{{Ab{Dh}}}}}}{Lj{{Bf{{Ab{Dh}}}}}}{Ll{{Bf{{Ab{Dh}}}}}}{cc{}}{Gj{{Bf{{Ab{Dh}}}}}}{Ln{{Bf{{Ab{Dh}}}}}}{Gf{{Bf{{Ab{Dh}}}}}}{Cj{{Bf{{Ab{Dh}}}}}}{Gd{{Bf{{Ab{Dh}}}}}}{M`{{Bf{{Ab{Dh}}}}}}{Gb{{Bf{{Ab{Dh}}}}}}{Mb{{Bf{{Ab{Dh}}}}}}888888{GjCj}9{LjCj}{GbCj}{GdCj}<<<<<{HjHh}===={{{b{E`}}}Ah}>{nAh}{MdAh}{jAh}{cc{}}{Cn{{Bf{{Ab{Bd}}}}}}``{{jc{Bf{{Ab{Bd}}}}Mf}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}`{{AnjB`}j}{{jc}j{{Aj{j}}}}{{Anjj}j}{{jIhIh}j}{{AljB`}j}43{Ffj}{{{b{Jd}}{b{{Mh{Cn}}}}Mj{b{Df}}{b{Df}}}{{Bl{Df}}}}{{{b{Bd}}{b{{Mh{Cn}}}}Mj{b{{A`{Df}}}}}{{Af{DfAd}}}}{{{b{Dd}}}Ih}{{{b{Dh}}}{{Bl{{Bf{{Ab{Bd}}}}}}}}{{{b{Kl}}{b{{Mh{Cn}}}}}{{Af{{Ab{{Mh{Cn}}}}Ad}}}}99{{{b{h}}}B`}{{{b{Dl}}{b{Cdc}}}fMl}{{{b{j}}{b{Cdc}}}fMl}{{jEbEbEbEb}j}{{{b{G`}}{b{Cdc}}}fMl}{{{b{Ef}}{b{Cdc}}}fMl}{{{b{Gb}}{b{Cdc}}}fMl}{{{b{Gd}}{b{Cdc}}}fMl}{{{b{Gf}}{b{Cdc}}}fMl}{{{b{Gh}}{b{Cdc}}}fMl}{{{b{Gj}}{b{Cdc}}}fMl}{{{b{Gl}}{b{Cdc}}}fMl}{{{b{Cj}}{b{Cdc}}}fMl}{{{b{Hb}}{b{Cdc}}}fMl}{{{b{Hd}}{b{Cdc}}}fMl}{{{b{Hf}}{b{Cdc}}}fMl}{{{b{Hh}}{b{Cdc}}}fMl}{{{b{Hj}}{b{Cdc}}}fMl}{{{b{Hl}}{b{Cdc}}}fMl}{{{b{Hn}}{b{Cdc}}}fMl}{{{b{Ah}}{b{Cdc}}}fMl}{{Anj}j}{{j{Bl{Ih}}}j}{{j{Bl{j}}{Bl{Ih}}B`B`}j}``{jj}`{cj{{Bb{{A`{Cl}}}}}}{{}Ih}000000000000000000000000000000000`{{jjClCn}j}{{jjj}j}{{jMn}j}{{jj}j}{{}c{}}000000000000000000000000000000000{{{b{j}}}}{N`An}{AnAn}{h{{Af{{`{Nb}}Ad}}}}{{{b{Ef}}}B`}{{jccNd}j{{Aj{j}}}}{{{b{h}}}B`}{{{b{h}}B`}B`}3???{{jc}j{{Aj{j}}}}{jj}0000000330{{AljB`}j}{{AnjB`}j}{lj}{Nfj}{{jB`B`}j}{{}j}{Anj}7107{jAn}{cjNh}{{jIj}j}:;;:;;{{Nfc}j{{Bn{{b{n}}}{{Bj{{Af{nAd}}}}}}C`Cb}}{{jc{Bf{{Ab{Bd}}}}}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{j{b{Cdc}}{b{Cd}}}{{Af{jAd}}}{{Ch{j{b{Cd}}}{{Bj{{Af{jAd}}}}}}}}{{{b{Dd}}{Bl{{b{n}}}}}{{Af{DfAd}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Nj{{b{Cn}}}{{Bj{Cn}}}}}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{Cn}}}{{Bj{{Af{CnAd}}}}}}C`Cb}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{{A`{{b{Cn}}}}}}}{{Bj{{Af{CnAd}}}}}}C`Cb}}{{jc}j{{Ch{j}{{Bj{j}}}}}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{Df}}}{{Bj{{Af{DfAd}}}}}}C`Cb}}{{Nf{Ab{Bn}}}j}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{{A`{Df}}}}}{{Bj{{Af{DfAd}}}}}}C`Cb}}:{{ce{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{jc{b{{A`{j}}}}{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jCj{b{{A`{j}}}}B`{Bl{Nl}}}j}2{{{b{Dd}}}{{Af{DfAd}}}}{{jNnB`}j}1111{{{b{E`}}}j}{Alj}{Anj}{jj}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}42104321{jh}```54321```2`{{jj}}543{jNf}`44`{j}{{jc}j{{Aj{j}}}}0;{{{b{{A`{Df}}}}}Dd}{c{{Bf{c}}}{}}{{jjj}Gn}{{}H`}{jAh}{{n{Dn{Df}}{Bf{{Ab{Bd}}}}c}F`Dh}{{{b{j}}{b{Cd{O`{{b{j}}}}}}}f}{{j{b{Cd{O`{j}}}}}f}>>{Clj}?``9{{Fjc}j{{Aj{j}}}}{{Fnc}j{{Aj{j}}}}{{{b{h}}}{{Af{nAd}}}}{{je}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{je{Bl{{Ob{eD`}}}}Hj}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{jj}j}{jj}0{{jjId}j}{{}j}{h{{Af{{Dn{j}}Ad}}}}{{jc}j{{Aj{j}}}}{{Nf{b{E`}}}j}05`{{j{Dn{Ij}}{Bl{c}}B`B`B`}j{{Il{n}}}}{{jIh{Bl{c}}B`B`B`}j{{Il{n}}}}{{{b{E`}}jOd}j}{{jjOd}j}9{{jOf{Bl{Eb}}}j}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{jB`}j}{{jj}}{{le}j{{Aj{n}}}{{Ib{}{{I`{c}}}}}}{{cj}j{{Aj{j}}}};{{jcc}j{{Aj{j}}}}{{{b{Dd}}{Bl{Cn}}}{{Af{DfAd}}}}{{jcc{Bl{c}}{Bl{Cn}}}j{{Aj{j}}}}{{j{b{{A`{Cl}}}}}j}`{Alj}{Anj}{jj}00{{jOh}j}{{jjHb}j}0{{j{Ab{Bn}}{Bf{{Ab{Bd}}}}Oj}j}{{jIhc}j{{Ch{{b{Cd{On{Ol}}}}}{{Bj{{Bl{Ij}}}}}}C`CbA@`}}{{jOj}j}{{jjA@b}j}101010{{jOdIjOj}j}{{jjOdIjA@b}j}{{jIhB`}j}434343{{{b{h}}}{{Dn{n}}}}{{jLb}j}{{jEl}j}``{{}{{Bf{{Ab{Bd}}}}}}{{jjB`B`{Bl{Eb}}}j}{{AnjB`B`{Bl{Eb}}}j}01{{jcA@d}j{{Aj{j}}}}``{{{b{Dl}}c}AfA@f}{{{b{j}}c}AfA@f}{{{b{G`}}c}AfA@f}{{{b{Ef}}c}AfA@f}{{{b{{Bf{{Ab{En}}}}}}c}AfA@f}{{{b{{Bf{{Ab{Bd}}}}}}c}AfA@f}{{{b{{Bf{{Ab{Dh}}}}}}c}AfA@f}{{{b{{Bf{Jj}}}}c}AfA@f}{{{b{{Bf{{Ab{Jh}}}}}}c}AfA@f}{{{b{Gb}}c}AfA@f}{{{b{Gd}}c}AfA@f}{{{b{Gf}}c}AfA@f}{{{b{Gh}}c}AfA@f}{{{b{Gj}}c}AfA@f}{{{b{Gl}}c}AfA@f}{{{b{Cj}}c}AfA@f}{{{b{Hb}}c}AfA@f}{{{b{Hd}}c}AfA@f}{{{b{Hf}}c}AfA@f}{{{b{Hh}}c}AfA@f}{{{b{Hj}}c}AfA@f}{{{b{Hl}}c}AfA@f}{{{b{Hn}}c}AfA@f}{{{b{Ah}}c}AfA@f}{{Anc}j{{Aj{j}}}}0{{jA@h}j}1{{Alj}j}{{Anj}j}{{jj}j}{{jce}j{{Aj{j}}}{{Aj{j}}}}{jj}{{j{Bl{Eb}}}j}111{{jB`}j}{{Anjj}j}4{{AlD`}j}{{AnD`}j}{{jD`}j}{{jeDb}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{jjIdB`}j}8{{AlId}j}{{AnId}j}{{jId}j}{jA@j}`{{jCn}j}`{jl}{{jj}}{{AhAh}}{{Nf{b{E`}}}j}0{{{b{E`}}}j}{Alj}{Anj}{jj}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}{{}{{Bf{{Ab{Bd}}}}}}{EfEf}{{Anj}j}{{j{Bl{Ih}}}j}55{{jjj}j}{{Fhc}Fj{{Aj{j}}}}{{Flc}Fn{{Aj{j}}}}{{jjInJ`}j}```{{AnIh}j}{{{b{j}}{b{{Mh{Cn}}}}Mj}{{Af{DfAd}}}}={Nfj}{bc{}}00000000000000000000000000={{{b{Dd}}}{{Af{DfAd}}}}{bMd}00000000{{Al{Bl{{Ab{Bn}}}}}{{Af{jAd}}}}{{AnA@l{Bl{{Ab{Bn}}}}Ih}j}5{{jj}j}{{jcg{Dn{B`}}}j{{Aj{j}}}{{Aj{j}}Eh}{{Bb{{A`{e}}}}}}{c{{Af{e}}}{}{}}000000000000000000000000000000000{{}{{Af{c}}}{}}000000000000000000000000000000000{{{b{Dd}}c}{{Af{DfAd}}}{{Nj{{b{Cn}}}{{Bj{{Af{CnAd}}}}}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Nj{{b{{A`{{b{Cn}}}}}}}{{Bj{{Af{CnAd}}}}}}}}{{jc}{{Af{jAd}}}{{Ch{j}{{Bj{{Af{jAd}}}}}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Nj{{b{Df}}}{{Bj{{Af{DfAd}}}}}}}}{{{b{Dh}}{b{Cd{Dn{Id}}}}}{{Af{fAd}}}}{{{b{En}}{b{Cd{Dn{Id}}}}}{{Af{fAd}}}}{{{b{Bd}}{b{Cd{Dn{Id}}}}}{{Af{fAd}}}}{b{{Af{A@nAA`}}}}00000000{bAAb}000000000000000000000000000000000`{hj}{{Anc}j{{Aj{j}}}}{Alj}{Anj}{jj}02100{{jB`B`{b{E`}}B`}j}`{{AlId}j}{{AnId}j}{{jId}j}`{{}c{}}000000000000000000000000000000000`{cFh{{Aj{j}}}}{{Fjc}Fl{{Aj{j}}}}{{Fnc}Fl{{Aj{j}}}}`{{Gnj}Gn}0{{H`j}H`}{{{b{Dd}}Cn}{{Af{DfAd}}}}{{l{Dn{j}}}{{Af{jAd}}}}{{H`jjj}H`}{{Gnjjj}Gn}1545445454{{{b{Dd}}{Bl{Cn}}}{{Af{DfAd}}}}{{{b{Dd}}}{{Af{DfAd}}}}76{{GnJb}Gn}{{Gn{Bl{n}}}Gn}89{{jc}j{{Aj{j}}}}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{EdB`}j}{Edj}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{Edj}j}{Ih{{b{c}}}{}}{Ih{{b{Cdc}}}{}}{Ihf}3{cc{}}87{{}Ih}{{}c{}}96{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAAb}3``{{Jnj{Ej{B`}}{Dn{El}}AAd}j}{Jnj}=<{{JnJb}j}1{{JnjJb}j}{{Jnn}j}333=<;3:3983333333333{{Jnj}j}44{{Jn{Bl{n}}jAAf}j}15{{Jn{b{E`}}}j}65066666662:98;6656``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{AAh}}}AAh}{{b{b{Cdc}}}f{}}{bf}{Ih{{b{c}}}{}}{Ih{{b{Cdc}}}{}}{c{{Af{AAh}}}Jf}{Ihf}{{{b{AAh}}{b{AAh}}}B`}{{{b{AAh}}{b{CdKh}}}{{Af{fKj}}}}0{cc{}}{{{b{AAh}}{b{Cdc}}}fMl}{{}Ih}{{}c{}}{{{b{AAh}}c}AfA@f}{bc{}}{bMd}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{A@nAA`}}}}{bAAb}7````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{AAj}}}AAj}{{b{b{Cdc}}}f{}}{bf}{Ih{{b{c}}}{}}{Ih{{b{Cdc}}}{}}{c{{Af{AAj}}}Jf}{Ihf}{{{b{AAj}}{b{AAj}}}B`}{{{b{AAj}}{b{CdKh}}}{{Af{fKj}}}}0{cc{}}{{{b{AAj}}{b{Cdc}}}fMl}{{}Ih}{{}c{}}{{{b{AAj}}c}AfA@f}{bc{}}{bMd}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{A@nAA`}}}}{bAAb}7````````````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{AAl}}}AAl}{{b{b{Cdc}}}f{}}{bf}{Ih{{b{c}}}{}}{Ih{{b{Cdc}}}{}}{c{{Af{AAl}}}Jf}{Ihf}{{{b{AAl}}{b{AAl}}}B`}{{b{b{c}}}B`{}}00{{{b{AAl}}{b{CdKh}}}{{Af{fKj}}}}0{cc{}}{{{b{AAl}}{b{Cdc}}}fMl}{{}Ih}{{}c{}}{{{b{AAl}}c}AfA@f}{bc{}}{bMd}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{A@nAA`}}}}{bAAb}7``{{}j}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}`0{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjClCn}j}{{cDb}j{{Bb{{A`{j}}}}}}{cj{{Aj{j}}}}{{{Dn{j}}}j}{{{b{E`}}}j}{{jCn}j}{{{b{{A`{j}}}}}j}{cj{{Aj{n}}}}{c{{AB`{{Dn{AAn}}}}}{{ABd{}{{I`{ABb}}}}}}{ej{{Aj{n}}}{{Ib{}{{I`{c}}}}}}{{cABf}{{AB`{ABb}}}{{Bb{{A`{ABb}}}}}}{{eB`}{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}11{e{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{c{b{E`}}B`}j{{Bb{{A`{j}}}}}}{{jjId}j}{{jceB`}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{jjInJ`}j}0{Gnj}{{jjInJ`{Bl{Jb}}{Bl{n}}}j}0``{{{b{Cn}}}j}{cj{{Bb{{A`{Cn}}}}}}{H`j}{{jce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{{b{E`}}c}{{Af{jAd}}}{{Bb{{A`{j}}}}}}``{cj{{Bb{{A`{Cl}}}}}}{{jjClCn}j}{{jjj}j}{jj}0{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{{b{E`}}}j}00```0````2{{jjId}j}{{{b{E`}}jOd}j}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{cj}j{{Aj{j}}}}{{jjHb}j}0``{{jjIdB`}j}6{{jjInJ`}j}0``````````{{bd}f}{b{{b{c}}}{}}00{{{b{Cd}}}{{b{Cdc}}}{}}00{{{b{Nn}}{b{Cd{A`{Bh}}}}}{{Af{{Bl{Bh}}Ad}}}}{{{b{ABh}}AAn}{{Af{AAnAd}}}}{{{b{ABh}}}ABh}{{b{b{Cdc}}}f{}}{bf}{Ih{{b{c}}}{}}00{Ih{{b{Cdc}}}{}}00{c{{Af{ABh}}}Jf}{Ihf}00{{{b{ABh}}{b{ABh}}}B`}{{b{b{c}}}B`{}}00{{{b{ABh}}{b{CdKh}}}{{Af{fKj}}}}{cc{}}00{{{ABl{ABj}}}ABh}{{{b{ABn}}{b{{Mh{Cn}}}}Mj{b{{A`{Df}}}}}{{Af{DfAd}}}}{{{b{Nn}}}{{Bl{{Bf{{Ab{Bd}}}}}}}}{{}Ih}00{{}c{}}00{{{ABl{ABj}}{Bl{Cn}}B`B`}Nn}{{{Bl{Cn}}}ABn}{{{b{ABh}}c}AfA@f}{bc{}}{c{{Af{e}}}{}{}}00{{}{{Af{c}}}{}}00{{{b{Nn}}{b{Cd{Dn{Id}}}}}{{Af{fAd}}}}{{{b{ABn}}{b{Cd{Dn{Id}}}}}{{Af{fAd}}}}{bAAb}00999`{{A@jB`}j}{A@jj}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{A@jjB`}j}{{A@jj}j}1{Ih{{b{c}}}{}}{Ih{{b{Cdc}}}{}}{Ihf}3{{A@jjIh}j}4{{A@j{b{E`}}}{{Af{jAd}}}}65{cc{}}6;:{{}Ih}{{}c{}}{{A@j{b{E`}}B`}j}{{A@j{Bl{Cn}}{Bl{Ih}}}j}:>>{{A@jIhAC`}j}0{{A@jjjB`}j}0{{A@jjjB`Cl}j}{A@jj}{{A@jjj}j}?;;?;??????{{A@jCnHdj}j}{{A@jj}j}{{A@jHd}j}{{A@j{Bl{Jb}}{Bl{n}}Hdj}j}{{A@jIh}j}{{A@jjB`}j}7377{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAAb}{{}c{}}8``````````````````````````````````{{bd}f}00000000{{ABbc}{{AB`{AAn}}}{{Bn{ACb{b{Cd{ACf{ACd}}}}{b{Cd{ACf{ACh}}}}}{{Bj{{AB`{f}}}}}}}}{{ABbB`}ABb}{{ACjc}ABb{{Bb{{A`{j}}}}}}{{}ACl}`{{ACnB`}ACn}{{{Ab{AD`}}ADb}{{AB`{ABb}}}}{{ABbABbcc}ABb{{Aj{j}}}}{{ACjcADd}ABb{{Bn{AAn}{{Bj{{AB`{AAn}}}}}}C`Cb}}{{AClACl}ACl}{{{b{CdACl}}ACl}f}10{{{b{ACl}}}Lb}021{b{{b{c}}}{}}000000000{{{b{Cd}}}{{b{Cdc}}}{}}000000000{{ABbADfcDb}ABb{{Bb{{A`{j}}}}}}{ABbABb}``{{{b{ADh}}}f}{{ABb{ADj{{b{E`}}Cn}}B`}ABb}{{ABbCnB`}ABb}{{{b{ADh}}}ADh}{{{b{ABb}}}ABb}{{{b{ACj}}}ACj}{{{b{ADb}}}ADb}{{{b{ADl}}}ADl}{{{b{ADn}}}ADn}{{{b{AE`}}}AE`}{{{b{AEb}}}AEb}{{{b{ACl}}}ACl}{{b{b{Cdc}}}f{}}00000000{bf}00000000{{{b{AEd}}}{{Bl{{b{AEf}}}}}}0{{{b{ADl}}}{{Bl{{b{AEf}}}}}}{{{b{AE`}}}{{Bl{{b{AEf}}}}}}``{{ACnAEh}ACn}{ABb{{AB`{AAn}}}}{ABb{{AB`{ADh}}}}{{{b{CdABb}}}{{AB`{ADd}}}}{AClACl}{{{b{AEd}}{Dn{ABb}}}{{AB`{ABb}}}}0{{{b{ADl}}{Dn{ABb}}}{{AB`{ABb}}}}{{{b{ACl}}ACl}B`}{ABbABb}{{ABbABb{Bl{n}}}ABb}{{}ABb}{{}ADb}{{}ADn}{{}AEb}{{}ACl}{Ih{{b{c}}}{}}000000000{Ih{{b{Cdc}}}{}}000000000{{{b{ABb}}}{{AB`{Md}}}}000{{AClACl}ACl}{Ihf}0{{{b{CdADh}}}f}1{{ABbe}ABb{{Aj{Ah}}}{{Ib{}{{I`{c}}}}}}22222220{{ABb{Bl{{Dn{j}}}}}ABb}8{{{b{ABb}}B`}{{AB`{Md}}}}{{ABbe}ABb{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{{b{CdACl}}c}f{{Ib{}{{I`{ACl}}}}}}{{{b{ADh}}}{{Bl{{AB`{AAn}}}}}}{{ABbIh}{{AB`{AAn}}}}{{{b{ADh}}}{{AB`{AAn}}}}{{ABbc}ABb{{Aj{j}}}}0{{ABbj}ABb}{ACnABb}{AEd{{AB`{ABb}}}}0{ADl{{AB`{ABb}}}}{AE`{{AB`{ABb}}}}210{ABbABb}{{{b{ACl}}{b{CdKh}}}{{Af{fKj}}}}0000{{ACnB`}ACn}{cc{}}0{ACjABb}1{JhABb}2222222{Lb{{Bl{ACl}}}}{LbACl}00{cACl{{Ib{}{{I`{ACl}}}}}}{{{b{E`}}}{{Bl{ACl}}}}{{ABbABbcc}ABb{{Aj{j}}}}{{{b{ABb}}}ACl}{{{b{AEd}}}B`}0{{{b{ADl}}}B`}`{{ABbe}ACj{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{ABbjcAEj}ACj{{Bb{{A`{j}}}}}}1{{ACj{Bl{Ih}}}ABb}``{{ACnAEl}ACn}```{{}Ih}0000000008{{{b{CdACl}}ACl}f}{{AClACl}ACl}{{{b{ACl}}ACl}B`}{{}c{}}000000000{ACl}{{{b{ACl}}}B`}0{{{b{ACl}}}{{AEn{ACl}}}}{{{b{ACl}}}{{AF`{ACl}}}}{{ABbABbccAFb}ABb{{Bb{{A`{j}}}}}}{ABbACn}{{ACnB`}ACn}{{ACn{Dn{j}}}ABb}{ABbABb}{AFdABb}1{{ABbABbcc}ABb{{Aj{j}}}}{{ACnc}ACn{{Bb{{A`{j}}}}}}{{ABbADf}ABb}``{{AE`B`}AE`}`{{ABbcAFf{Bl{{Ab{Kl}}}}{Bl{{b{E`}}}}}ABb{{Bn{AAn}{{Bj{{AB`{AAn}}}}}}C`Cb}}{{ABbABhAFf{Bl{ADd}}B`}ABb}777{{ABbABbc}{{AB`{ABb}}}{{Aj{n}}}}8{{{b{AEd}}}{{Bl{Ih}}}}{{{b{ADl}}}{{Bl{Ih}}}}{{{b{AE`}}}{{Bl{Ih}}}}````>{cADl{{Bb{AFh}}}}{cAE`{{Bb{AFh}}}}{{{Ab{{A`{AFj}}}}}ADl}{{{Ab{{A`{AFj}}}}}AE`}{AFlADl}{AFlAE`}{AClACl}{ABbABb}{{ACnc}ACn{{Bb{{A`{j}}}}}}{{ABb{b{Cd{ACf{ACd}}}}{b{Cd{ACf{ACh}}}}}{{AB`{ACb}}}}``{ABb{{AB`{{Ob{AAnAAn}}}}}}{{ABbjOd}ABb}{{{b{AEd}}}B`}{{{b{ADl}}}B`}{{{b{AE`}}}B`}``{{{b{CdACl}}ACl}f}{{ABbeiB`}ABb{{Bb{E`}}}{{Ib{}{{I`{c}}}}}{{Bb{E`}}}{{Ib{}{{I`{g}}}}}}98{{ABbjcOh}ACj{{Bb{{A`{j}}}}}}{{{b{AEd}}}{{Bl{{b{AFn}}}}}}{{{b{ADl}}}{{Bl{{b{AFn}}}}}}{{{b{AE`}}}{{Bl{{b{AFn}}}}}}```{{AG`AGbB`}ABb}{{cADn}{{AB`{ABb}}}{{Bb{AFh}}}}{{{Ab{{A`{AFj}}}}ADn}{{AB`{ABb}}}}{{AFlADn}{{AB`{ABb}}}}{{cAEb}{{AB`{ABb}}}{{Bb{AFh}}}}{{{Ab{{A`{AFj}}}}AEb}{{AB`{ABb}}}}{{AFlAEb}{{AB`{ABb}}}}``{{}ACl}{{{b{CdABb}}{b{Cd{ACf{ACd}}}}{b{Cd{ACf{ACh}}}}}{{AB`{ADd}}}}{{ABbc}ABb{{Bb{{A`{j}}}}}}0{{ABbABbcc}ABb{{Aj{j}}}}{{{b{CdACl}}AClB`}f}{{{b{ABb}}{ACf{ACd}}{ACf{ACh}}}f}{{ABbc}ABb{{Aj{j}}}}{{ABbce}ABb{{Aj{j}}}{{Aj{j}}}}{{ABbcAGd}{{AB`{f}}}{{Bb{AFh}}}}{{ABbcAGf}{{AB`{f}}}{{Bb{AFh}}}}{{ABbMd{Bl{AEf}}AGf}{{AB`{f}}}}{{ABbcAGh}{{AB`{f}}}{{Bb{AFh}}}}{{ABbcAGj}{{AB`{f}}}{{Bb{AFh}}}}{{ABbMd{Bl{AEf}}AGj}{{AB`{f}}}}`{{ABbClADf}ABb}{{ABbcDb}ABb{{Il{n}}}}{{ABbcDb}ABb{{Bb{{A`{j}}}}}}{{{b{AEd}}}{{b{AFl}}}}{{{b{ADl}}}{{b{AFl}}}}{{{b{AE`}}}{{b{AFl}}}}{{ABbId}ABb}{{AClACl}ACl}{{{b{CdACl}}ACl}f}{{ACnc}ACn{{Aj{n}}}}{ABbABb}3{{ABbADf}ABb}{{ACj{Bl{Ih}}}ABb}{ABb{{AB`{AGl}}}}0{{{b{ABb}}B`}{{AB`{Md}}}}{bc{}}000000007{{ABbADfcDb}ABb{{Bb{{A`{j}}}}}}{c{{Af{e}}}{}{}}000000000{{}{{Af{c}}}{}}000000000{bAAb}000000000<{{ABb{Bl{{Dn{Md}}}}AGn}ABb}{{ABb{Bl{e}}AGn}ABb{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{ABb{Bl{{Dn{n}}}}AGn}ABb}1{{ABbe}ABb{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{ABbHn}ABb}`{{ACnAH`}ACn}{{ABbId}ABb}{{}c{}}000000000{{ACnABb}ACn}{{AE`{Bl{AHb}}}AE`}{{ADlB`}ADl}{{ADl{Bl{AEf}}}ADl}{{AE`{Bl{AEf}}}AE`}{{ABbB`}ABb}0{{ABbj}ABb}{{ABbc}ABb{{Bb{{A`{j}}}}}}022{{ADl{Bl{n}}}ADl}{{ABbc}ABb{{Bb{{A`{ABb}}}}}}7{{ADl{Bl{ADd}}}ADl}{{ADlAHd}ADl}{{ADlId}ADl}:::{{AE`B`}AE`}5{{AE`{Bl{n}}}AE`}{{ADl{Bl{Ih}}}ADl}>=={{AEdc}AEd{{Aj{{Bl{Ih}}}}}}{{ADlc}ADl{{Aj{{Bl{Ih}}}}}}2{{AE`c}AE`{{Aj{{Bl{Ih}}}}}}{{AE`{Bl{Ih}}}AE`}>{{ADl{Bl{AHf}}}ADl}{{ABbACl}ABb}{{AEd{Ab{{A`{AFj}}}}}AEd}0{{ABbB`}ABb}0{{ADl{Bl{Id}}}ADl}{{ADlB`}ADl}{{AEdB`}AEd}1=3{{AEdc}AEd{{Aj{{Bl{AFn}}}}}}{{ABbc{Bl{ADf}}}ABb{{Aj{n}}}}{{ADl{Bl{AFn}}}ADl}{{ADlc}ADl{{Aj{{Bl{AFn}}}}}}{{AE`{Bl{AFn}}}AE`}{{AE`c}AE`{{Aj{{Bl{AFn}}}}}}{{ADl{Bl{ADd}}}ADl}{{AE`{Bl{ADd}}}AE`}{{ADlc}{{AB`{ADl}}}{{Bn{AG`}{{Bj{{AB`{AG`}}}}}}}}1{{ADlId}ADl}={{ADlIh}ADl}0>{{AEdAFl}AEd}{{ADlAFl}ADl}{{AE`AFl}AE`}{{ABbB`}ABb}{{ADlB`}ADl}01{ABbABb}{{{b{AAn}}e{Bl{i}}{Bl{m}}B`{Bl{j}}{Bl{{b{E`}}}}}{{AB`{AAn}}}{{Aj{n}}}{{Ib{}{{I`{c}}}}}{{Aj{n}}}{{Ib{}{{I`{g}}}}}{{Aj{n}}}{{Ib{}{{I`{k}}}}}}0```````````````````````````````````````````````````````````````````````````````````{{bd}f}000000000000000{{{b{In}}Cl{Bl{{b{AHh}}}}}{{Af{ClAd}}}}00{{{b{AD`}}}B`}00{{{b{AD`}}}{{b{Dj}}}}`{b{{b{c}}}{}}00000000000000000{{{b{Cd}}}{{b{Cdc}}}{}}00000000000000000{{{b{AEj}}}AEj}{{{b{Oh}}}Oh}{{{b{In}}}In}{{{b{AFb}}}AFb}{{{b{AEl}}}AEl}{{{b{AH`}}}AH`}{{{b{AGd}}}AGd}{{{b{AGf}}}AGf}{{{b{AGh}}}AGh}{{{b{AHj}}}AHj}{{{b{Of}}}Of}{{{b{AGj}}}AGj}{{{b{AHl}}}AHl}{{{b{AHn}}}AHn}{{{b{ABf}}}ABf}{{{b{Jh}}}Jh}{{b{b{Cdc}}}f{}}000000000000000{bf}000000000000000``{{{b{In}}{b{In}}}AI`}`{{b{b{c}}}AI`{}}``{{{b{Jh}}}{{Af{{Ab{{Mh{Cn}}}}Ad}}}}`{{{b{In}}}Cl}{{{b{In}}}B`}{{}AEj}{{}Oh}{{}AFb}{{}AH`}{{}AGd}{{}AGf}{{}AGh}{{}Of}{{}AGj}{{}AHn}{{}ABf}{{}Jh}{Ih{{b{c}}}{}}00000000000000000{Ih{{b{Cdc}}}{}}00000000000000000`{{{b{Jh}}}{{Af{MdAd}}}}0{c{{Af{AEj}}}Jf}{c{{Af{Oh}}}Jf}{c{{Af{In}}}Jf}{c{{Af{AFb}}}Jf}{c{{Af{AEl}}}Jf}{c{{Af{AH`}}}Jf}{c{{Af{AGd}}}Jf}{c{{Af{AGf}}}Jf}{c{{Af{AGh}}}Jf}{c{{Af{AHj}}}Jf}{c{{Af{Of}}}Jf}{c{{Af{AGj}}}Jf}{c{{Af{AHl}}}Jf}{c{{Af{AHn}}}Jf}{c{{Af{ABf}}}Jf}{c{{Af{Jh}}}Jf}`{{{b{Jh}}}{{Af{{`{Nb}}Ad}}}}{Ihf}00000000000000000{{{b{AEj}}{b{AEj}}}B`}{{{b{Oh}}{b{Oh}}}B`}{{{b{In}}{b{In}}}B`}{{{b{AFb}}{b{AFb}}}B`}{{{b{AEl}}{b{AEl}}}B`}{{{b{AH`}}{b{AH`}}}B`}{{{b{AGd}}{b{AGd}}}B`}{{{b{AGf}}{b{AGf}}}B`}{{{b{AGh}}{b{AGh}}}B`}{{{b{AHj}}{b{AHj}}}B`}{{{b{Of}}{b{Of}}}B`}{{{b{AGj}}{b{AGj}}}B`}{{{b{AHl}}{b{AHl}}}B`}{{{b{AHn}}{b{AHn}}}B`}{{{b{ABf}}{b{ABf}}}B`}{{b{b{c}}}B`{}}00000000000000000000000000000000000`{{{b{AEj}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Oh}}{b{CdKh}}}{{Af{fKj}}}}{{{b{In}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{AD`}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AFb}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AEl}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{AH`}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{AGd}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AGf}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AGh}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AHj}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Of}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AGj}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AHl}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AHn}}{b{CdKh}}}{{Af{fKj}}}}{{{b{ABf}}{b{CdKh}}}{{Af{fKj}}}}`{cc{}}000{AElAFb}11111111111111`{{{b{AHl}}}Cn}{{{b{AIb}}{Dn{Bh}}{b{AEj}}}{{Af{{Ob{Bh{Dn{Bh}}AId}}Ad}}}}{{{b{AEj}}{b{Cdc}}}fMl}{{{b{Oh}}{b{Cdc}}}fMl}{{{b{In}}{b{Cdc}}}fMl}{{{b{AFb}}{b{Cdc}}}fMl}{{{b{AEl}}{b{Cdc}}}fMl}{{{b{AH`}}{b{Cdc}}}fMl}{{{b{AGd}}{b{Cdc}}}fMl}{{{b{AGf}}{b{Cdc}}}fMl}{{{b{AGh}}{b{Cdc}}}fMl}{{{b{AHj}}{b{Cdc}}}fMl}{{{b{Of}}{b{Cdc}}}fMl}{{{b{AGj}}{b{Cdc}}}fMl}{{{b{AHl}}{b{Cdc}}}fMl}{{{b{AHn}}{b{Cdc}}}fMl}{{{b{ABf}}{b{Cdc}}}fMl}``````{{}Ih}00000000000000000{{}c{}}00000000000000000{{{b{Jh}}}}{{{b{AEl}}}B`}{{{b{In}}{Bl{{b{E`}}}}}B`}{{{b{In}}}B`}2{{{b{AHl}}}B`}{{{b{AH`}}{b{AEl}}}{{Af{fAd}}}}2``{Nhj}{Inj}{AIfj}{AHlj}````{AHlAHl}`{{{b{In}}}Cl}8{{InCl}In}`1{{{b{AH`}}}B`}{In};{ClIn}{AElAFb}{{{b{AD`}}AIh}{{Af{{Bl{AAn}}Ad}}}}````{{{b{E`}}}In}`{{{b{In}}{b{In}}}{{Bl{AI`}}}}```{Jh{{Af{{Dn{Id}}Ad}}}}`{{{b{AIb}}{Dn{Bh}}{b{Oh}}}{{Af{{Ob{Bh{Dn{Bh}}AId}}Ad}}}}`{{{b{AD`}}AIh}{{Af{AAnAd}}}}{{{b{AD`}}{Bl{Ih}}}{{Af{{Ab{{Mh{Cn}}}}Ad}}}}`{{{b{AEj}}c}AfA@f}{{{b{Oh}}c}AfA@f}{{{b{In}}c}AfA@f}{{{b{AFb}}c}AfA@f}{{{b{AEl}}c}AfA@f}{{{b{AH`}}c}AfA@f}{{{b{AGd}}c}AfA@f}{{{b{AGf}}c}AfA@f}{{{b{AGh}}c}AfA@f}{{{b{AHj}}c}AfA@f}{{{b{Of}}c}AfA@f}{{{b{AGj}}c}AfA@f}{{{b{AHl}}c}AfA@f}{{{b{AHn}}c}AfA@f}{{{b{ABf}}c}AfA@f}{{{b{Jh}}c}AfA@f}`{{{b{AFb}}}B`}````{{{b{AFb}}}{{b{n}}}}`{Jh{{Af{AGlAd}}}}{{{b{AHl}}}{{Bl{AIj}}}}{bc{}}000000000000000{bMd}00`{{{b{AGf}}c}{{AIl{c}}}AIn}{{{b{AGj}}c}{{AJ`{c}}}AIn}{{{b{In}}Cl{Bl{{b{AHh}}}}ceg}{{Af{ClAd}}}{{Bn{Cl}{{Bj{Cl}}}}}{{Bn{Cl}{{Bj{AJb}}}}}{{Bn{AJb}{{Bj{Cl}}}}}}{{{b{In}}Cl{Bl{{b{AHh}}}}}{{Af{ClAd}}}}00{c{{Af{e}}}{}{}}00000000000000{AIj{{Af{AHlAd}}}}111{{}{{Af{c}}}{}}00000000000000000{b{{Af{A@nAA`}}}}00{bAAb}00000000000000000`{{}c{}}00000000000000000{{{b{In}}}Cl}{{{b{In}}}B`}{{AFbAEh}AFb}`{{AFb{Bl{n}}}AFb}{{{b{AGf}}AAnc}{{Af{fAd}}}AIn}{{{b{AGj}}AAnc}{{Af{fAd}}}AIn}```````````````````````````````````````````````````````","D":"GJh","p":[[1,"reference"],[5,"Private",3587],[1,"unit"],[5,"MetaNameSpace",5,3588],[6,"Expr",5,3589],[5,"StructNameSpace",5,3590],[5,"PlSmallStr",3591],[1,"slice"],[5,"Arc",3592],[6,"PolarsError",3593],[6,"Result",3594],[6,"Selector",5,3595],[10,"Into",3596],[5,"ArrayNameSpace",5,3597],[5,"ListNameSpace",5,3598],[1,"bool"],[10,"AsRef",3596],[10,"FunctionOutputField",5,3599],[5,"SpecialEq",5,3599],[6,"Column",3600],[17,"Output"],[6,"Option",3601],[10,"Fn",3602],[10,"Send",3603],[10,"Sync",3603],[0,"mut"],[6,"VisitRecursion",3604],[10,"FnMut",3602],[6,"FunctionExpr",5,3605],[1,"i64"],[6,"DataType",3606],[5,"SortOptions",3607],[5,"SortMultipleOptions",3607],[5,"FieldsMapper",5,3608],[5,"Field",3609],[10,"ColumnsUdf",5,3599],[10,"Any",3610],[6,"AggExpr",5,3589],[5,"Vec",3611],[1,"str"],[1,"u64"],[5,"BinaryNameSpace",1732,3612],[6,"Operator",5,3589],[10,"Clone",3613],[1,"array"],[1,"i32"],[10,"RenameAliasFn",5,3599],[5,"UserDefinedFunction",5,3614],[10,"ColumnBinaryUdf",5,3599],[6,"CastOptions",3615],[5,"CategoricalNameSpace",5,3616],[5,"When",5,3617],[5,"Then",5,3617],[5,"ChainedWhen",5,3617],[5,"ChainedThen",5,3617],[6,"Excluded",5,3589],[6,"BooleanFunction",5,3618],[6,"CategoricalFunction",5,3619],[6,"TemporalFunction",5,3620],[6,"PowFunction",5,3621],[6,"StringFunction",5,3622],[6,"StructFunction",5,3623],[5,"DatetimeArgs",5,3624],[5,"DurationArgs",5,3624],[5,"RollingCovOptions",5,3625],[5,"StrptimeOptions",5,3625],[5,"JoinOptions",5,3625],[6,"WindowType",5,3625],[6,"WindowMapping",5,3625],[6,"NestedType",5,3625],[5,"UnpivotArgsDSL",5,3625],[17,"Item"],[10,"IntoIterator",3626],[1,"u8"],[10,"ExprEvalExtension",5,3627],[1,"usize"],[1,"f64"],[10,"IntoVec",3628],[5,"Duration",2908,3629],[6,"ClosedWindow",3630],[6,"TimeUnit",3631],[10,"BinaryUdfOutputField",5,3599],[10,"Deserializer",3632],[6,"DslPlan",2908,3633],[5,"Series",3634],[6,"NullBehavior",3635],[5,"DateLikeNameSpace",1754,3636],[10,"Sized",3603],[10,"ListNameSpaceExtension",5,3637],[5,"EWMOptions",3638],[6,"FillNullStrategy",3639],[5,"Formatter",3640],[5,"Error",3640],[10,"UdfSchema",5,3641],[1,"i8"],[1,"i16"],[1,"u32"],[1,"f32"],[1,"u16"],[6,"InequalityOperator",3642],[6,"BinaryFunction",3643],[6,"RangeFunction",3644],[6,"ListFunction",3645],[6,"BusinessFunction",3646],[6,"ArrayFunction",3647],[5,"String",3648],[5,"FunctionOptions",3649],[5,"Schema",3650],[6,"Context",3633],[10,"Hasher",3651],[6,"InterpolationMethod",3652],[10,"IntoListNameSpace",5,3637],[10,"Display",3640],[6,"ClosedInterval",3653],[5,"ExprNameNameSpace",5,3654],[10,"Literal",2908,3655],[10,"FnOnce",3602],[5,"SuperTypeOptions",3656],[5,"PythonUdfExpression",2289,3657],[5,"UnitVec",3658],[1,"tuple"],[6,"QuantileInterpolOptions",3659],[5,"RankOptions",2908,3660],[5,"RollingGroupOptions",2908,3661],[5,"RollingOptionsFixedWindow",3662],[5,"Float64Type",3663],[5,"ChunkedArray",3664],[10,"Copy",3603],[5,"RollingOptionsDynamicWindow",3665],[6,"SearchSortedSide",3666],[10,"Serializer",3667],[6,"IsSorted",3668],[5,"StringNameSpace",2351,3669],[6,"ListToStructWidthStrategy",3670],[5,"CompactString",3671],[6,"ToCompactStringError",3671],[5,"TypeId",3610],[6,"Roll",3672],[6,"NonExistent",3673],[6,"RollingFunction",2103,3674],[6,"RollingFunctionBy",2137,3675],[6,"TrigonometricFunction",2170,3676],[5,"DataFrame",3677],[8,"PolarsResult",3593],[5,"LazyFrame",2418],[10,"IntoParallelIterator",3678],[5,"UnionArgs",2908,3649],[5,"PythonFunction",2289,3657],[5,"PyAny",3679],[5,"Py",3680],[5,"PythonGetOutput",2289,3657],[1,"char"],[5,"Node",3681],[6,"IR",3682],[5,"Arena",3681],[6,"AExpr",3683],[5,"LazyGroupBy",2418],[5,"OptFlags",2418,3684],[5,"JoinBuilder",2418],[10,"AnonymousScan",2908,3685],[5,"ScanArgsAnonymous",2418,3686],[8,"SchemaRef",3687],[8,"IdxSize",3688],[5,"InProcessQuery",2418,3689],[8,"PlHashMap",3690],[5,"LazyCsvReader",2418,3691],[5,"ScanArgsIpc",2418,3692],[5,"LazyJsonLineReader",2418,3693],[5,"ScanArgsParquet",2418,3694],[10,"LazyFileListReader",2418,3695],[5,"CloudOptions",3696],[6,"JoinCoalesce",3697],[5,"DynamicGroupOptions",2908,3661],[6,"JoinType",2908,3697],[5,"Iter",3698],[5,"IterNames",3698],[5,"JoinArgs",2908,3697],[10,"IntoLazy",2418],[8,"AllowedOptimizations",2418,3684],[5,"Path",3699],[5,"PathBuf",3699],[6,"ScanSources",3700],[5,"RowIndex",3701],[8,"Schema",3687],[8,"PyObject",3680],[5,"CsvWriterOptions",2908,3702],[5,"IpcWriterOptions",2908,3703],[5,"JsonWriterOptions",2908,3704],[5,"ParquetWriteOptions",2908,3705],[5,"IRPlan",3682],[6,"UniqueKeepStrategy",3677],[6,"JoinValidation",2908,3697],[8,"NonZeroUsize",3706],[6,"CsvEncoding",3707],[6,"NullValues",3707],[6,"Tz",3708],[6,"RankMethod",2908,3660],[6,"LiteralValue",2908,3655],[5,"AnonymousScanOptions",2908,3649],[6,"Ordering",3709],[10,"PolarsTemporalGroupby",2908,3661],[6,"GroupsProxy",3710],[5,"Null",2908,3655],[5,"AnonymousScanArgs",2908,3685],[6,"AnyValue",3711],[5,"IpcWriter",3703],[10,"Write",3712],[5,"ParquetWriter",3713],[5,"NaiveDateTime",3714],[15,"Quantile",1620],[15,"Min",1620],[15,"Max",1620],[15,"IsBetween",2027],[15,"Any",2027],[15,"All",2027],[15,"SortBy",1630],[15,"Filter",1630],[15,"Cast",1630],[15,"Sort",1630],[15,"Gather",1630],[15,"RenameAlias",1630],[15,"Ternary",1630],[15,"Function",1630],[15,"Window",1630],[15,"AnonymousFunction",1630],[15,"Slice",1630],[15,"BinaryExpr",1630],[15,"QCut",2030],[15,"Entropy",2030],[15,"Log",2030],[15,"Hist",2030],[15,"Cut",2030],[15,"Correlation",2030],[15,"Round",2030],[15,"TopK",2030],[15,"TopKBy",2030],[15,"RoundSF",2030],[15,"EwmMeanBy",2030],[15,"Clip",2030],[15,"BackwardFill",2030],[15,"ForwardFill",2030],[15,"Random",2030],[15,"GatherEvery",2030],[15,"ValueCounts",2030],[15,"Rank",2030],[15,"EwmMean",2030],[15,"EwmStd",2030],[15,"EwmVar",2030],[15,"ReplaceStrict",2030],[15,"CumCount",2030],[15,"CumSum",2030],[15,"CumProd",2030],[15,"CumMin",2030],[15,"CumMax",2030],[15,"ConcatHorizontal",2075],[15,"ConcatVertical",2075],[15,"ExtractGroups",2075],[15,"JsonDecode",2075],[15,"PadStart",2075],[15,"PadEnd",2075],[15,"SplitExact",2075],[15,"Contains",2075],[15,"Find",2075],[15,"Replace",2075],[15,"DatetimeFunction",2095],[15,"GroupBy",3532],[15,"Union",3532],[15,"Sort",3532],[15,"Scan",3532],[15,"ExtContext",3532],[15,"DataFrameScan",3532],[15,"IR",3532],[15,"Select",3532],[15,"HStack",3532],[15,"MapFunction",3532],[15,"Cache",3532],[15,"Filter",3532],[15,"Distinct",3532],[15,"Slice",3532],[15,"Sink",3532],[15,"Join",3532],[15,"HConcat",3532],[15,"PythonScan",3532],[15,"Range",3584]],"r":[[8,3589],[22,3597],[31,3599],[33,3618],[38,3619],[39,3616],[43,3617],[44,3617],[48,3599],[50,3599],[69,3624],[79,3624],[89,3589],[94,3589],[95,3627],[96,3654],[104,3608],[105,3654],[115,3605],[116,3599],[122,3599],[137,3637],[153,3625],[164,3598],[165,3637],[180,3588],[199,3625],[206,3589],[217,3621],[229,3599],[240,3625],[249,3595],[261,3599],[269,3622],[276,3625],[278,3623],[279,3590],[287,3620],[289,3617],[309,3641],[312,3625],[315,3614],[320,3617],[323,3625],[324,3625],[368,3715],[372,3716],[379,3716],[382,3717],[386,3718],[388,3719],[403,3720],[405,3720],[411,3721],[412,3722],[414,3718],[416,3617],[489,3723],[496,3722],[499,3718],[587,3716],[588,3715],[589,3715],[590,3724],[591,3724],[592,3724],[601,3725],[603,3716],[607,3716],[612,3719],[613,3624],[614,3719],[615,3719],[765,3718],[767,3715],[768,3715],[769,3624],[864,3718],[906,3716],[909,3724],[981,3718],[1027,3715],[1063,3719],[1064,3719],[1118,3722],[1120,3722],[1130,3718],[1133,3718],[1137,3655],[1147,3717],[1158,3718],[1161,3718],[1168,3722],[1172,3716],[1173,3722],[1176,3716],[1177,3722],[1185,3722],[1189,3716],[1216,3722],[1218,3718],[1231,3725],[1238,3718],[1241,3722],[1245,3716],[1249,3726],[1262,3725],[1263,3725],[1340,3725],[1348,3718],[1354,3722],[1358,3716],[1365,3617],[1368,3719],[1537,3718],[1589,3617],[1732,3612],[1753,3616],[1754,3636],[1827,3618],[1831,3619],[1878,3605],[1940,3621],[1979,3622],[1987,3623],[1992,3620],[2022,3605],[2023,3605],[2024,3605],[2025,3605],[2026,3605],[2097,3619],[2101,3621],[2107,3674],[2141,3675],[2185,3676],[2214,3624],[2215,3624],[2216,3715],[2217,3716],[2219,3716],[2220,3717],[2221,3719],[2222,3720],[2223,3720],[2224,3721],[2225,3722],[2226,3722],[2227,3716],[2228,3715],[2230,3715],[2232,3724],[2235,3724],[2236,3724],[2237,3725],[2238,3716],[2239,3716],[2240,3719],[2241,3719],[2242,3624],[2243,3719],[2244,3719],[2247,3715],[2248,3715],[2249,3624],[2250,3716],[2251,3724],[2254,3715],[2255,3719],[2256,3719],[2257,3722],[2258,3722],[2259,3717],[2260,3722],[2261,3722],[2262,3722],[2266,3722],[2271,3722],[2272,3725],[2273,3722],[2274,3716],[2275,3726],[2276,3725],[2277,3725],[2280,3725],[2281,3722],[2282,3719],[2283,3719],[2289,3657],[2290,3657],[2291,3657],[2292,3657],[2293,3657],[2351,3669],[2412,3614],[2418,3684],[2426,3689],[2429,3691],[2430,3695],[2433,3693],[2435,3684],[2442,3686],[2443,3692],[2444,3694],[2908,3685],[2909,3685],[2910,3649],[2918,3702],[2925,3633],[2926,3629],[2928,3661],[2946,3703],[2948,3697],[2949,3697],[2950,3697],[2951,3704],[2953,3655],[2954,3655],[2960,3655],[2961,3655],[2967,3705],[2968,3661],[2971,3660],[2972,3660],[2974,3661],[2990,3649],[3389,3727]],"b":[[620,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[621,"impl-Default-for-SpecialEq%3CArc%3Cdyn+ColumnBinaryUdf%3E%3E"],[622,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[704,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[705,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[706,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[707,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[708,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[772,"impl-PartialEq-for-Expr"],[773,"impl-Expr"],[776,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[777,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[875,"impl-Debug-for-Expr"],[876,"impl-Display-for-Expr"],[878,"impl-Debug-for-Operator"],[879,"impl-Display-for-Operator"],[881,"impl-Debug-for-BooleanFunction"],[882,"impl-Display-for-BooleanFunction"],[883,"impl-Display-for-CategoricalFunction"],[884,"impl-Debug-for-CategoricalFunction"],[885,"impl-Display-for-TemporalFunction"],[886,"impl-Debug-for-TemporalFunction"],[887,"impl-Debug-for-PowFunction"],[888,"impl-Display-for-PowFunction"],[889,"impl-Display-for-StringFunction"],[890,"impl-Debug-for-StringFunction"],[891,"impl-Debug-for-StructFunction"],[892,"impl-Display-for-StructFunction"],[893,"impl-Display-for-FunctionExpr"],[894,"impl-Debug-for-FunctionExpr"],[923,"impl-From%3Cf64%3E-for-Expr"],[924,"impl-From%3Ci64%3E-for-Expr"],[925,"impl-From%3C%26str%3E-for-Expr"],[926,"impl-From%3Ci32%3E-for-Expr"],[927,"impl-From%3Ci8%3E-for-Expr"],[928,"impl-From%3CAggExpr%3E-for-Expr"],[929,"impl-From%3Ci16%3E-for-Expr"],[931,"impl-From%3Cbool%3E-for-Expr"],[932,"impl-From%3Cu64%3E-for-Expr"],[933,"impl-From%3Cu32%3E-for-Expr"],[934,"impl-From%3Cf32%3E-for-Expr"],[935,"impl-From%3Cu16%3E-for-Expr"],[936,"impl-From%3Cu8%3E-for-Expr"],[940,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[941,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[942,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[944,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[945,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[946,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[947,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[948,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[949,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[950,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[951,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[958,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[960,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[961,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[962,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[973,"impl-From%3C%26str%3E-for-Selector"],[975,"impl-From%3CPlSmallStr%3E-for-Selector"],[976,"impl-From%3CString%3E-for-Selector"],[977,"impl-From%3CExpr%3E-for-Selector"],[1001,"impl-Hash-for-Expr"],[1002,"impl-Expr"],[1300,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[1301,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[1302,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1303,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[1304,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[2123,"impl-Debug-for-RollingFunction"],[2124,"impl-Display-for-RollingFunction"],[2156,"impl-Debug-for-RollingFunctionBy"],[2157,"impl-Display-for-RollingFunctionBy"],[2200,"impl-Display-for-TrigonometricFunction"],[2201,"impl-Debug-for-TrigonometricFunction"],[2468,"impl-Flags-for-OptFlags"],[2469,"impl-OptFlags"],[2606,"impl-Octal-for-OptFlags"],[2607,"impl-UpperHex-for-OptFlags"],[2608,"impl-Binary-for-OptFlags"],[2609,"impl-Debug-for-OptFlags"],[2610,"impl-LowerHex-for-OptFlags"],[2614,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[2616,"impl-From%3CDslPlan%3E-for-LazyFrame"],[2625,"impl-Flags-for-OptFlags"],[2626,"impl-OptFlags"],[2866,"impl-LazyFileListReader-for-LazyCsvReader"],[2867,"impl-LazyCsvReader"],[2868,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2869,"impl-LazyJsonLineReader"],[2885,"impl-LazyCsvReader"],[2886,"impl-LazyFileListReader-for-LazyCsvReader"],[2887,"impl-LazyJsonLineReader"],[2888,"impl-LazyFileListReader-for-LazyJsonLineReader"],[3251,"impl-Debug-for-Duration"],[3252,"impl-Display-for-Duration"],[3255,"impl-Display-for-JoinType"],[3256,"impl-Debug-for-JoinType"],[3257,"impl-Display-for-JoinValidation"],[3258,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAC8KDAEEABIAGAAPACkAAgAuAAIAMgAAADQAEQBHAAgAUQAHAFoAAwBgAAAAYgAZAH0AGwCaAAMAnwAFAKYADgC2ABUAzQAEANMAJwD8AAkABwEQABkBBwAjARgAPQEDAEIBAABEAScAbQEBAHMBAAB2AQEAegEAAIABAACCAQAAjQEAAJABAACXAQEAmgEBAJ8BAACiAUUA6gEAAOwBAADuAQEA9AEAAPsBUABPAgAAaQINAHgCXADXAgAA2QIhAPwCAAD+AgAABAMBAAcDEgAbAzIAVgMAAFkDAQBfAwAAZQMAAGgDIgCMAwAAnAMGAKQDBQCsAwMAsQMHAL8DAADBAwIAyQMAAM4DAADQAwIA1AMAANYDAADbAwEA4AMFAOkDAQDsAxAAAAQBAAMEAAAFBCEATgQCAFIEAQBWBAAAaAQAAHAEAAB9BAAAgAQFAIkEAACMBAAAnAQAAJ8EAgCnBAIAqwQDALQEAQC4BAIAvQQAAL8EAQDFBAAAzAQAAM4EAQDVBAAA1wQAAN8EAQDlBAAA5wQAAOkEAADuBAIACAUFAA8FGQAyBQAAOQUAAEAFAABFBQAARwUBAEoFAABQBQEAVgUAAFgFAABaBQIAYQUbAH4FCQCMBUMA0gUAANQFLgAOBgAAEAYAABIGIwA5BgEAPgYAAEsGAABPBgEAVAYTAGoGAABsBgAAbgYBAHEGAQB0BgYAfAZIAMYGAwDLBgIA0AYCANYGAwDeBgEA5wYCAO0GAADvBgAA/AYAAAsHAwATBzoBTwgBAFIIHABwCAEAcwgnAJwIAQCfCAcAqwgAALkIAADGCAEAzQgBANgIAgDcCAMA5QgDAO0IBwD2CBsAFQkFAB4JEQAxCQMAOAkCAD4JAABDCQIASAkBAGgJAwB7CQMAggkBAIsJAgCPCQkAnAkAAJ4JAAClCQAAqQkUAL8JAQDECRoA4wkBAOcJAADsCQAA8AkYAA4KAwATCgYAKgoAACwKAQAvCgQANwoAADkKAABCCgAASQoCAFEKAQBUCgwAbwoAAHcKAAB5CgEAfgoBAIEKAACDCgAAhwoAAIwKAwCRCgUAmgoBAKAKAwCsCgMAsQoBALYKAwC7CgAAvgoAAMcKAADMCgEA1goBANkKCADjCh4ABAsAAAYLAAAJCwEADAsJABcLAAAZCwEAIwsBACwLAQAzCwAANQsAADcLAABHCwAASQsAAFQLAQBbCwcAZgsAAGkLAQBsCwAAbgsDAHQLAAB3CwAAewsDAIMLAACFCwYAjwsCAJMLAACWCwoAogsCAKcLAACpCwAArwsTAMYLWgAlDIsAsgwTAMoMAADZDAAA2wwRAO4MAADxDBEAFQ0CABkNAgAdDQAAIA0DACcNBQAuDQEAMg0AADUNAgA5DQEAPQ0AAD8NAQBEDRUAWw11ANINBADYDSsA"}],["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPPIFGKPGGPPIPPPPPKNNNNHNNENNHNNNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNONNNHNONONNNNNNNNNNNNNNNNNNNNONNEEPKPPGKKNMMMNNHHHNNNHHNNNNNNNNNNNNNNNHNNHHHHHHHNNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","","contains_chunked","","ends_with","","ends_with_chunked","","list","scatter","size_bytes","","starts_with","","starts_with_chunked","","strings","AsList","ListNameSpaceImpl","as_list","join_literal","","join_many","","lst_arg_max","","lst_arg_min","","lst_concat","","lst_get","","lst_join","","lst_lengths","","lst_max","","lst_mean","","lst_median","","lst_min","","lst_n_unique","","lst_reverse","","lst_shift","","lst_slice","","lst_sort","","lst_std","","lst_sum","","lst_unique","","lst_unique_stable","","lst_var","","same_type","","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Full","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","Right","SeriesJoin","__clone_box","","","","_coalesce_full_join","_create_left_df_from_slice","","_finish_join","_full_join_from_series","","_join_suffix_name","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","coalesce","","cross_join","","cross_join_dfs","","default","","","default_join_ids","deref","","","","deref_mut","","","","drop","","","","eq","","","","equivalent","","","","","","","","","","","","fmt","","","","","","from","","","","","full_join","hash","","","","hash_join_inner","","hash_join_outer","","how","init","","","","inner_join","into","","","","is_asof","is_ie","is_valid_join","join","join_nulls","left_join","needs_checks","new","private_left_join_multiple_keys","should_coalesce","slice","suffix","","to_owned","","","","to_string","","try_from","","","","try_into","","","","try_to_compact_string","","type_id","","","","validation","with_coalesce","with_suffix","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","clone_to_uninit","coalesce_columns","convert_to_unsigned_index","default","deref","deref_mut","drop","ensure_sorted_arg","","eq","equivalent","","","fmt","from","hash","init","into","is_positive_idx_uncertain","is_sorted","","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","sum_horizontal","to_owned","try_from","try_into","type_id","value_counts",""],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[25,"polars_ops::chunked_array::list"],[74,"polars_ops::chunked_array::strings"],[76,"polars_ops::frame"],[80,"polars_ops::frame::join"],[239,"polars_ops::prelude"],[241,"polars_ops::series"],[293,"polars_ops::chunked_array::binary"],[294,"polars_core::datatypes"],[295,"polars_ops::chunked_array::binary::namespace"],[296,"polars_ops::chunked_array::scatter"],[297,"polars_utils::index"],[298,"polars_core::series"],[299,"polars_error"],[300,"core::marker"],[301,"core::option"],[302,"core::iter::traits::collect"],[303,"polars_ops::chunked_array::list::namespace"],[304,"polars_core::datatypes::aliases"],[305,"polars_core::frame::column"],[306,"polars_core::chunked_array::ops::sort::options"],[307,"polars_core::frame"],[308,"dyn_clone::sealed"],[309,"polars_utils::pl_str"],[310,"polars_ops::frame::join::hash_join"],[311,"polars_ops::frame::join::args"],[312,"polars_ops::frame::join::cross_join"],[313,"core::fmt"],[314,"core::convert"],[315,"core::hash"],[316,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[317,"polars_arrow::array::primitive"],[318,"alloc::string"],[319,"core::result"],[320,"compact_str"],[321,"core::any"],[322,"polars_ops::series::ops::arg_min_max"],[323,"polars_ops::series::ops"],[324,"polars_core::chunked_array::ops::search_sorted"],[325,"polars_ops::series::ops::various"],[326,"polars_ops::frame::join::general"],[327,"polars_ops::series::ops::clip"],[328,"polars_ops::series::ops::horizontal"],[329,"polars_ops::series::ops::index"],[330,"polars_ops::series::ops::negate"],[331,"polars_ops::series::ops::not"],[332,"polars_ops::series::ops::int_range"]],"i":"```````bh0000000`A`111111```BbBf000000000000000000000000000000000000000000000`Ch```Cj``DjDl``00````1``10`Dn0001`Df321`Dd0`00`1432143214321432143241E`000253`254325432543254322255544433325443322543Ej3654F`000447651476566514154`444447656547654765654765444``Gf`00```0Gb0Gd22```222``2222Gh0333333333`00```````333300","f":"```````{{{d{b}}}{{d{f}}}}{{{d{h}}{d{{l{j}}}}}n}0{{{d{h}}{d{f}}}n}01100`{{A`{d{{l{Ab}}}}e}{{Af{Ad}}}Ah{{An{}{{Aj{{Al{c}}}}}}}}{{{d{h}}}B`}03322```{{{d{Bb}}}{{d{Bd}}}}{{{d{Bf}}{d{Bh}}Bj}{{Af{Bl}}}}0{{{d{Bf}}{d{Bl}}Bj}{{Af{Bl}}}}0{{{d{Bf}}}Bn}000{{{d{Bf}}{d{{l{C`}}}}}{{Af{Bd}}}}0{{{d{Bf}}CbBj}{{Af{Ad}}}}03322{{{d{Bf}}}{{Af{Ad}}}}0{{{d{Bf}}}Ad}00011{{{d{Bf}}}{{Af{Bn}}}}0{{{d{Bf}}}Bd}0{{{d{Bf}}{d{C`}}}{{Af{Bd}}}}0{{{d{Bf}}CbCd}Bd}0{{{d{Bf}}Cf}{{Af{Bd}}}}0{{{d{Bf}}j}Ad}077{{{d{Bf}}}{{Af{Bd}}}}00011{{{d{Bf}}Bd}Bd}0`{{{d{Ch}}}{{d{Bl}}}}```{{{d{Cj}}}{{d{Cl}}}}````````````````````````{{dCn}D`}000{{Cl{d{{l{Db}}}}{d{{l{Db}}}}{Al{Db}}{d{Cl}}}Cl}{{{d{Dd}}{d{{l{Ab}}}}BjBj}Cl}0`{{{d{Dd}}{d{Cl}}{d{Ad}}{d{Ad}}Df}{{Af{Cl}}}}0{{{d{Bh}}{d{Bh}}}Db}{d{{d{c}}}{}}000{{{d{Dh}}}{{d{Dhc}}}{}}000{{{d{Df}}}Df}{{{d{Dj}}}Dj}{{{d{Dl}}}Dl}{{{d{Dn}}}Dn}{{d{d{Dhc}}}D`{}}000{dD`}000{{{d{Dj}}{d{Dl}}}Bj}`{{{d{E`}}{d{Cl}}{Al{Db}}{Al{{Eb{CbCd}}}}}{{Af{Cl}}}}0{{{d{E`}}{d{Cl}}{Al{{Eb{CbCd}}}}Bj}{{Af{{Eb{ClCl}}}}}}0{{}Df}{{}Dj}{{}Dn}{{}Ed}{Cd{{d{c}}}{}}000{Cd{{d{Dhc}}}{}}000{CdD`}000{{{d{Df}}{d{Df}}}Bj}{{{d{Dj}}{d{Dj}}}Bj}{{{d{Dl}}{d{Dl}}}Bj}{{{d{Dn}}{d{Dn}}}Bj}{{d{d{c}}}Bj{}}00000000000{{{d{Df}}{d{DhEf}}}Eh}{{{d{Dj}}{d{DhEf}}}Eh}{{{d{Dl}}{d{DhEf}}}Eh}0{{{d{Dn}}{d{DhEf}}}Eh}0{cc{}}{DlDf}111{{{d{Ej}}{d{Cl}}ei}{{Af{Cl}}}{{El{Db}}}{{An{}{{Aj{c}}}}}{{El{Db}}}{{An{}{{Aj{g}}}}}}{{{d{Df}}{d{Dhc}}}D`En}{{{d{Dj}}{d{Dhc}}}D`En}{{{d{Dl}}{d{Dhc}}}D`En}{{{d{Dn}}{d{Dhc}}}D`En}{{{d{F`}}{d{Ad}}DnBj}{{Af{{Eb{FbBj}}}}}}0{{{d{F`}}{d{Ad}}DnBj}{{Af{{Eb{{Fd{Ab}}{Fd{Ab}}}}}}}}0`{{}Cd}0007{{}c{}}000{{{d{Dl}}}Bj}0{{{d{Dn}}{d{Dl}}}{{Af{D`}}}}{{{d{Ej}}{d{Cl}}eiDf}{{Af{Cl}}}{{El{Db}}}{{An{}{{Aj{c}}}}}{{El{Db}}}{{An{}{{Aj{g}}}}}}`;{{{d{Dn}}}Bj}={{{d{Cl}}{d{Cl}}Bj}{{Af{Ff}}}}{{{d{Df}}}Bj}`{{{d{Df}}}{{d{Db}}}}`{dc{}}000{dFh}0{c{{Fj{e}}}{}{}}000{{}{{Fj{c}}}{}}000{d{{Fj{FlFn}}}}0{dG`}000`{{DfDj}Df}{{Df{Al{Db}}}Df}`````````{{dCn}D`}{{{d{Gb}}}{{Al{Cd}}}}0{{{d{Gd}}}{{d{Ad}}}}{d{{d{c}}}{}}{{{d{Dh}}}{{d{Dhc}}}{}}{{{d{Ad}}{d{Ad}}{d{Ad}}}{{Af{Ad}}}}{{{d{Ad}}{d{Ad}}}{{Af{Ad}}}}0{{{d{Gf}}}Gf}{{d{d{Dhc}}}D`{}}{dD`}{{{d{{l{C`}}}}}{{Af{C`}}}}{{{d{Ad}}Cd}{{Af{Bn}}}}{{}Gf}{Cd{{d{c}}}{}}{Cd{{d{Dhc}}}{}}{CdD`}{{{d{Gh}}{d{Bh}}}{{Af{D`}}}}0{{{d{Gf}}{d{Gf}}}Bj}{{d{d{c}}}Bj{}}00{{{d{Gf}}{d{DhEf}}}{{Fj{D`Gj}}}}{cc{}}{{{d{Gf}}{d{Dhc}}}D`En}{{}Cd}{{}c{}}{{{d{Ad}}}Bj}{{{d{Gh}}Cf}{{Af{Bj}}}}0{{{d{{l{C`}}}}}{{Af{{Al{C`}}}}}}00{{{d{Ad}}}{{Af{Ad}}}}0{{CbDb}{{Af{Ad}}}}2{dc{}}{c{{Fj{e}}}{}{}}{{}{{Fj{c}}}{}}{dG`}{{{d{Gh}}BjBjDbBj}{{Af{Cl}}}}0","D":"El","p":[[10,"AsBinary",4,293],[1,"reference"],[8,"BinaryChunked",294],[10,"BinaryNameSpaceImpl",4,295],[1,"u8"],[1,"slice"],[8,"BooleanChunked",294],[10,"ChunkedSet",4,296],[8,"IdxSize",297],[5,"Series",298],[8,"PolarsResult",299],[10,"Copy",300],[17,"Item"],[6,"Option",301],[10,"IntoIterator",302],[8,"UInt32Chunked",294],[10,"AsList",25],[8,"ListChunked",294],[10,"ListNameSpaceImpl",25,303],[1,"str"],[1,"bool"],[8,"StringChunked",294],[8,"IdxCa",304],[6,"Column",305],[1,"i64"],[1,"usize"],[5,"SortOptions",306],[10,"AsString",74],[10,"IntoDf",76],[5,"DataFrame",307],[5,"Private",308],[1,"unit"],[5,"PlSmallStr",309],[10,"JoinDispatch",80,310],[5,"JoinArgs",80,311],[0,"mut"],[6,"JoinCoalesce",80,311],[6,"JoinType",80,311],[6,"JoinValidation",80,311],[10,"CrossJoin",80,312],[1,"tuple"],[8,"ChunkJoinOptIds",80,311],[5,"Formatter",313],[8,"Result",313],[10,"DataFrameJoinOps",80],[10,"Into",314],[10,"Hasher",315],[10,"SeriesJoin",80,316],[8,"InnerJoinIds",80,311],[5,"PrimitiveArray",317],[8,"LeftJoinIds",80,311],[5,"String",318],[6,"Result",319],[5,"CompactString",320],[6,"ToCompactStringError",320],[5,"TypeId",321],[10,"ArgAgg",241,322],[10,"SeriesSealed",241,323],[6,"SearchSortedSide",241,324],[10,"SeriesMethods",241,325],[5,"Error",313]],"r":[[4,293],[5,295],[6,296],[26,303],[80,311],[81,311],[84,312],[88,311],[89,311],[90,311],[91,310],[93,311],[94,311],[97,311],[103,316],[108,326],[111,326],[114,326],[144,310],[239,80],[240,76],[242,322],[245,324],[246,325],[247,323],[254,327],[255,327],[256,327],[260,328],[261,329],[277,329],[280,328],[281,328],[282,328],[283,330],[284,331],[285,332],[286,328]],"b":[[175,"impl-Debug-for-JoinType"],[176,"impl-Display-for-JoinType"],[177,"impl-Debug-for-JoinValidation"],[178,"impl-Display-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPcAEgAAAAgACwABAA8AAgAXAA8AKwA3AGcABgBwABkAjAAnALUAAAC6AAwAzAACANAAAADSACAA9AAFAPwAAgACAQ8AEwEBABkBCgA="}],["polars_sql",{"t":"FNNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNNNNNNNONONNNNNNOMNNNNNNNNNNNNNNNONNONNNMNNNNNNNNNNMNNNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","","borrow","","","borrow_mut","","","cast_to_supertypes","check_lengths","","clone","","clone_into","","clone_to_uninit","","collect_groups","contains","","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","","flags","fmt","","fmt_str","from","","","get_udf","","hash","init","","","into","","","is_elementwise","is_groups_sensitive","register","","to_owned","","try_from","","","try_into","","","type_id","","","vzip","","","all_functions","all_keywords"],"q":[[0,"polars_sql"],[32,"polars_sql::function_registry"],[106,"polars_sql::keywords"],[108,"dyn_clone::sealed"],[109,"polars_sql::context"],[110,"polars_lazy::frame"],[111,"polars_error"],[112,"alloc::string"],[113,"polars_utils::aliases"],[114,"alloc::vec"],[115,"alloc::sync"],[116,"polars_plan::dsl::expr"],[117,"core::convert"],[118,"core::result"],[119,"core::any"],[120,"polars_plan::plans::options"],[121,"polars_plan::plans"],[122,"core::fmt"],[123,"polars_plan::dsl::udf"],[124,"core::option"],[125,"core::hash"],[126,"polars_sql::sql_expr"]],"i":"`j00000000000`0000`00000`0000000Bj`0```Bf1Bl120121111212121Aj1212312312322222232123012123123220123123123123123``","f":"`{{bd}f}{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{j}}}j}{{b{b{hc}}}f{}}{bf}{{}j}{l{{b{c}}}{}}{l{{b{hc}}}{}}{lf}{{{b{hj}}{b{n}}}{{Ab{A`}}}}{cc{}}`{{{b{j}}}{{Af{AdA`}}}}{{{b{j}}}{{Ah{Ad}}}}{{}l}{{}c{}}`9{{{Af{AdA`}}}j}{{{b{hj}}{b{n}}A`}f}{{{b{j}}}{{b{{Al{Aj}}}}}}{{{b{hj}}}{{b{hAj}}}}{c{{Ab{An}}}{{B`{n}}}}{bc{}}{c{{Bb{e}}}{}{}}{{}{{Bb{c}}}{}}{bBd}{{{b{hj}}{b{n}}}f}:{{j{Al{Aj}}}j}``````{{bd}f}0{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00`{{{b{Bf}}}Bh}`{{{b{Bf}}}Bf}{{{b{Bj}}}Bj}{{b{b{hc}}}f{}}0{bf}0`{{{b{Aj}}{b{n}}}Bh}{{{b{Bl}}{b{n}}}Bh}{{}Bf}{l{{b{c}}}{}}00{l{{b{hc}}}{}}00{lf}00{{{b{Bf}}{b{Bf}}}Bh}{{b{b{c}}}Bh{}}00`{{{b{Bf}}{b{hBn}}}{{Bb{fC`}}}}{{{b{Bj}}{b{hBn}}}{{Bb{fC`}}}}`{cc{}}00{{{b{Aj}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bl}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bf}}{b{hc}}}fCf}{{}l}00{{}c{}}00{{{b{Bf}}}Bh}0{{{b{hAj}}{b{n}}Cb}{{Ab{f}}}}{{{b{hBl}}{b{n}}Cb}{{Ab{f}}}}{bc{}}0{c{{Bb{e}}}{}{}}00{{}{{Bb{c}}}{}}00{bBd}00777{{}{{Ah{{b{n}}}}}}0","D":"Dd","p":[[1,"reference"],[5,"Private",108],[1,"unit"],[0,"mut"],[5,"SQLContext",0,109],[1,"usize"],[1,"str"],[5,"LazyFrame",110],[8,"PolarsResult",111],[5,"String",112],[8,"PlHashMap",113],[5,"Vec",114],[10,"FunctionRegistry",32],[5,"Arc",115],[6,"Expr",116],[10,"AsRef",117],[6,"Result",118],[5,"TypeId",119],[5,"FunctionOptions",32,120],[1,"bool"],[6,"Context",32,121],[5,"DefaultFunctionRegistry",32],[5,"Formatter",122],[5,"Error",122],[5,"UserDefinedFunction",123],[6,"Option",124],[10,"Hasher",125]],"r":[[0,109],[24,126],[33,121],[36,120]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEoACwACAAkAEQAAABoAAwAfAAAAIgAAACUAAAAnABAAOgASAFEABABZAAAAXAAOAA=="}],["polars_time",{"t":"PGFPPKKKPFCHHOOCMCHMMMECKPPPPPGKNMNNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","","Duration","Friday","Label","Left","","Monday","None","Right","","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","","","","","","add_ms","add_ns","add_us","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","cmp","compare","days","days_only","default","deref","","","","","","","deref_mut","","","","","","","drop","","","","","","","ensure_duration_matches_dtype","ensure_is_constant_duration","eq","","","","equivalent","","","","","","","","","","","","fmt","","","","","","from","","","","","","","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","","","","init","","","","","","","into","","","","","","","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","neg","negative","new","","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","","","","","","to_string","truncate_impl","truncate_ms","","truncate_ns","","truncate_us","","try_from","","","","","","","try_into","","","","","","","try_to_compact_string","type_id","","","","","","","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[22,"polars_time::chunkedarray"],[24,"polars_time::chunkedarray::string"],[57,"polars_time::chunkedarray::string::infer"],[83,"polars_time::prelude"],[288,"polars_time::series"],[309,"polars_utils::pl_str"],[310,"chrono::naive::datetime"],[311,"polars_time::windows::duration"],[312,"polars_time::windows::group_by"],[313,"polars_core::datatypes::time_unit"],[314,"polars_arrow::legacy::time_zone"],[315,"core::option"],[316,"polars_core::chunked_array::logical::datetime"],[317,"polars_error"],[318,"polars_time::round"],[319,"polars_core::datatypes"],[320,"chrono::naive::time"],[321,"polars_core::chunked_array::logical::time"],[322,"polars_time::truncate"],[323,"polars_time::upsample"],[324,"polars_core::frame"],[325,"polars_core::utils"],[326,"dyn_clone::sealed"],[327,"polars_time::chunkedarray::string::patterns"],[328,"core::fmt"],[329,"core::hash"],[330,"core::result"],[331,"core::any"],[332,"core::clone"],[333,"polars_time::windows::bounds"],[334,"polars_time::windows::window"],[335,"core::cmp"],[336,"polars_core::datatypes::dtype"],[337,"polars_core::frame::group_by::proxy"],[338,"alloc::vec"],[339,"alloc::string"],[340,"core::ops::function"],[341,"compact_str"],[342,"polars_core::series"],[343,"polars_time::date_range"]],"i":"h``00```0````Ehf`Ah``B`Bb0```Cb0000``0Bn111111111111111`1111111`Dn``D`000000000`0000Df111211:```EdEf`0`<10<<10`0`000`0Eb;=21<;;;En1<>32=01<>32=1<>32=1<>32=1<>32=<<<<201<>32=01<>32=01<>32=``<>32<<<>>>3332221<<>3201<>32=====``<>3201<>32=01<>32=0<<<<<<<<<<=0=<<<===1<>32=<<<=<=<=01<>32=01<>32=<01<>32=2<<``GdGh00000000000000000","f":"```````````{{bddfhj{A`{{n{l}}}}}{{Ad{Ab}}}}{{{n{d}}}Af}```{{{n{Ah}}{n{Aj}}{A`{{n{l}}}}}{{Ad{Ah}}}}`{{bAlAlfh}{{Ad{An}}}}{{{n{B`}}{A`{{n{l}}}}{n{Aj}}}{{Ad{B`}}}}{{{n{Bb}}c{n{Bd}}f}{{Ad{Bf}}}{{Bh{b}}}}0``````````{{nBj}Bl}{{{n{Bn}}}{{n{Aj}}}}{n{{n{c}}}{}}{{{n{C`}}}{{n{C`c}}}{}}{{{n{Cb}}}Cb}{{n{n{C`c}}}Bl{}}{nBl}{Cd{{n{c}}}{}}{Cd{{n{C`c}}}{}}{CdBl}{{{n{Cb}}{n{Cb}}}Af}{{n{n{c}}}Af{}}00{{{n{Cb}}{n{C`Cf}}}Ch}{cc{}}{{{n{Cb}}{n{C`c}}}BlCj}`{{}Cd}{{}c{}}{{{n{Cb}}{n{Bd}}}Af}{nc{}}{c{{Cl{e}}}{}{}}{{}{{Cl{c}}}{}}{nCn}````{{nBj}Bl}{n{{n{c}}}{}}{{{n{C`}}}{{n{C`c}}}{}}{{{n{{D`{c}}}}}{{D`{c}}}{DbDd}}{{n{n{C`c}}}Bl{}}{nBl}{Cd{{n{c}}}{}}{Cd{{n{C`c}}}{}}{CdBl}{cc{}}{{{n{Bd}}}{{A`{Cb}}}}{{}Cd}{{}c{}}`{{{n{C`{D`{c}}}}{n{Bd}}}A`Dd}{{{n{C`Df}}{n{{Dj{Dh}}}}{A`{j}}}{{A`{c}}}{}}`{nc{}}{c{{Cl{e}}}{}{}}{{c{A`{j}}}{{Ad{{Dn{}{{Dl{e}}}}}}}{}{}}{{}{{Cl{c}}}{}}{nCn}````````````````````````{{nBj}Bl}00000{{{n{f}}E`{A`{{n{l}}}}}{{Ad{E`}}}}00{n{{n{c}}}{}}000000{{{n{C`}}}{{n{C`c}}}{}}000000{{{n{Eb}}}Eb}{{{n{f}}}f}{{{n{h}}}h}{{{n{Ed}}}Ed}{{{n{Ef}}}Ef}{{{n{Eh}}}Eh}{{n{n{C`c}}}Bl{}}00000{nBl}00000{{{n{f}}{n{f}}}Ej}{{n{n{c}}}Ej{}}{{{n{f}}}E`}{{{n{f}}}Af}{{}Ef}{Cd{{n{c}}}{}}000000{Cd{{n{C`c}}}{}}000000{CdBl}000000{{f{n{El}}{n{Bd}}}{{Ad{Bl}}}}{{f{A`{{n{Bd}}}}{n{Bd}}}{{Ad{Bl}}}}{{{n{f}}{n{f}}}Af}{{{n{h}}{n{h}}}Af}{{{n{Ed}}{n{Ed}}}Af}{{{n{Ef}}{n{Ef}}}Af}{{n{n{c}}}Af{}}00000000000{{{n{Eb}}{n{C`Cf}}}Ch}{{{n{f}}{n{C`Cf}}}Ch}0{{{n{h}}{n{C`Cf}}}Ch}{{{n{Ed}}{n{C`Cf}}}Ch}{{{n{Ef}}{n{C`Cf}}}Ch}{cc{}}000000{{{n{Eh}}E`h{A`{{n{l}}}}}{{Ad{Eb}}}}00{{{n{Eh}}Ebhj{A`{{n{l}}}}Ef}{{Ad{En}}}}{{ff{n{{Dj{E`}}}}hj{A`{l}}}{{Ad{F`}}}}{{Eh{n{{Dj{E`}}}}hj{n{{A`{Fb}}}}AfAfEf}{{Ff{F`{Fd{E`}}{Fd{E`}}}}}}{{{n{f}}{n{C`c}}}BlCj}{{{n{h}}{n{C`c}}}BlCj}{{{n{Ed}}{n{C`c}}}BlCj}{{{n{Ef}}{n{C`c}}}BlCj}{{}Cd}000000{{}c{}}0000000{{{n{f}}{A`{{n{Bd}}}}}Af}{{{n{f}}}Af}0{{{n{f}}}E`}1{{fE`}f}1{fc{}}3{E`f}{{fff}Eh}{{{n{C`En}}}{{A`{c}}}{}}`{{{n{Bd}}}f}`{{{n{f}}{n{f}}}{{A`{Ej}}}}{{{n{Eh}}E`{A`{{n{l}}}}}{{Ad{E`}}}}00{nc{}}00000{nFh}{{{n{f}}E`{A`{{n{l}}}}ceg}{{Ad{E`}}}{{Fl{E`}{{Fj{E`}}}}}{{Fl{E`}{{Fj{d}}}}}{{Fl{d}{{Fj{E`}}}}}}{{{n{f}}E`{A`{{n{l}}}}}{{Ad{E`}}}}40404{c{{Cl{e}}}{}{}}000000{{}{{Cl{c}}}{}}000000{n{{Cl{FnG`}}}}{nCn}000000{{{n{Ef}}}{{A`{Gb}}}}{{{n{f}}}E`}{{{n{f}}}Af}``{{{n{Gd}}}{{n{Gf}}}}{{{n{Gh}}}{{Ad{Gj}}}}{{{n{Gh}}}{{Ad{Gl}}}}0{{{n{Gh}}}{{Ad{Gn}}}}22112{{{n{Gh}}}{{Ad{H`}}}}322{{{n{Gh}}{n{Bd}}}{{Ad{Gf}}}}0334","D":"Gd","p":[[5,"PlSmallStr",309],[5,"NaiveDateTime",310],[5,"Duration",83,311],[6,"ClosedWindow",83,312],[6,"TimeUnit",313],[6,"Tz",314],[1,"reference"],[6,"Option",315],[8,"DatetimeChunked",316],[8,"PolarsResult",317],[1,"bool"],[10,"PolarsRound",0,318],[8,"StringChunked",319],[5,"NaiveTime",320],[8,"TimeChunked",321],[10,"PolarsTruncate",0,322],[10,"PolarsUpsample",0,323],[1,"str"],[5,"DataFrame",324],[10,"IntoVec",325],[5,"Private",326],[1,"unit"],[10,"AsString",24],[0,"mut"],[6,"Pattern",24,327],[1,"usize"],[5,"Formatter",328],[8,"Result",328],[10,"Hasher",329],[6,"Result",330],[5,"TypeId",331],[5,"DatetimeInfer",57],[10,"Clone",332],[10,"PolarsNumericType",319],[10,"StrpTimeParser",57],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",57],[1,"i64"],[5,"Bounds",83,333],[6,"Label",83,312],[6,"StartBy",83,312],[5,"Window",83,334],[6,"Ordering",335],[6,"DataType",336],[5,"BoundsIter",83,334],[8,"GroupsSlice",337],[8,"TimeZone",336],[5,"Vec",338],[1,"tuple"],[5,"String",339],[17,"Output"],[10,"Fn",340],[5,"CompactString",341],[6,"ToCompactStringError",341],[1,"u32"],[10,"AsSeries",288],[5,"Series",342],[10,"TemporalMethods",288],[8,"Int32Chunked",319],[8,"Int8Chunked",319],[8,"BooleanChunked",319],[8,"Int16Chunked",319]],"r":[[1,312],[2,311],[5,318],[6,322],[7,323],[9,334],[11,343],[12,343],[18,343],[22,24],[30,327],[84,333],[85,334],[86,312],[89,311],[91,312],[99,312],[101,288],[105,334],[174,311],[175,311],[209,312],[210,312]],"b":[[193,"impl-Debug-for-Duration"],[194,"impl-Display-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPsAFwAAAAkADQAFABQAAAAXABgAMQACADUAEQBIAAEASwATAGAACQBrAFsAzgAAANAAAQDUAAoA5gABAOoAAgDuAAAA8QACAPUAAQD6AAgABAEAAAYBAAAIARsAKAEAAA=="}],["polars_utils",{"t":"EECCCCCCCCCCCCCCQQQQCCCCCCCQCCCQCCCCCCCCCCQQCCRKMMRKIIIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNKMHHNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHHHFNNNNNNNNNNNNNNHHFNNNNNNNNNNNNNNNNNNNNNNKNNNNNKMHHHHFKNNNNNNNMNNNNNNNNNHNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFIKRKIFKNNNNHNNNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHHHKNNCNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHKNNNNMMTFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTRKMMHHFNNNNNNNNNNNNNNNNNNTTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNKKKKKMMMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKMKKKRKKMMMHMMMM","n":["IdxSize","NullableIdxSize","abs_diff","aliases","arena","atomic","binary_search","cache","cell","clmul","contention_pool","cpuid","fixedringbuffer","float","floor_divmod","fmt","format_list","format_list_container","format_pl_smallstr","format_tuple","functions","hashing","idx_vec","index","io","itertools","macros","matches_any_order","mem","min_max","mmap","no_call_const","nulls","ord","partitioned","pl_str","priority","slice","sort","sync","sys","total_ord","unitvec","unreachable_unchecked_release","unwrap","vec","Abs","AbsDiff","abs_diff","max_abs_diff","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","PlRandomState","PlRandomStateQuality","new","","","","","with_capacity","","","","","Arena","Node","add","borrow","","borrow_mut","","clear","clone","","clone_into","","clone_to_uninit","","cmp","compare","default","","deref","","deref_mut","","deserialize","","drop","","duplicate","eq","equivalent","","","fmt","","from","","get","get_many_mut","get_mut","get_node","get_unchecked","hash","init","","into","","is_empty","len","new","partial_cmp","pop","replace","replace_with","serialize","","swap","take","to_owned","","try_from","","try_into","","try_replace_with","type_id","","version","with_capacity","SyncCounter","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","from","init","into","manual_drop","new","to_owned","try_from","try_into","type_id","ExponentialSearch","exponential_search_by","find_first_ge_index","find_first_gt_index","partition_point_exponential","FastCachedFunc","FastFixedCache","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","","eval","from","","get","get_mut","get_or_insert_with","init","","insert","into","","new","","to_owned","try_from","","try_get_or_insert_with","try_into","","type_id","","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","","","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","prefix_xorsum","LowContentionPool","borrow","borrow_mut","deref","deref_mut","drop","from","get","init","into","new","set","try_from","try_into","type_id","has_fast_bmi2","is_avx512_enabled","FixedRingBuffer","as_slices","borrow","borrow_mut","capacity","deref","deref_mut","drop","","fill_repeat","from","init","into","is_empty","is_full","len","new","pop_front","push","remaining_capacity","try_from","try_into","type_id","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","FloorDivMod","wrapping_floor_div_mod","arc_map","flatten","range_portion","try_arc_map","BytesHash","DirtyHash","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","dirty_hash","","drop","eq","equivalent","","","fmt","from","hash","hash_to_partition","init","into","is_null","new","peel_total_ord","to_owned","to_total_ord","tot_eq","tot_hash","try_from","try_into","type_id","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clear","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","drop","","eq","equivalent","","","extend","fmt","from","","","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","Bounded","ChunkId","IdxSize","Indexable","Item","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","","borrow_mut","","check_bounds","clone","","clone_into","","clone_to_uninit","","deref","","deref_mut","","drop","","eq","equivalent","","","extract","fmt","","from","","","get","get_unchecked","idx","init","","inner","inner_mut","into","","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","","null_count","store","to_idx","to_opt","to_owned","","try_from","","try_into","","type_id","","_limit_path_len_io_err","create_file","open_file","Itertools","all_equal","collect_vec","enumerate_idx","","enumerate_u32","eq_by_","partial_cmp_by_","try_collect","try_collect_vec","EnumerateIdx","borrow","borrow_mut","clone","clone_into","clone_to_uninit","count","deref","deref_mut","drop","fmt","from","init","into","into_iter","len","new","next","next_back","nth","nth_back","size_hint","to_owned","try_from","try_into","type_id","madvise_populate_read","madvise_sequential","madvise_willneed","prefetch_l2","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","EMPTY","MMapSemaphore","MemReader","MemSlice","Mmap","advise","advise_range","as_ptr","as_ref","","","borrow","","","","borrow_mut","","","","clone","","clone_into","","clone_to_uninit","","default","deref","","","","","","deref_mut","","","","drop","","","","","ensure_not_mapped","fmt","","","","from","","","","","from_bytes","","from_file","from_mmap","from_reader","from_slice","from_static","from_vec","","init","","","","into","","","","lock","make_mut","map","new","new_from_file","new_from_file_with_options","position","prefetch","read","read_slice","remaining_len","remap","seek","slice","to_owned","","to_vec","total_len","try_from","","","","try_into","","","","type_id","","","","unlock","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","EMPTY","EMPTY_REF","PlSmallStr","as_ref","","","","as_str","borrow","","borrow_mut","clone","clone_into","clone_to_uninit","cmp","compare","default","deref","","deref_mut","deserialize","drop","eq","equivalent","","","fmt","","from","","","","","from_iter","","","","","","","","from_static","from_str","from_string","hash","init","into","into_string","partial_cmp","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","write_char","write_fmt","write_str","Priority","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","compare","deref","deref_mut","drop","eq","equivalent","","","fmt","from","init","into","partial_cmp","to_owned","try_from","try_into","type_id","Extrema","GetSaferUnchecked","Slice2Uninit","SliceAble","SortedSlice","as_uninit","get_unchecked_release","get_unchecked_release_mut","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deref_unchecked","drop","eq","equivalent","","","fmt","from","","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","clone_to_uninit","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","","","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","UnwrapUncheckedRelease","unwrap_unchecked_release","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","inplace_zip_filtermap","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[46,"polars_utils::abs_diff"],[50,"polars_utils::aliases"],[68,"polars_utils::arena"],[135,"polars_utils::atomic"],[156,"polars_utils::binary_search"],[161,"polars_utils::cache"],[198,"polars_utils::cell"],[218,"polars_utils::clmul"],[222,"polars_utils::contention_pool"],[237,"polars_utils::cpuid"],[239,"polars_utils::fixedringbuffer"],[262,"polars_utils::float"],[268,"polars_utils::floor_divmod"],[270,"polars_utils::functions"],[274,"polars_utils::hashing"],[307,"polars_utils::idx_vec"],[352,"polars_utils::index"],[416,"polars_utils::io"],[419,"polars_utils::itertools"],[429,"polars_utils::itertools::enumerate_idx"],[455,"polars_utils::mem"],[460,"polars_utils::min_max"],[467,"polars_utils::mmap"],[566,"polars_utils::nulls"],[571,"polars_utils::ord"],[573,"polars_utils::partitioned"],[592,"polars_utils::pl_str"],[651,"polars_utils::priority"],[675,"polars_utils::slice"],[689,"polars_utils::sort"],[691,"polars_utils::sync"],[719,"polars_utils::sys"],[733,"polars_utils::total_ord"],[784,"polars_utils::unwrap"],[786,"polars_utils::vec"],[800,"num_traits"],[801,"core::cmp"],[802,"core::marker"],[803,"core::fmt"],[804,"core::clone"],[805,"core::result"],[806,"serde::de"],[807,"core::option"],[808,"core::hash"],[809,"core::default"],[810,"core::ops::function"],[811,"serde::ser"],[812,"core::any"],[813,"core::borrow"],[814,"alloc::sync"],[815,"alloc::vec"],[816,"core::convert"],[817,"core::ops::range"],[818,"core::iter::traits::collect"],[819,"core::slice::iter"],[820,"polars_error"],[821,"std::path"],[822,"std::io::error"],[823,"std::fs"],[824,"core::iter::traits::iterator"],[825,"core::ops::arith"],[826,"num_traits::cast"],[827,"num_traits::identities"],[828,"core::iter::traits::exact_size"],[829,"core::iter::traits::double_ended"],[830,"memmap2"],[831,"memmap2::advice"],[832,"polars_utils::mmap::private"],[833,"bytes::bytes"],[834,"std::io"],[835,"hashbrown::map"],[836,"std::ffi::os_str"],[837,"alloc::string"],[838,"compact_str"],[839,"alloc::borrow"],[840,"alloc::boxed"],[841,"core::mem::maybe_uninit"],[842,"core::slice::index"],[843,"rayon_core::thread_pool"]],"i":"``````````````````````````````````````````````d`00ABf```````0AdAfABhABj43210``AjAn101101010100010101010110000010111111001011110111011101010110111`Dh0000000000000000000`Dj``0``EfE`100000101010110000100101001001010`El000000000000000000`````Fb0000000000000```Fd000000000000000000000`Fh0000`Fj``````Gd000000Gf111111111`1111111111111``Gj000000000000000000000000000000000000000000````Hn````HjHl10`1010101010101111010110221101010Ib122021Id2If443434343````J`0`000000`Jb000000000000000000000000``````Kd00000Kl````Kf0Kj12012Kn123013030303223301230123011`230123001303300330230123012220110300020330302301230123012I`0`00```Md00000000000000000Ml0`00000000000000000000000000000000000000000000000000000000`O`0000000000000000000000`````ObOf0Oj`Ol0On0```A@d00000000000000000000000000``A@f00000000000AAf````0`A@l0``000000000000000000000000101A@`A@n11AA`02213333`AAh```AAl``00AAn`AB`ABb1ABd","f":"````````````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}````````00000{Abc{}}{Ab{{Ad{ce}}}{}{}}{Ab{{Af{c}}}{}}22``{{{Al{Ah{Aj{c}}}}c}An{}}{Al{{Al{c}}}{}}0{{{Al{Ah}}}{{Al{Ahc}}}{}}0{{{Al{Ah{Aj{c}}}}}B`{}}{{{Al{An}}}An}{{{Al{{Aj{c}}}}}{{Aj{c}}}Bb}{{Al{Al{Ahc}}}B`{}}0{AlB`}0{{{Al{An}}{Al{An}}}Bd}{{Al{Al{c}}}Bd{}}{{}An}{{}{{Aj{c}}}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{c{{Bf{An}}}Bh}{c{{Bf{{Aj{e}}}}}BhBj}{AbB`}0{{{Al{Ah{Aj{c}}}}An}AnBb}{{{Al{An}}{Al{An}}}Bl}{{Al{Al{c}}}Bl{}}00{{{Al{An}}{Al{AhBn}}}C`}{{{Al{{Aj{c}}}}{Al{AhBn}}}C`l}{cc{}}0{{{Al{{Aj{c}}}}An}{{Al{c}}}{}}{{{Al{Ah{Aj{c}}}}{Cb{An}}}{{Cb{{Al{Ahc}}}}}{}}{{{Al{Ah{Aj{c}}}}An}{{Al{Ahc}}}{}}{{{Al{{Aj{c}}}}{Al{c}}}{{Cd{An}}}{}}3{{{Al{An}}{Al{Ahc}}}B`Cf}{{}Ab}0{{}c{}}0{{{Al{{Aj{c}}}}}Bl{}}{{{Al{{Aj{c}}}}}Ab{}}{{}{{Aj{c}}}{}}{{{Al{An}}{Al{An}}}{{Cd{Bd}}}}{{{Al{Ah{Aj{c}}}}}{{Cd{c}}}{}}{{{Al{Ah{Aj{c}}}}Anc}c{}}{{{Al{Ah{Aj{c}}}}Ane}B`Ch{{Cl{c}{{Cj{c}}}}}}{{{Al{An}}c}BfCn}{{{Al{{Aj{c}}}}e}BfD`Cn}{{{Al{Ah{Aj{c}}}}AnAn}B`{}}{{{Al{Ah{Aj{c}}}}An}cCh}{Alc{}}0{c{{Bf{e}}}{}{}}0{{}{{Bf{c}}}{}}0{{{Al{Ah{Aj{c}}}}Ane}{{Bf{B``}}}Ch{{Db{c}{{Cj{{Bf{c`}}}}}}}}{AlDd}0{{{Al{{Aj{c}}}}}Df{}}{Ab{{Aj{c}}}{}}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{Dh}}}Dh}{{Al{Al{Ahc}}}B`{}}{AlB`}{{}Dh}{{{Al{Dh}}}{{Al{c}}}{}}{Ab{{Al{c}}}{}}{{{Al{AhDh}}}{{Al{Ahc}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{}c{}}{{{Al{AhDh}}}B`}{AbDh}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}`{{{Al{Dj}}e}{{Bf{AbAb}}}{}{{Db{{Al{c}}}{{Cj{Bd}}}}}}{{{Al{{Dl{c}}}}c}AbDn}0{{{Al{Dj}}e}Ab{}{{Db{{Al{c}}}{{Cj{Bl}}}}}}``{Al{{Al{c}}}{}}0{{{Al{Ah}}}{{Al{Ahc}}}{}}0{{{Al{{E`{ce}}}}}{{E`{ce}}}BbBb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{}{{E`{ce}}}{EbEd}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Ef{ceg}}}}cBl}e{EbEdBb}j{{Db{c}{{Cj{e}}}}}}{cc{}}0{{{Al{{E`{eg}}}}{Al{c}}}{{Cd{{Al{g}}}}}{EbEdEh}{{Ej{c}}EbEd}{}}{{{Al{Ah{E`{eg}}}}{Al{c}}}{{Cd{{Al{Ahg}}}}}{EbEdEh}{{Ej{c}}EbEd}{}}{{{Al{Ah{E`{eg}}}}{Al{c}}i}{{Al{Ahg}}}{}{{Ej{c}}EbEd}{}{{Cl{{Al{e}}}{{Cj{g}}}}}}{{}Ab}0{{{Al{Ah{E`{ce}}}}ce}{{Al{Ahe}}}{EbEd}{}}{{}c{}}0{{gAb}{{Ef{ceg}}}{EbEdBb}j{{Db{c}{{Cj{e}}}}}}{Ab{{E`{ce}}}{EbEd}{}}{Alc{}}{c{{Bf{e}}}{}{}}0{{{Al{Ah{E`{eg}}}}{Al{c}}k}{{Bf{{Al{Ahg}}i}}}{}{{Ej{c}}EbEd}{}{}{{Cl{{Al{e}}}{{Cj{{Bf{gi}}}}}}}}{{}{{Bf{c}}}{}}0{AlDd}0`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{}{{El{c}}}Ch}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{Enc{}}{c{{El{c}}}{}}{cc{}}{{{Al{{El{c}}}}}{}Eh}{{{Al{Ah{El{c}}}}}{{Al{Ahc}}}Eh}{{}Ab}{{}c{}}{{{El{c}}}c{}}6{{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{{F`F`}F`}0{F`F`}0`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{{Al{{Fb{c}}}}}cCh}?>{Ab{{Fb{c}}}Ch}{{{Al{{Fb{c}}}}c}B`Ch}=<;{{}Bl}0`{{{Al{{Fd{c}}}}}{{Ff{{Al{{Dl{c}}}}{Al{{Dl{c}}}}}}}{}}:9{{{Al{{Fd{c}}}}}Ab{}}987{{{Al{Ah{Fd{c}}}}}B`{}}{{{Al{Ah{Fd{c}}}}cAb}Abj}8{{}Ab}{{}c{}}{{{Al{{Fd{c}}}}}Bl{}}05{Ab{{Fd{c}}}{}}{{{Al{Ah{Fd{c}}}}}{{Cd{c}}}{}}{{{Al{Ah{Fd{c}}}}c}{{Cd{B`}}}{}}8{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}`=={{{Al{Fh}}}Bl}>0`{{FjFj}{{Ff{FjFj}}}}{{{Fl{c}}e}{{Fl{c}}}Bb{{Db{c}{{Cj{c}}}}}}{{{Al{{Dl{e}}}}{Cd{Ab}}}{{Fn{c}}}Bb{{G`{{Dl{c}}}}}}{{AbAb{Gb{Ab}}}{{Gb{Ab}}}}{{{Fl{c}}g}{{Bf{{Fl{c}}e}}}Bb{}{{Db{c}{{Cj{{Bf{ce}}}}}}}}``{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{Gd}}}Gd}{{Al{Al{Ahc}}}B`{}}{AlB`}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Gf}}}F`}{{{Al{Gd}}}F`}{AbB`}{{{Al{Gd}}{Al{Gd}}}Bl}{{Al{Al{c}}}Bl{}}00{{{Al{Gd}}{Al{AhBn}}}C`}{cc{}}{{{Al{Gd}}{Al{Ahc}}}B`Cf}{{F`Ab}Ab}{{}Ab}{{}c{}}{{{Al{Gd}}}Bl}{{{Cd{{Al{{Dl{Gh}}}}}}F`}Gd}{ce{}{}}{Alc{}}{{{Al{Gd}}}c{}}<8{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{Gdc{}}``{{{Al{Ah{Gj{c}}}}}{{Al{Ah{Dl{c}}}}}{}}0{{{Al{{Gj{c}}}}}{{Al{{Dl{c}}}}}{}}0{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{Gj{c}}}}}Ab{}}{{{Al{Ah{Gj{c}}}}}B`{}}{{{Al{{Gj{c}}}}}{{Gj{c}}}{}}{{Al{Al{Ahc}}}B`{}}{AlB`}{{}{{Gj{c}}}{}}{Ab{{Al{c}}}{}}{{{Al{{Gj{c}}}}}{{Al{e}}}{}{}}{Ab{{Al{Ahc}}}{}}7{AbB`}{{{Al{{Gj{c}}}}{Al{{Gj{c}}}}}BlGl}{{Al{Al{c}}}Bl{}}00{{{Al{Ah{Gj{c}}}}e}B`{}{{H`{}{{Gn{c}}}}}}{{{Al{{Gj{c}}}}{Al{AhBn}}}C`l}{{{Fn{c}}}{{Gj{c}}}{}}{cc{}}{{{Al{{Dl{c}}}}}{{Gj{c}}}Bb}{e{{Gj{c}}}{}{{H`{}{{Gn{c}}}}}}{{}Ab}{{}c{}}{{{Al{{Gj{c}}}}}Bl{}}{{{Al{{Gj{c}}}}}{{Hb{c}}}{}}{{{Al{Ah{Gj{c}}}}}{{Hd{c}}}{}}{{{Al{{Gj{c}}}}}Ab{}}{{}{{Gj{c}}}{}}{{{Al{Ah{Gj{c}}}}}{{Cd{c}}}{}}{{{Al{Ah{Gj{c}}}}c}B`{}}0{{{Al{Ah{Gj{c}}}}Ab}B`{}}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{Ab{{Gj{c}}}{}}`````````{Al{{Al{c}}}{}}0{{{Al{Ah}}}{{Al{Ahc}}}{}}0{{{Al{{Dl{Hf}}}}Hf}{{Hh{B`}}}}{{{Al{Hj}}}Hj}{{{Al{Hl}}}Hl}{{Al{Al{Ahc}}}B`{}}0{AlB`}0{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Hj}}{Al{Hj}}}Bl}{{Al{Al{c}}}Bl{}}00{Hl{{Ff{HfHf}}}}{{{Al{Hj}}{Al{AhBn}}}C`}{{{Al{Hl}}{Al{AhBn}}}C`}{cc{}}{HfHj}1{{{Al{{Hn{}{{Gn{c}}}}}}Ab}cI`}0{{{Al{Hj}}}Hf}{{}Ab}0`{{{Al{AhHl}}}{{Al{AhF`}}}}{{}c{}}0{{{Al{Ib}}}Bl}{{{Al{Hl}}}Bl}{{{Al{Hj}}}Bl}{{{Al{c}}}Bl{}}{{{Al{Ib}}}Ab}{{}Hj}{{}Hl}{{{Al{Id}}}Ab}{{HfHf}Hl}{{IfF`}Hf}{{{Al{Hj}}}{{Cd{Hf}}}}{Alc{}}0{c{{Bf{e}}}{}{}}0{{}{{Bf{c}}}{}}0{AlDd}0{{{Al{Ih}}Ij}Il}{{{Al{Ih}}}{{Hh{In}}}}0`{J`Bl}{J`{{Fn{c}}}{}}`{J`{{Jb{J`Hf}}}}{J`{{Jb{J`Df}}}}{{J`cg}BlH`{}{{Db{e}{{Cj{Bl}}}}}}{{J`cg}{{Cd{Bd}}}H`{}{{Db{e}{{Cj{{Cd{Bd}}}}}}}}{J`{{Bf{ce}}}{}{}}{J`{{Bf{{Fn{c}}e}}}{}{}}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{Jb{ce}}}}}{{Jb{ce}}}BbBb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Jb{ce}}}AbJd{{Jf{}{{Cj{}}}}JhJjJlj}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{{Jb{ce}}}}{Al{AhBn}}}C`ll}{cc{}}{{}Ab}{{}c{}}0{{{Al{{Jb{ce}}}}}AbJn{{Jf{}{{Cj{}}}}JhJjJlj}}{c{{Jb{ce}}}{}K`}{{{Al{Ah{Jb{ce}}}}}{{Cd{g}}}Jd{{Jf{}{{Cj{}}}}JhJjJlj}{}}{{{Al{Ah{Jb{ce}}}}}{{Cd{{Ff{e}}}}}{JnKb}{{Jf{}{{Cj{}}}}JhJjJlj}}{{{Al{Ah{Jb{ce}}}}Ab}{{Cd{g}}}Jd{{Jf{}{{Cj{}}}}JhJjJlj}{}}{{{Al{Ah{Jb{ce}}}}Ab}{{Cd{{Ff{e}}}}}{JnKb}{{Jf{}{{Cj{}}}}JhJjJlj}}{{{Al{{Jb{ce}}}}}{{Ff{Ab{Cd{Ab}}}}}Jd{{Jf{}{{Cj{}}}}JhJjJlj}}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{{{Al{{Dl{Gh}}}}}B`}000{{{Al{{Dl{c}}}}}{{Al{Ah{Dl{c}}}}}j}`{{KdKd}Kd}000{{{Al{Kd}}{Al{Kd}}}Bl}0`````{{{Al{Kf}}Kh}{{Bf{B`Ij}}}}{{{Al{Kf}}KhAbAb}{{Bf{B`Ij}}}}{{{Al{Kj}}}Gh}{{{Al{Kf}}}{{Al{{Dl{Gh}}}}}}{{{Al{Kl}}}{{Al{{Dl{Gh}}}}}}{{{Al{Kj}}}{{Al{{Dl{Gh}}}}}}{Al{{Al{c}}}{}}000{{{Al{Ah}}}{{Al{Ahc}}}{}}000{{{Al{Kl}}}Kl}{{{Al{Kn}}}Kn}{{Al{Al{Ahc}}}B`{}}0{AlB`}0{{}Kl}{Ab{{Al{c}}}{}}:0{{{Al{Kl}}}{{Al{c}}}{}}11{Ab{{Al{Ahc}}}{}}000{AbB`}000{{{Al{AhKj}}}B`}{{{Al{In}}}{{Hh{B`}}}}{{{Al{Kf}}{Al{AhBn}}}{{Bf{B`L`}}}}{{{Al{Kl}}{Al{AhBn}}}C`}{{{Al{Kn}}{Al{AhBn}}}C`}{{{Al{Kj}}{Al{AhBn}}}C`}{cc{}}00{KlKn}1{LbKl}{LbKn}{{{Al{In}}}{{Hh{Kl}}}}{{{Fl{Kj}}}Kl}{c{{Ld{Kn}}}Lf}{{{Al{{Dl{Gh}}}}}Kn}{{{Al{{Dl{Gh}}}}}Kl}{{{Fn{Gh}}}Kl}{{{Fn{Gh}}}Kn}{{}Ab}000{{}c{}}000{{{Al{Kf}}}{{Bf{B`Ij}}}}{Kf{{Bf{LhIj}}}}{c{{Bf{KfIj}}}Lj}>{{{Al{In}}}{{Hh{Kj}}}}{{{Al{In}}Ll}{{Hh{Kj}}}}{{{Al{Kn}}}Ab}{{{Al{Kl}}}B`}{{{Al{AhKn}}{Al{Ah{Dl{Gh}}}}}{{Ld{Ab}}}}{{{Al{AhKn}}Ab}Kl}3{{{Al{AhKf}}AbLn}{{Bf{B`Ij}}}}{{{Al{AhKn}}M`}{{Ld{F`}}}}{{{Al{Kl}}{Gb{Ab}}}Kl}{Alc{}}0{Kl{{Fn{Gh}}}}8{c{{Bf{e}}}{}{}}000{{}{{Bf{c}}}{}}000{AlDd}000{{{Al{Kf}}}{{Bf{B`Ij}}}}```{{{Al{{I`{}{{Mb{c}}}}}}}Bl{}}{{{I`{}{{Mb{c}}}}}c{}}{{{Al{c}}{Al{c}}}Bd{hFh}}0`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{{Al{{Md{ceg}}}}}{{Al{{Dl{{Mf{ceg}}}}}}}{}{}{}}{{{Al{Ah{Md{ceg}}}}}{{Al{Ah{Fn{{Mf{ceg}}}}}}}{}{}{}}{{}c{}}{{{Fn{{Mf{ceg}}}}}{{Md{ceg}}}{}{}{}}{{{Al{{Md{ceg}}}}F`}{{Mh{ceg}}}{}{}{}}{{{Al{{Md{ceg}}}}F`}{{Ff{{Mh{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Md{ceg}}}}F`}{{Ff{{Mj{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Md{ceg}}}}F`}{{Mj{ceg}}}{}{}{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}```{{{Al{Ml}}}{{Al{Ih}}}}{{{Al{Ml}}}{{Al{Mn}}}}{{{Al{Ml}}}{{Al{{Dl{Gh}}}}}}{{{Al{Ml}}}{{Al{N`}}}}0{Al{{Al{c}}}{}}1{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{Ml}}}Ml}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Al{Ml}}{Al{Ml}}}Bd}{{Al{Al{c}}}Bd{}}{{}Ml}{{{Al{Ml}}}{{Al{c}}}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{c{{Bf{Ml}}}Bh}{AbB`}{{{Al{Ml}}{Al{c}}}Bl{{G`{N`}}Eh}}{{Al{Al{c}}}Bl{}}00{{{Al{Ml}}{Al{AhBn}}}C`}0{{{Al{Nb}}}Ml}{cc{}}{NbMl}{{{Al{N`}}}Ml}{NdMl}{cMl{{H`{}{{Gn{Nf}}}}}}{cMl{{H`{}{{Gn{{Nh{N`}}}}}}}}{cMl{{H`{}{{Gn{{Al{Ml}}}}}}}}{cMl{{H`{}{{Gn{{Al{Nf}}}}}}}}{cMl{{H`{}{{Gn{{Al{N`}}}}}}}}{cMl{{H`{}{{Gn{Ml}}}}}}{cMl{{H`{}{{Gn{Nb}}}}}}{cMl{{H`{}{{Gn{{Nj{N`}}}}}}}}99:{{{Al{Ml}}{Al{Ahc}}}B`Cf}{{}Ab}{{}c{}}{MlNb}{{{Al{Ml}}{Al{Ml}}}{{Cd{Bd}}}}{{{Al{Ml}}c}BfCn}{Alc{}}{AlNb}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{Al{{Bf{NdNl}}}}{AlDd}{{{Al{AhMl}}Nf}C`}{{{Al{AhMl}}Nn}C`}{{{Al{AhMl}}{Al{N`}}}C`}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{O`{ce}}}}}{{O`{ce}}}BbBb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Al{{O`{ce}}}}{Al{{O`{ce}}}}}Bd{DnEd}{}}{{Al{Al{c}}}Bd{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{{O`{ce}}}}{Al{{O`{ce}}}}}BlEd{}}{{Al{Al{c}}}Bl{}}00{{{Al{{O`{ce}}}}{Al{AhBn}}}C`ll}{cc{}}{{}Ab}{{}c{}}{{{Al{{O`{ce}}}}{Al{{O`{ce}}}}}{{Cd{Bd}}}{DnEd}{}}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}`````{{{Al{Ob}}}{{Al{{Dl{{Od{c}}}}}}}{}}{{{Al{Of}}e}Al{}{{Oh{{Dl{c}}}}}}{{{Al{AhOf}}e}{{Al{Ah}}}{}{{Oh{{Dl{c}}}}}}{{{Al{Oj}}}Bl}{{{Al{{Dl{Gh}}}}}F`}{{{Al{Ol}}}{{Cd{{Al{c}}}}}{}}0{{{Al{On}}{Gb{Ab}}}On}0{{e{Al{Ah{Fn{Gh}}}}Ab}{{Al{Ah{Dl{g}}}}}{A@`j}{{H`{}{{Gn{c}}}}}{Jhj}}{{{Al{A@b}}{Al{{Dl{{Ff{HfHf}}}}}}{Al{Ah{Fn{Hf}}}}}B`}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{A@d{c}}}}}{{A@d{c}}}{}}{{Al{Al{Ahc}}}B`{}}{AlB`}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{A@d{c}}}}}{{Al{c}}}{}}{AbB`}{{{Al{{A@d{c}}}}{Al{{A@d{c}}}}}BlGl}{{Al{Al{c}}}Bl{}}00{{{Al{{A@d{c}}}}{Al{AhBn}}}C`l}{{}{{A@d{c}}}{}}{cc{}}1{{{Al{{A@d{c}}}}}{}{}}{{}Ab}{{}c{}}{{{Al{{A@d{c}}}}}Bl{}}55{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}``{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{A@f}}}F`}><;876```````54{A@hA@h}{A@jA@j}{{{Al{{A@l{c}}}}}{{A@l{c}}}Bb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Al{{A@l{c}}}}{Al{{A@l{c}}}}}BdA@`}{{Al{Al{c}}}Bd{}}:9{{{Al{{A@l{c}}}}}F`Gf}9{{{Al{{A@l{c}}}}{Al{{A@l{c}}}}}BlA@n}{{Al{Al{c}}}Bl{}}00{cc{}}{{{Al{{A@l{c}}}}{Al{{A@l{c}}}}}BlA@`}0{{{Al{{A@l{c}}}}{Al{Ahe}}}B`AA`Cf}{{}Ab}{{}c{}}{{{Al{{A@l{c}}}}}BlI`}447{{{Al{{A@l{c}}}}{Al{{A@l{c}}}}}{{Cd{Bd}}}A@`}{ce{}{}}{Alc{}}{{{Al{{AAf{}{{AAb{c}}{AAd{e}}}}}}}c{}{}}{{{Al{A@`}}{Al{A@`}}}Bd}{{{Al{A@n}}{Al{A@n}}}Bl}{{{Al{A@`}}{Al{A@`}}}Bl}0{{{Al{AA`}}{Al{Ahc}}}B`Cf}{{{Al{{Dl{AA`}}}}{Al{Ahc}}}B`Cf}223{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{{{A@l{c}}}eI`{}}`{AAhc{}}``````{{{Al{{AAl{}{{AAj{c}}}}}}g}{{Fn{e}}}{}{}{{Db{{Al{c}}}{{Cj{e}}}}}}{{{AAl{}{{AAj{c}}}}g}{{Fn{e}}}{}{}{{Db{c}{{Cj{e}}}}}}{{{Al{AhAAn}}Abc}B`j}{{{Al{Ah{Fn{c}}}}{Al{Ah{Fn{e}}}}g}B`{}{}{{Db{ce}{{Cj{{Cd{{Ff{ce}}}}}}}}}}{AB`{{Ff{AbAb}}}}{{{Al{AhABb}}c}B`{}}{{{Al{AB`}}}{{Ff{AbAb}}}}{{AbA@j}ABd}","D":"Oj","p":[[17,"Abs"],[10,"AbsDiff",46],[10,"Num",800],[10,"PartialOrd",801],[10,"Copy",802],[10,"Debug",803],[10,"Send",802],[10,"Sync",802],[1,"usize"],[8,"PlHashMap",50],[8,"PlHashSet",50],[0,"mut"],[5,"Arena",68],[1,"reference"],[5,"Node",68],[1,"unit"],[10,"Clone",804],[6,"Ordering",801],[6,"Result",805],[10,"Deserializer",806],[10,"Deserialize",806],[1,"bool"],[5,"Formatter",803],[8,"Result",803],[1,"array"],[6,"Option",807],[10,"Hasher",808],[10,"Default",809],[17,"Output"],[10,"FnOnce",810],[10,"Serializer",811],[10,"Serialize",811],[10,"FnMut",810],[5,"TypeId",812],[1,"u32"],[5,"SyncCounter",135],[10,"ExponentialSearch",156],[1,"slice"],[10,"Ord",801],[5,"FastFixedCache",161],[10,"Hash",808],[10,"Eq",801],[5,"FastCachedFunc",161],[10,"Sized",802],[10,"Borrow",813],[5,"SyncUnsafeCell",198],[1,"never"],[1,"u64"],[5,"LowContentionPool",222],[5,"FixedRingBuffer",239],[1,"tuple"],[10,"IsFloat",262],[10,"FloorDivMod",268],[5,"Arc",814],[5,"Vec",815],[10,"AsRef",816],[5,"Range",817],[5,"BytesHash",274],[10,"DirtyHash",274],[1,"u8"],[5,"UnitVec",307],[10,"PartialEq",801],[17,"Item"],[10,"IntoIterator",818],[5,"Iter",819],[5,"IterMut",819],[8,"IdxSize",352],[8,"PolarsResult",820],[5,"NullableIdxSize",352],[5,"ChunkId",352],[10,"Indexable",352],[10,"IsNull",566],[10,"Bounded",352],[10,"NullCount",352],[10,"ToIdx",352],[5,"Path",821],[5,"Error",822],[6,"PolarsError",820],[5,"File",823],[10,"Itertools",419],[5,"EnumerateIdx",429],[10,"Iterator",824],[10,"Add",825],[10,"FromPrimitive",826],[10,"AddAssign",825],[10,"One",827],[10,"ExactSizeIterator",828],[10,"Zero",827],[10,"DoubleEndedIterator",829],[10,"MinMax",460],[5,"Mmap",467,830],[6,"Advice",831],[5,"MMapSemaphore",467],[5,"MemSlice",467,832],[5,"MemReader",467],[5,"Error",803],[5,"Bytes",833],[8,"Result",822],[10,"Read",834],[5,"MmapMut",830],[10,"MmapAsRawDesc",830],[5,"MmapOptions",830],[5,"RemapOptions",830],[6,"SeekFrom",834],[17,"Inner"],[5,"PartitionedHashMap",573],[5,"HashMap",835],[5,"RawEntryBuilder",835],[5,"RawEntryBuilderMut",835],[5,"PlSmallStr",592],[5,"OsStr",836],[1,"str"],[5,"String",837],[5,"CompactString",838],[1,"char"],[6,"Cow",839],[5,"Box",840],[6,"ToCompactStringError",838],[5,"Arguments",803],[5,"Priority",651],[10,"Slice2Uninit",675],[20,"MaybeUninit",841],[10,"GetSaferUnchecked",675],[10,"SliceIndex",842],[10,"SortedSlice",675],[10,"Extrema",675],[10,"SliceAble",675],[10,"TotalOrd",733],[5,"ThreadPool",843],[5,"SyncPtr",691],[5,"MemInfo",719],[1,"f32"],[1,"f64"],[5,"TotalOrdWrap",733],[10,"TotalEq",733],[10,"TotalHash",733],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",733],[10,"UnwrapUncheckedRelease",784],[17,"ItemIn"],[10,"ConvertVec",786],[10,"ResizeFaster",786],[10,"IntoRawParts",786],[10,"PushUnchecked",786],[10,"CapacityByFactor",786],[10,"InitHashMaps",50],[8,"PlIndexMap",50],[8,"PlIndexSet",50]],"r":[[0,352],[1,352],[470,832],[471,830]],"b":[[332,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"],[334,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"],[595,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[596,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[597,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[598,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[618,"impl-Display-for-PlSmallStr"],[619,"impl-Debug-for-PlSmallStr"],[620,"impl-From%3C%26String%3E-for-PlSmallStr"],[622,"impl-From%3CString%3E-for-PlSmallStr"],[623,"impl-From%3C%26str%3E-for-PlSmallStr"],[624,"impl-From%3CCompactString%3E-for-PlSmallStr"],[625,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[626,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[627,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[628,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[629,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[630,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[631,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[632,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKMCTwAAAAgACgBbAGgAAABqAAEAbQACAHIAFQCJAAoAlQAAAJgABgChAAAAowAPALUABQC9AAkAyAABAMsAAwDTAAAA2AAMAOYAAQDpAAYA8gAGAPsAAAD9AAMAAwEDAAgBCgAUAQ8AJQECACkBCwA2ARcATwECAFMBBgBbASYAgwEAAIUBAACHAQQAjgEVAKUBAACnAQQArwEJALoBAAC8AQIAwAEHAM0BCADbASYABQIAAAkCAgAQAgMAGwIDACACAgAkAgAAJgIBACkCDAA3AgQAPgIFAEUCAgBJAgkAVAIZAG8CDwCAAgsAjQIOAJ0CAACfAgoArAIEALICAAC1AgYAvQIGAMUCAgDJAgAAywIFANICBADZAgAA2wIDAOMCAwDpAgwA9wIDAPwCFQATAwQAGQMCAB0DAAAfAwEA"}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[395035,198160,51191,81448,9284,3376,8569,26333]}